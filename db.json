{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-inside/source/3rdpartylicenses.txt","path":"3rdpartylicenses.txt","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/main.f5cfbba069c3444b.js","path":"main.f5cfbba069c3444b.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/polyfills.13e521fb4f0cbc90.js","path":"polyfills.13e521fb4f0cbc90.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/runtime.a95bc83b747d4636.js","path":"runtime.a95bc83b747d4636.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/styles.79f9d555e464cb1b669d.css","path":"styles.79f9d555e464cb1b669d.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/theme.97aefb00.js","path":"theme.97aefb00.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"40b1ce78cd077a566f50270b0c44f10228c8a610","modified":1697777332670},{"_id":"source/_posts/new-md.md","hash":"f0449a9d7fd5b2e02484466c08298c7b05ca06aa","modified":1699365397236},{"_id":"source/_posts/JS的高级操作.md","hash":"97b709dfe16f44826ee15cffd786a739baed290c","modified":1722049193144},{"_id":"source/_posts/chase-experience-2udw5r.md","hash":"eb31aceb6c5e28ae57449ea32a3f8b5cb3060cde","modified":1722049209193},{"_id":"source/_posts/git-operation-z1k24je.md","hash":"ad8f3aec15bed340cdca001de5f7bbd308feac81","modified":1722049200643},{"_id":"source/_posts/vscode-configuration-tutorial-z1euaf6.md","hash":"68897550f5b6c7692720515d284d648b1708743b","modified":1727627412662},{"_id":"source/_posts/regular-expression-zilx8g.md","hash":"d41a0cd42a66a833dcfdbbc728e261216255f43d","modified":1722049016413},{"_id":"source/function/index.md","hash":"bc13aacb1f873d0aa8f6dd62930ef9b602db3b03","modified":1722012774689},{"_id":"source/_posts/library-management-bm5iw.md","hash":"f530198a3da928df194ae211d70ae1beee0901ad","modified":1722049183074},{"_id":"source/_posts/windows-family-edition-enable-sand-box-1si53v.md","hash":"c9f3f9d9bfa8243b9e684d4a47dd5734a754dda0","modified":1722048992435},{"_id":"node_modules/hexo-theme-inside/LICENSE","hash":"80e42bdfa4902549136f3a2445f16bff8ec46be8","modified":1728096089028},{"_id":"node_modules/hexo-theme-inside/README_zh-Hans.md","hash":"90d88ea06d8fb2831e54cbd72d6cb48d332c65c0","modified":1728096089419},{"_id":"node_modules/hexo-theme-inside/README.md","hash":"ee4499549d7abd1f81a336284821a7c1e4accc6d","modified":1728096089421},{"_id":"node_modules/hexo-theme-inside/package.json","hash":"d023d0a4de2339c4cf22ccbb0f79726dbc1f5a19","modified":1728096089418},{"_id":"node_modules/hexo-theme-inside/lib/config.js","hash":"6237fb39f2f5a39a02dea76ac50af1be74db97d7","modified":1728096089346},{"_id":"node_modules/hexo-theme-inside/lib/utils.js","hash":"64de6387c9fe559d0a602af15a85f8f765a373ac","modified":1728096089411},{"_id":"node_modules/hexo-theme-inside/lib/configSchema.json","hash":"95922a30b014d0cb35b4d7195523110d6dc3573f","modified":1728096089415},{"_id":"node_modules/hexo-theme-inside/scripts/index.js","hash":"2163e057444c2e5e3b786d28500e9cc5467e3c6b","modified":1728096089366},{"_id":"node_modules/hexo-theme-inside/_config.yml","hash":"0ef70cfef3bdc30ba2a1800fd1b29be77f2fdfac","modified":1728096089426},{"_id":"node_modules/hexo-theme-inside/source/_manifest.json","hash":"43f3f8deb791b8121f3c3ce27538e1669ed0e733","modified":1728096089413},{"_id":"node_modules/hexo-theme-inside/source/3rdpartylicenses.txt","hash":"e81145c783e969669bef81dfc5c335152f95cb01","modified":1728096089424},{"_id":"node_modules/hexo-theme-inside/source/polyfills.13e521fb4f0cbc90.js","hash":"eca235992ebabae3b2009e14f30bad0107b5044b","modified":1728096089387},{"_id":"node_modules/hexo-theme-inside/source/theme.97aefb00.js","hash":"4f8eef6ec538107e5588e929fe5a7cb99ec4a3ac","modified":1728096089403},{"_id":"node_modules/hexo-theme-inside/lib/filter/post.js","hash":"9504c6a955562668b043ac390c4f17f65d75e49b","modified":1728096089388},{"_id":"node_modules/hexo-theme-inside/lib/filter/index.js","hash":"ab87beb03adc8f8f273d59dd4403c4da8268ef83","modified":1728096089354},{"_id":"node_modules/hexo-theme-inside/lib/filter/ssr.js","hash":"ed3786805f1be7a791efd7185e25ea41e7322d5e","modified":1728096089395},{"_id":"node_modules/hexo-theme-inside/lib/filter/templates.js","hash":"86b31cec8512f37824dc4b18c89d0cf7b5987de5","modified":1728096089401},{"_id":"node_modules/hexo-theme-inside/lib/generator/config.js","hash":"495d9dee09f186e7ebe96cee18732e0a59b6d0a9","modified":1728096089348},{"_id":"node_modules/hexo-theme-inside/lib/generator/index.js","hash":"31cb0d3cf08b65deb78e7a02110b6424d1fe2f04","modified":1728096089357},{"_id":"node_modules/hexo-theme-inside/lib/generator/manifest.js","hash":"e6eb7d3353fb1e13218535a3987cd31d569fc5bd","modified":1728096089378},{"_id":"node_modules/hexo-theme-inside/lib/generator/sitemap.js","hash":"7939aac2e0d38ec342c0c289b37aed42262e86f2","modified":1728096089394},{"_id":"node_modules/hexo-theme-inside/lib/generator/sw.js","hash":"216cc78d48e0dd3d0cff374c49bdc8e83b2ecd62","modified":1728096089398},{"_id":"node_modules/hexo-theme-inside/lib/helper/ga.js","hash":"adc62bd06443a781d6046d3e78aa57b5e4291611","modified":1728096089352},{"_id":"node_modules/hexo-theme-inside/lib/helper/index.js","hash":"93fbe9d8fe364cf4e2e55cc3d4d3156dde028f56","modified":1728096089357},{"_id":"node_modules/hexo-theme-inside/source/runtime.a95bc83b747d4636.js","hash":"87d7f8aafb83d9eb257b072b8288e28c75b3df91","modified":1728096089392},{"_id":"node_modules/hexo-theme-inside/lib/helper/structured_data.js","hash":"682cfb827880ccfe5a972bb326ab4691cd8c470d","modified":1728096089397},{"_id":"node_modules/hexo-theme-inside/lib/helper/url_trim.js","hash":"a88302c028d2667d9336b72b50e0590e0b2edcd1","modified":1728096089407},{"_id":"node_modules/hexo-theme-inside/lib/renderer/index.js","hash":"c35a04ff425742ad9768f8942a8b3fcb00202ede","modified":1728096089359},{"_id":"node_modules/hexo-theme-inside/lib/plugins/disqus.js","hash":"41f1e3d3d707205e1897246a05ca8acdd88f287b","modified":1728096089350},{"_id":"node_modules/hexo-theme-inside/lib/tag/canvas.js","hash":"24c02f85506c1f412a3386d14f1ceb074e4864e2","modified":1728096089336},{"_id":"node_modules/hexo-theme-inside/lib/tag/gist.js","hash":"e514d8d8cbb8dcc336796a8e1409e4349f64c60a","modified":1728096089352},{"_id":"node_modules/hexo-theme-inside/lib/tag/iframe.js","hash":"be5216fea8b371386a24d0705861bece75f34b71","modified":1728096089353},{"_id":"node_modules/hexo-theme-inside/lib/plugins/manifest.json","hash":"65717c8073e334628d9c2821e848b47d2bac7919","modified":1728096089416},{"_id":"node_modules/hexo-theme-inside/source/styles.79f9d555e464cb1b669d.css","hash":"7ce830c54b9c5edd4fac25a5400d5b1111a9e51b","modified":1728096089043},{"_id":"node_modules/hexo-theme-inside/lib/tag/index.js","hash":"4c6e9e64c1113e4bd3b49659cfe576ab5eaa4cff","modified":1728096089363},{"_id":"node_modules/hexo-theme-inside/lib/plugins/palette.js","hash":"017a730d1429cba19e3579d391e8a660106beecd","modified":1728096089384},{"_id":"node_modules/hexo-theme-inside/lib/plugins/cipher.js","hash":"9dff0e134f437bf78a4e1cd005ebd10774c97980","modified":1728096089342},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/categories.js","hash":"276dfc2d9e010a9f3815d76571a60ddcdb04b1fe","modified":1728096089338},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/archives.js","hash":"5eb615b28481aa7c9212acd58a88304dbc818914","modified":1728096089333},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/index.js","hash":"94c35a61bb274ae49c3e77bd4037ceab8e9b8df3","modified":1728096089356},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/posts.js","hash":"cf7cb8b58714b457a028b14c92958127839aba26","modified":1728096089390},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/pages.js","hash":"26b314ba0df5acf8b18a152811441b58a69201d0","modified":1728096089381},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/search.js","hash":"d874785d284e1b8d18dbcb5358888e522b45988a","modified":1728096089393},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/mixins.js","hash":"e1377839483f2e6dacf5f158bc29d21e5093f27a","modified":1728096089380},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/tags.js","hash":"2a10e4c4d9c92e0ac26b3884511f12472d43898f","modified":1728096089401},{"_id":"node_modules/hexo-theme-inside/languages/en.yml","hash":"9cb7e597a23fc9e1cf10b4f283ccbc0ea97cbb20","modified":1728096089430},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/index.js","hash":"cbad561e5fbaa126afcb7df990900afa4fc652ee","modified":1728096089361},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/properties.js","hash":"bb306150254015f9bf6f9e58340eb521231a7e55","modified":1728096089391},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/collapse.js","hash":"eda5c79868f2aac2a2d5f82fe8a483c88f0a43da","modified":1728096089345},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/tree.js","hash":"f7f30e3a1a5d29864f42b693f7a4a6c0a7fb05c2","modified":1728096089406},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/timeline.js","hash":"16ffd617d146d672847a566a94e88aece0b642ea","modified":1728096089405},{"_id":"node_modules/hexo-theme-inside/layout/index.njk","hash":"c9badf67c9048e1c46a4c6f232e33d33937342f0","modified":1728096089422},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/index.js","hash":"6d185c7c171606907e663b0ab99a9bcafeef9783","modified":1728096089363},{"_id":"node_modules/hexo-theme-inside/languages/zh-Hans.yml","hash":"c19d12bc4326f7963c7a21b83bd4279213310bc2","modified":1728096089432},{"_id":"node_modules/hexo-theme-inside/languages/zh-Hant.yml","hash":"e35078d3d5e6299178135aabdbb1b2a95252a42a","modified":1728096089433},{"_id":"node_modules/hexo-theme-inside/languages/ja.yml","hash":"757de0ada468d30ff0b575981e3fc3b0c1d7a143","modified":1728096089431},{"_id":"node_modules/hexo-theme-inside/source/main.f5cfbba069c3444b.js","hash":"f0c447cec7e6e1cf38d57602f4de868437562469","modified":1728096089377},{"_id":"node_modules/hexo-theme-inside/source/_ssr.js","hash":"ba786c5b0622c8575f5b20052e7afc2b237505c4","modified":1728096089331}],"Category":[],"Data":[],"Page":[{"title":"index","date":"2023-08-28T10:39:17.000Z","tags":null,"_content":"\n# 欢迎查看EmptyLight\n本站由[Hexo](https://hexo.io)提供技术支持，使用主题[inside](https://github.com/ikeq/hexo-theme-inside)，并在[Github Page](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site)上发布运行。","source":"about/index.md","raw":"---\ntitle: index\ndate: 2023-08-28 18:39:17\ntags:\n---\n\n# 欢迎查看EmptyLight\n本站由[Hexo](https://hexo.io)提供技术支持，使用主题[inside](https://github.com/ikeq/hexo-theme-inside)，并在[Github Page](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site)上发布运行。","updated":"2023-10-20T04:48:52.670Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm1vkmaab00006gmegzvphvdw"},{"title":"functions","date":"2023-08-28T11:00:11.000Z","tags":null,"_content":"\n# 支持的功能\n本站点支持连接到原站点中提供支持的功能，并且还在不断更新。  \n请注意，这里的链接都是外链，并且托管在腾讯云上。请确认自己到腾讯云服务器的连接速度。\n\n# 支持列表\n- [Base64](https://cdn-res.emptylight.cn/website/function/base64.html)\n- [EncodeURI](https://cdn-res.emptylight.cn/website/function/uricoding.html)\n- [LinkTo](https://cdn-res.emptylight.cn/website/function/link.html)(不可用)\n","source":"function/index.md","raw":"---\ntitle: functions\ndate: 2023-08-28 19:00:11\ntags:\n---\n\n# 支持的功能\n本站点支持连接到原站点中提供支持的功能，并且还在不断更新。  \n请注意，这里的链接都是外链，并且托管在腾讯云上。请确认自己到腾讯云服务器的连接速度。\n\n# 支持列表\n- [Base64](https://cdn-res.emptylight.cn/website/function/base64.html)\n- [EncodeURI](https://cdn-res.emptylight.cn/website/function/uricoding.html)\n- [LinkTo](https://cdn-res.emptylight.cn/website/function/link.html)(不可用)\n","updated":"2024-07-26T16:52:54.689Z","path":"function/index.html","comments":1,"layout":"page","_id":"cm1vkmaag00026gmegm8t0cya"}],"Post":[{"title":"JS的高级操作","date":"2023-08-20T15:21:13.000Z","lastmod":"2023-08-21T06:25:20.000Z","_content":"\n# JS的高级操作\n\n## 复制文本或其他内容到剪切板\n\n对剪切板的操作使用 `navigator` ​进行，这个操作不会立即执行，而是会生成一个 `promise` ​对象，具体的操作由浏览器异步执行，返回结果到 `promise` ​对象中。\n\n```js\n// 写入文本到剪切板\nnavigator.clipboard.writeText(text);\n// 写入其他内容到剪切板\nnavigator.clipboard.write(object);\n// 读取剪切板的文本\nvar text = navigator.clipboard.readText();\n// 读取剪切板的内容\nvar object = navigator.clipboard.read();\n```\n\n如果想要根据结果做出相应的操作，就需要使用 `.then()` ​来获取返回的结果。结构为 `.then(successed funtion, failed function)`​，内部放置的是 `function` ​块，最好使用 `function() {}` ​包裹代码块。\n\n```js\nnavigator.clipboard.writeText(text).then(function() {alert(\"success\");}, function() {alert(\"failed\");});\n\n// 对这个结构进行展开则是\nnavigator.clipboard.writeText(text).then(\n    function() {alert(\"success\");}, //success\n    function() {alert(\"failed\");} //failed\n);\n```\n\n在浏览器执行操作之前最好使用 `premission` ​获取权限，但是文档讲的不明不白的，不会。\n\n## 在页面内通过 JS 设置一个通知\n\n```js\n// 设置通知的函数，其中的参数分别是：显示的消息，通知状态(success/fail)，持续时间(ms)\nfunction notification(message, state, duration)\n{\n    // 创建一个div来显示消息\n    var notification = document.createElement('div');\n    // 内部显示的文字内容\n    notification.textContent = message;\n    // 通过style属性进行显示位置设定\n    // 固定显示位置，方便下面调整位置\n    notification.style.position = 'fixed';\n    // 距离顶部距离\n    notification.style.top = '10px';\n    // 距离右部距离，此处的calc(49%)不能完全居中，需要调整\n    notification.style.right = 'calc(49%)';\n    // 忘记是什么参数了\n    notification.style.padding = '10px';\n    // 根据传入的状态来显示背景，达成不同通知效果\n    if (state == \"success\")\n        notification.style.backgroundColor = 'white';\n    else if (state == \"fail\")\n        notification.style.backgroundColor = 'yellow';\n    // 边框\n    notification.style.border = '1px solid black';\n    // 曲角\n    notification.style.borderRadius = '5px';\n    // 显示在屏幕上，直接添加到body内，成为body的子元素\n    document.body.appendChild(notification);\n    // 设置一个定时器来移除子元素，持续时间为输入的时间\n    setTimeout(function ()\n    {\n        document.body.removeChild(notification);\n    }, duration);\n}\n```\n\n## 通过 Base64 进行加解密\n\njs 中内置有一个 Base64 的方法，但是只支持 AscII 字符转换，这个肯定不够用，但是还是记录如下\n\n```js\n// 加密\nvar inputText=document.getElementById(\"input\").value;\nvar outputText=btoa(inputText);\n\n// 解密\nvar inputText=document.getElementById(\"input\").value;\nvar outputText=atob(inputText);\n```\n\n通过引入 [js-base64](https://www.npmjs.com/package/js-base64) 库的方法，我们可以支持任意字符的 Base64 加解密\n\n```html\n<!-- 通过网络引入所需资源 -->\n<script src=\"https://cdn.jsdelivr.net/npm/js-base64@3.7.5/base64.min.js\"></script>\n```\n\n```js\n// 在js中使用js-base64\n// 加密\nvar inputText=document.getElementById(\"input\");\nvar outputText=Base64.encode(inputText);\n\n// 解密\nvar inputText=document.getElementById(\"input\");\nvar outputText=Base64.decode(inputText);\n```\n","source":"_posts/JS的高级操作.md","raw":"---\ntitle: JS的高级操作\ndate: 2023-08-20T23:21:13Z\nlastmod: 2023-08-21T14:25:20Z\ntags:\n---\n\n# JS的高级操作\n\n## 复制文本或其他内容到剪切板\n\n对剪切板的操作使用 `navigator` ​进行，这个操作不会立即执行，而是会生成一个 `promise` ​对象，具体的操作由浏览器异步执行，返回结果到 `promise` ​对象中。\n\n```js\n// 写入文本到剪切板\nnavigator.clipboard.writeText(text);\n// 写入其他内容到剪切板\nnavigator.clipboard.write(object);\n// 读取剪切板的文本\nvar text = navigator.clipboard.readText();\n// 读取剪切板的内容\nvar object = navigator.clipboard.read();\n```\n\n如果想要根据结果做出相应的操作，就需要使用 `.then()` ​来获取返回的结果。结构为 `.then(successed funtion, failed function)`​，内部放置的是 `function` ​块，最好使用 `function() {}` ​包裹代码块。\n\n```js\nnavigator.clipboard.writeText(text).then(function() {alert(\"success\");}, function() {alert(\"failed\");});\n\n// 对这个结构进行展开则是\nnavigator.clipboard.writeText(text).then(\n    function() {alert(\"success\");}, //success\n    function() {alert(\"failed\");} //failed\n);\n```\n\n在浏览器执行操作之前最好使用 `premission` ​获取权限，但是文档讲的不明不白的，不会。\n\n## 在页面内通过 JS 设置一个通知\n\n```js\n// 设置通知的函数，其中的参数分别是：显示的消息，通知状态(success/fail)，持续时间(ms)\nfunction notification(message, state, duration)\n{\n    // 创建一个div来显示消息\n    var notification = document.createElement('div');\n    // 内部显示的文字内容\n    notification.textContent = message;\n    // 通过style属性进行显示位置设定\n    // 固定显示位置，方便下面调整位置\n    notification.style.position = 'fixed';\n    // 距离顶部距离\n    notification.style.top = '10px';\n    // 距离右部距离，此处的calc(49%)不能完全居中，需要调整\n    notification.style.right = 'calc(49%)';\n    // 忘记是什么参数了\n    notification.style.padding = '10px';\n    // 根据传入的状态来显示背景，达成不同通知效果\n    if (state == \"success\")\n        notification.style.backgroundColor = 'white';\n    else if (state == \"fail\")\n        notification.style.backgroundColor = 'yellow';\n    // 边框\n    notification.style.border = '1px solid black';\n    // 曲角\n    notification.style.borderRadius = '5px';\n    // 显示在屏幕上，直接添加到body内，成为body的子元素\n    document.body.appendChild(notification);\n    // 设置一个定时器来移除子元素，持续时间为输入的时间\n    setTimeout(function ()\n    {\n        document.body.removeChild(notification);\n    }, duration);\n}\n```\n\n## 通过 Base64 进行加解密\n\njs 中内置有一个 Base64 的方法，但是只支持 AscII 字符转换，这个肯定不够用，但是还是记录如下\n\n```js\n// 加密\nvar inputText=document.getElementById(\"input\").value;\nvar outputText=btoa(inputText);\n\n// 解密\nvar inputText=document.getElementById(\"input\").value;\nvar outputText=atob(inputText);\n```\n\n通过引入 [js-base64](https://www.npmjs.com/package/js-base64) 库的方法，我们可以支持任意字符的 Base64 加解密\n\n```html\n<!-- 通过网络引入所需资源 -->\n<script src=\"https://cdn.jsdelivr.net/npm/js-base64@3.7.5/base64.min.js\"></script>\n```\n\n```js\n// 在js中使用js-base64\n// 加密\nvar inputText=document.getElementById(\"input\");\nvar outputText=Base64.encode(inputText);\n\n// 解密\nvar inputText=document.getElementById(\"input\");\nvar outputText=Base64.decode(inputText);\n```\n","slug":"JS的高级操作","published":1,"updated":"2024-07-27T02:59:53.144Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm1vkmaad00016gmegg9d4yuv"},{"title":"git操作","date":"2023-10-25T10:39:54.000Z","updated":"2023-11-07T14:04:43.000Z","comments":1,"toc":true,"_content":"\n\n\n# git操作\n\n# 删除文件\n\n```bash\n# 删除文件\ngit rm files_name\n# 删除文件夹\ngit rm -r dirs_name\n# 仅从索引中删除文件(本地不删除)\ngit rm --cached files_name\n# 仅从索引中删除文件夹(本地不删除)\ngit rm --cached -r dirs_name\n```\n\n# 从所有历史记录中删除文件\n\n```bash\n# 从历史记录中删除文件并不删除本地文件\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch files_name' --prune-empty --tag-name-filter cat -- --all\n# 从历史记录中删除文件夹并不删除本地文件\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch -r dirs_name' --prune-empty --tagname-filter cat -- --all\n```\n\n值得注意的是，因为需要先行提交才能删除文件，所以在删除时也会修改最新一次提交导致本地文件被删除。所以在运行命令前建议先备份工作区文件夹。\n\n# 移动\n\n```java\n# 在git中移动文件\ngit mv file new_file\n```\n\n# 变基\n\n```bash\ngit rebase\n```\n\n# 合并\n\n```bash\n# 将分支branch_name合并入当前分支\ngit merge branch_name\n# 退出合并\ngit merge --abort\n# 合并时完全忽略空格\ngit merge -Xignore-all-space\n# 合并时将一个或多个空格视为等价的\ngit merge -Xignore-space-change\n```\n\n# 拣选\n\n```bash\ngit cherry-pick sha-1\n```\n\n拉取 sha-1 提交到当前分支，并且提供一个新的 sha-1 给这次提交\n\n# 标签\n\n```bash\n# 显示所有标签\ngit tag\n# 显示匹配的标签\ngit tag -l \"1.*\"\n# 添加附注标签\ngit tag -a tag_name -m \"tag_message\"\n# 显示附注标签\ngit tag show tag_name\n# 添加轻量标签(不需要任何选项)\ngit tag tag_name\n# 为历史提交sha-1添加标签\ngit tag -a tag_name sha-1\n# 将标签推送到远程origin\ngit push origin --tags\n# 删除标签tag_name\ngit tag -d tag_name\n# 在远程origin删除标签tag_name\ngit push origin :refs/tags/tag_name\ngit push --delete tag_name\n```\n\n# Rerere\n\nRerere 允许 git 记住解决冲突的方法，并在下一次出现同样情况时自动解决\n\n但是不能乱改，git 会记住你每一次修改的变更\n\n```bash\ngit config --global rerere.enable true\n```\n\n# 设置别名\n\n```bash\n# 为checkout设置co别名\ngit config --global alias.co checkout\n```\n\n# 获取远端提交情况\n\n```bash\n# 一般情况下适用\ngit fetch\n# 需要刷新远程配置时\n# 远程已有新提交\ngit fetch -f/--force\n# 远程没有新提交\ngit fetch --refetch\n```\n\n# 临时禁用 SSL\n\n适用于 watt toolkit 的 hosts 代理模式，出现 SSL 报错情况\n\n```bash\n# 通过添加env对本条命令禁用SSL校验\nenv GIT_SSL_NO_VERIFY=true git push origin\nenv GIT_SSL_NO_VERIFY=true git pull\nenv GIT_SSL_NO_VERIFY=true git fetch\n```\n\n# 切换远程 URL\n\n使用 HTTPS 总是会遇到一些奇奇怪怪的问题，这时可以将远程 URL 更改成 SSH 连接来避免这些奇奇怪怪的问题\n\n```bash\n# 在git bash里面的命令长这样\ngit remote set-url <name> <new-url>\n# 写上参数之后要长这样\ngit remote set-url origin git@github.com:user_name/repo.git\ngit remote set-url origin git@gitee.com:user_name/repo.git\n```\n","source":"_posts/git-operation-z1k24je.md","raw":"---\ntitle: git操作\ndate: '2023-10-25 18:39:54'\nupdated: '2023-11-07 22:04:43'\npermalink: /post/git-operation-z1k24je.html\ncomments: true\ntoc: true\ntags:\n---\n\n\n\n# git操作\n\n# 删除文件\n\n```bash\n# 删除文件\ngit rm files_name\n# 删除文件夹\ngit rm -r dirs_name\n# 仅从索引中删除文件(本地不删除)\ngit rm --cached files_name\n# 仅从索引中删除文件夹(本地不删除)\ngit rm --cached -r dirs_name\n```\n\n# 从所有历史记录中删除文件\n\n```bash\n# 从历史记录中删除文件并不删除本地文件\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch files_name' --prune-empty --tag-name-filter cat -- --all\n# 从历史记录中删除文件夹并不删除本地文件\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch -r dirs_name' --prune-empty --tagname-filter cat -- --all\n```\n\n值得注意的是，因为需要先行提交才能删除文件，所以在删除时也会修改最新一次提交导致本地文件被删除。所以在运行命令前建议先备份工作区文件夹。\n\n# 移动\n\n```java\n# 在git中移动文件\ngit mv file new_file\n```\n\n# 变基\n\n```bash\ngit rebase\n```\n\n# 合并\n\n```bash\n# 将分支branch_name合并入当前分支\ngit merge branch_name\n# 退出合并\ngit merge --abort\n# 合并时完全忽略空格\ngit merge -Xignore-all-space\n# 合并时将一个或多个空格视为等价的\ngit merge -Xignore-space-change\n```\n\n# 拣选\n\n```bash\ngit cherry-pick sha-1\n```\n\n拉取 sha-1 提交到当前分支，并且提供一个新的 sha-1 给这次提交\n\n# 标签\n\n```bash\n# 显示所有标签\ngit tag\n# 显示匹配的标签\ngit tag -l \"1.*\"\n# 添加附注标签\ngit tag -a tag_name -m \"tag_message\"\n# 显示附注标签\ngit tag show tag_name\n# 添加轻量标签(不需要任何选项)\ngit tag tag_name\n# 为历史提交sha-1添加标签\ngit tag -a tag_name sha-1\n# 将标签推送到远程origin\ngit push origin --tags\n# 删除标签tag_name\ngit tag -d tag_name\n# 在远程origin删除标签tag_name\ngit push origin :refs/tags/tag_name\ngit push --delete tag_name\n```\n\n# Rerere\n\nRerere 允许 git 记住解决冲突的方法，并在下一次出现同样情况时自动解决\n\n但是不能乱改，git 会记住你每一次修改的变更\n\n```bash\ngit config --global rerere.enable true\n```\n\n# 设置别名\n\n```bash\n# 为checkout设置co别名\ngit config --global alias.co checkout\n```\n\n# 获取远端提交情况\n\n```bash\n# 一般情况下适用\ngit fetch\n# 需要刷新远程配置时\n# 远程已有新提交\ngit fetch -f/--force\n# 远程没有新提交\ngit fetch --refetch\n```\n\n# 临时禁用 SSL\n\n适用于 watt toolkit 的 hosts 代理模式，出现 SSL 报错情况\n\n```bash\n# 通过添加env对本条命令禁用SSL校验\nenv GIT_SSL_NO_VERIFY=true git push origin\nenv GIT_SSL_NO_VERIFY=true git pull\nenv GIT_SSL_NO_VERIFY=true git fetch\n```\n\n# 切换远程 URL\n\n使用 HTTPS 总是会遇到一些奇奇怪怪的问题，这时可以将远程 URL 更改成 SSH 连接来避免这些奇奇怪怪的问题\n\n```bash\n# 在git bash里面的命令长这样\ngit remote set-url <name> <new-url>\n# 写上参数之后要长这样\ngit remote set-url origin git@github.com:user_name/repo.git\ngit remote set-url origin git@gitee.com:user_name/repo.git\n```\n","slug":"git-operation-z1k24je","published":1,"__permalink":"/post/git-operation-z1k24je.html","layout":"post","photos":[],"link":"","_id":"cm1vkmaag00036gme1wg5gn79"},{"title":"追番体验","date":"2023-12-29T15:25:02.000Z","updated":"2023-12-29T16:35:02.000Z","comments":1,"toc":true,"_content":"\n\n\n# 追番体验\n\n# 前言\n\n毫无疑问，追番当然是非常重要的一件事情。\n\n在现在这个环境，要追番也不是一件容易的事情。b站追番删减版又慢半拍，a站也少见于追番过程中，网上的视频站也偶尔能淘出一些宝贝，但更多时候是xx赌场广告满天飞。\n\n这种时候，在尝试过多种追番方案之后，我选择了较为整体的追番安排——使用种子站获取汉化组的最新资源。\n\n这个选择代表着我需要了解bt下载的各种知识，同时能够找到长期稳定的发布站——或是源站，或是镜像站，又需要找到一个能够同时承担接管浏览器http下载和bt下载功能的下载器。之后就是长期跟进番剧进度，找汉化组资源。\n\n以下就列出我目前的解决方案。于2023-12-30完成，2024-05-06更新。不保证没有错别字（特别是软件名字、网站名字等）。\n\n# 下载观看（很麻烦）\n\n## 了解知识\n\nbt下载不同于http下载。我个人的理解：http下载通常指从服务器到客户端的下载，只要服务器不挂不墙，要下载内容还是很方便的，比如网盘、网站内下载链接等等等等。。。。bt下载是p2p下载，从一个用户到另一个用户，你下载的资源是其他下载这个资源的人发送给你的，不是直接从汉化组服务器发出来给你的。这就意味着你的下载速度完全和其他人的上传速度挂钩。一般情况下，汉化组或者发布组都会有一个服务器，里面长期挂载着自己资源的上传，这也是资源首先上传的来源。之后，在有几个人接收完资源之后，如果是正规的bt客户端，就会有一段时间的上传操作，这个时候用户的下载客户端就变成了上传客户端，给其他下载的人发送内容。长此以往，循环往复。这就是bt下载，也是为什么要在下载完成后挂一段时间上传的原因（尽管很少有上传的时候）。\n\n因为国内的网络环境，多数情况下bt下载和上传都不会显得容易。这时候就需要用到路由器的upnp功能（或者叫端口转发），这个功能我无法过多解释，建议自行bing搜索。其次，bt下载是用户之间直接连接，为了找到其他人，你需要知道其他人的ip地址才能连接到他们。直接在互联网上广播自己的ip地址显然不合适，这时候就需要有服务器来间接连接用户，这就是tracker服务器，这些服务器一般由发布站维护，记录当前上传/下载种子的人，通过查询服务器信息可以去连接其他人，尝试沟通对方是否有自己在下载的资源。连接成功，就可以开始从对方那里接收数据了。\n\n知道了基础信息，就需要有合适的工具了。bt下载工具很多，qbittorrent，qbittorrentEE，bitComit，Motrix，transmission，xdown等等，很多人有发推荐，为了减轻负担，我选择了有自动更新tracker服务器功能的软件，比如qbittorrentEE，Motrix，xdown，下文根据Motrix和xdown进行介绍。\n\n## 网站\n\n现存的发布站不少，网上很容易搜到的，我放个链接在这里：[ACG.RIP](https://acgrip.art/ \"ACG.RIP\")。当然，你自己能搜到别的发布站肯定更好，多在收藏夹里面放几个网站，到了出问题的时候还有备用站能看。可以尝试搜bt下载站，动漫下载站等常见关键词，或者搜常见字幕组的名字，这种情况下容易找到网站。\n\n在发布动漫资源的网站外，还有其他资源的网站，比如发布字幕的网站等，这些别的网站还请自行搜索，我没有用到这类网站。\n\n## 下载器\n\n前文提过，我以Motrix和xdown为基础进行介绍。qbittorrentEE我记得是能实现下面大部分功能的，但是只支持bt下载。\n\n> 备注：xdown是qbittorrent改，仅添加了http下载功能，现在已经换了。\n>\n> Motrix长期不更新，可以上GitHub看看Motrix改。\n\n在安装完下载器（或者是不需要安装的解压版）之后，还请把设置全部看一遍，尽量设置好，不要嫌麻烦。我列出一些我比较关注的设置项。\n\n1. http下载设置。接管浏览器下载的文件、文件类型。我的下载器是接管浏览器下载的，Motrix使用edge浏览器的[Aria2 Explorer](https://microsoftedge.microsoft.com/addons/detail/jjfgljkjddpcpfapejfkelkbjbehagbh \"Aria2 Explorer\")扩展接管，这个扩展能够比较好地接管下载；xdown使用自带扩展接管下载，之前跟开发者邮件后得知xdown的扩展会首先尝试启动xdown，所以有时需要多点击下载几次。\n2. http下载线程。Motrix和xdown都是多线程下载器，能够有效加快下载速度（度盘除外）。\n3. bt下载设置。bt下载完成后的上传时间、分享率。上传时间和分享率直接关系到你给其他人发送多少内容。在有能力的时候还请尽量多上传一会发给别人。\n4. tracker服务器设置。Motrix和xdown都可以自动更新tracker服务器，并且自带服务器。这种情况下默认每天自动更新一次服务器，也不用自己动手。这就是我选择Motrix和xdown的较主要原因。\n5. RSS订阅源。这个功能比较老了，建议自己搜一下。它是能够读取一个xml网页里面的文章信息。我前文提到的ACG.RIP有提供RSS订阅源，但是Motrix是没有这个功能的，是xdown有这个功能。使用RSS订阅源，我关注了几个常看的字幕组，在网站上有内容更新之后，RSS订阅源网页自动更新，xdown就能获取到更新的文章内容（也就是新发布的番剧内容），可以通过这个打开浏览器页面或者直接下载bt种子。\n\n在设置好之后，一般就能比较好地下载内容了。前面提到过，是比较正规的bt下载器，而根据以往长期的使用体验，在下载这方面，似乎一直都是迅雷比较出色，又活得比较久，为什么大家都不推荐迅雷呢？因为迅雷的下载策略。迅雷的下载是从所有的bt下载客户端下载，但是只上传到自己的服务器和自己的客户端，那么其他需要下载的用户不使用迅雷就无法从迅雷下载内容，迅雷这番操作也被称为吸血，所以迅雷也有被称为吸血雷。但是有时一些无人做种的种子还是可以去迅雷试试运气的，说不定迅雷服务器就有资源同时未被迅雷和谐呢？\n\n## 找资源\n\n一般可以通过b站了解下季度新番，或者看比较出名的番剧网站，又或者是想要补什么老番？\n\n但是，由于bt下载的特性，新内容比较容易有更多人下载上传，老内容就容易没有人做种从而变成死种（就是无法下载，因为没人上传）。这时候要补老番就显得比较麻烦，所以我补老番还是会更多地试试网盘。\n\n对于新番，可以看看别人的评价，再根据自己的喜好评估是否要看。\n\n对于发布站上一长串的番剧文件名，我推荐自行搜索了解，可以找到整体从前往后的各部分解释，又能找到每个位置参数的具体解释，网上还是有很多教程的。我不便展开。\n\n# 网站在线观看（总比下载简单）\n\n这个没有多少可以说的，现在网上资源多的很，很多资源都可以在线观看，注意上网安全即可。找不到网站可以看看我下面介绍的番剧记录软件。\n\n# 记录观看进度（单独软件，支持云同步）\n\n从GitHub上找到了一个项目，可以记录番剧的追番进度，同时还可以跳转网站，我在此记录我的配置过程。在不在b站看番都可以用这个记录进度，我的可塑性记忆因为b站版权到期，现在已经找不到了（哭哭）。\n\n## 安装\n\n项目的网址：[漫迹：动漫清单软件，记录动漫计划和观看历史 (github.com)](https://github.com/linyi102/anime_trace)\n\n在release里面可以选择下载不同平台的安装包，如图。\n\n​![Github release](https://cdn-res.emptylight.cn/share/img/image-20240506111246-jqh4lgr.png)​\n\n其中，`win-install`​是Windows版本的安装包，`windows.zip`​是Windows版本的便携版，`android.apk`​是安卓32位的安装包，现在不建议安装，`arm64-v8a`​是安卓64位的安装包，现在的手机都只建议安装这个。\n\n在安装好之后，使用Windows版本的示例图作为示例演示。\n\n![windows example](https://cdn-res.emptylight.cn/share/img/image-20240506112753-q9d49iy.png)​\n\n左侧的按钮是首页、搜索、观看历史、笔记、更多设置。\n\n其中首页是所有动漫的示例。可以添加动漫源找到的动漫，也可以自定义输入动漫。右上角是云同步（使用webdav）、外观设置和搜索。可以为动漫根据追番的不同进度设置分类。在标记最后一集为已看时，可以自动移动番剧到特定分类。\n\n左侧的搜索可以查找动漫，点击搜索源的更多选项可以选择启用什么搜索源，使用默认的动漫源可以获取开播时间，地区，类型等，但是动漫的集数很容易不对，使用bangumi可以获取完整的简介、集数、开播时间等，但是番剧开播地区、类型需要自己手动填。具体自己抉择。\n\n自定义动漫则不需要添加搜索源的结果，点击自定义就可以创建自定义的记录。（见图中的亚特兰蒂斯生存）具体的设置过程不会有什么区别。\n\n左侧的观看历史可以按照月份排列你当月的观看番剧。\n\n左侧的笔记可以显示你所有笔记和评价。\n\n左侧的更多则是应用设置页。\n\n下面对番剧具体内容设置进行讲解。\n\n​![image](https://cdn-res.emptylight.cn/share/img/image-20240506114329-vn1vnoz.png)​\n\n如图是番剧的详情页面，点击编辑可以进入详细的编辑页面。右上角的按钮分别是外观设置和更多，更多里面的更新动漫是使用填写的动漫链接更新动漫信息，迁移动漫可以使用你启用的动漫源搜索这个动漫，可以选择使用不同网址的信息组成你的动漫信息。\n\n可以设置观看周目，添加标签，点击每一集的左边的复选框可以标记该集为已看，观看时间是当时的时间，点击中间部分可以写笔记，右侧的更多按钮可以修改观看时间，设置每一集的名字等。\n\n## 云同步\n\n云同步很简单，内置了坚果云的webdav云同步网址，只需要填入自己的坚果云账号和为应用生成的密码就可以使用坚果云的云同步。\n\n# 结尾\n\n因为写的长了，花的时间长，已经忘记要写到哪里了，所以在此又补充了一些内容。如有疑问或需要补充的内容，可以通过站点内的邮件联系我。感谢阅读。\n","source":"_posts/chase-experience-2udw5r.md","raw":"---\ntitle: 追番体验\ndate: '2023-12-29 23:25:02'\nupdated: '2023-12-30 00:35:02'\npermalink: /post/chase-experience-2udw5r.html\ncomments: true\ntoc: true\ntags:\n---\n\n\n\n# 追番体验\n\n# 前言\n\n毫无疑问，追番当然是非常重要的一件事情。\n\n在现在这个环境，要追番也不是一件容易的事情。b站追番删减版又慢半拍，a站也少见于追番过程中，网上的视频站也偶尔能淘出一些宝贝，但更多时候是xx赌场广告满天飞。\n\n这种时候，在尝试过多种追番方案之后，我选择了较为整体的追番安排——使用种子站获取汉化组的最新资源。\n\n这个选择代表着我需要了解bt下载的各种知识，同时能够找到长期稳定的发布站——或是源站，或是镜像站，又需要找到一个能够同时承担接管浏览器http下载和bt下载功能的下载器。之后就是长期跟进番剧进度，找汉化组资源。\n\n以下就列出我目前的解决方案。于2023-12-30完成，2024-05-06更新。不保证没有错别字（特别是软件名字、网站名字等）。\n\n# 下载观看（很麻烦）\n\n## 了解知识\n\nbt下载不同于http下载。我个人的理解：http下载通常指从服务器到客户端的下载，只要服务器不挂不墙，要下载内容还是很方便的，比如网盘、网站内下载链接等等等等。。。。bt下载是p2p下载，从一个用户到另一个用户，你下载的资源是其他下载这个资源的人发送给你的，不是直接从汉化组服务器发出来给你的。这就意味着你的下载速度完全和其他人的上传速度挂钩。一般情况下，汉化组或者发布组都会有一个服务器，里面长期挂载着自己资源的上传，这也是资源首先上传的来源。之后，在有几个人接收完资源之后，如果是正规的bt客户端，就会有一段时间的上传操作，这个时候用户的下载客户端就变成了上传客户端，给其他下载的人发送内容。长此以往，循环往复。这就是bt下载，也是为什么要在下载完成后挂一段时间上传的原因（尽管很少有上传的时候）。\n\n因为国内的网络环境，多数情况下bt下载和上传都不会显得容易。这时候就需要用到路由器的upnp功能（或者叫端口转发），这个功能我无法过多解释，建议自行bing搜索。其次，bt下载是用户之间直接连接，为了找到其他人，你需要知道其他人的ip地址才能连接到他们。直接在互联网上广播自己的ip地址显然不合适，这时候就需要有服务器来间接连接用户，这就是tracker服务器，这些服务器一般由发布站维护，记录当前上传/下载种子的人，通过查询服务器信息可以去连接其他人，尝试沟通对方是否有自己在下载的资源。连接成功，就可以开始从对方那里接收数据了。\n\n知道了基础信息，就需要有合适的工具了。bt下载工具很多，qbittorrent，qbittorrentEE，bitComit，Motrix，transmission，xdown等等，很多人有发推荐，为了减轻负担，我选择了有自动更新tracker服务器功能的软件，比如qbittorrentEE，Motrix，xdown，下文根据Motrix和xdown进行介绍。\n\n## 网站\n\n现存的发布站不少，网上很容易搜到的，我放个链接在这里：[ACG.RIP](https://acgrip.art/ \"ACG.RIP\")。当然，你自己能搜到别的发布站肯定更好，多在收藏夹里面放几个网站，到了出问题的时候还有备用站能看。可以尝试搜bt下载站，动漫下载站等常见关键词，或者搜常见字幕组的名字，这种情况下容易找到网站。\n\n在发布动漫资源的网站外，还有其他资源的网站，比如发布字幕的网站等，这些别的网站还请自行搜索，我没有用到这类网站。\n\n## 下载器\n\n前文提过，我以Motrix和xdown为基础进行介绍。qbittorrentEE我记得是能实现下面大部分功能的，但是只支持bt下载。\n\n> 备注：xdown是qbittorrent改，仅添加了http下载功能，现在已经换了。\n>\n> Motrix长期不更新，可以上GitHub看看Motrix改。\n\n在安装完下载器（或者是不需要安装的解压版）之后，还请把设置全部看一遍，尽量设置好，不要嫌麻烦。我列出一些我比较关注的设置项。\n\n1. http下载设置。接管浏览器下载的文件、文件类型。我的下载器是接管浏览器下载的，Motrix使用edge浏览器的[Aria2 Explorer](https://microsoftedge.microsoft.com/addons/detail/jjfgljkjddpcpfapejfkelkbjbehagbh \"Aria2 Explorer\")扩展接管，这个扩展能够比较好地接管下载；xdown使用自带扩展接管下载，之前跟开发者邮件后得知xdown的扩展会首先尝试启动xdown，所以有时需要多点击下载几次。\n2. http下载线程。Motrix和xdown都是多线程下载器，能够有效加快下载速度（度盘除外）。\n3. bt下载设置。bt下载完成后的上传时间、分享率。上传时间和分享率直接关系到你给其他人发送多少内容。在有能力的时候还请尽量多上传一会发给别人。\n4. tracker服务器设置。Motrix和xdown都可以自动更新tracker服务器，并且自带服务器。这种情况下默认每天自动更新一次服务器，也不用自己动手。这就是我选择Motrix和xdown的较主要原因。\n5. RSS订阅源。这个功能比较老了，建议自己搜一下。它是能够读取一个xml网页里面的文章信息。我前文提到的ACG.RIP有提供RSS订阅源，但是Motrix是没有这个功能的，是xdown有这个功能。使用RSS订阅源，我关注了几个常看的字幕组，在网站上有内容更新之后，RSS订阅源网页自动更新，xdown就能获取到更新的文章内容（也就是新发布的番剧内容），可以通过这个打开浏览器页面或者直接下载bt种子。\n\n在设置好之后，一般就能比较好地下载内容了。前面提到过，是比较正规的bt下载器，而根据以往长期的使用体验，在下载这方面，似乎一直都是迅雷比较出色，又活得比较久，为什么大家都不推荐迅雷呢？因为迅雷的下载策略。迅雷的下载是从所有的bt下载客户端下载，但是只上传到自己的服务器和自己的客户端，那么其他需要下载的用户不使用迅雷就无法从迅雷下载内容，迅雷这番操作也被称为吸血，所以迅雷也有被称为吸血雷。但是有时一些无人做种的种子还是可以去迅雷试试运气的，说不定迅雷服务器就有资源同时未被迅雷和谐呢？\n\n## 找资源\n\n一般可以通过b站了解下季度新番，或者看比较出名的番剧网站，又或者是想要补什么老番？\n\n但是，由于bt下载的特性，新内容比较容易有更多人下载上传，老内容就容易没有人做种从而变成死种（就是无法下载，因为没人上传）。这时候要补老番就显得比较麻烦，所以我补老番还是会更多地试试网盘。\n\n对于新番，可以看看别人的评价，再根据自己的喜好评估是否要看。\n\n对于发布站上一长串的番剧文件名，我推荐自行搜索了解，可以找到整体从前往后的各部分解释，又能找到每个位置参数的具体解释，网上还是有很多教程的。我不便展开。\n\n# 网站在线观看（总比下载简单）\n\n这个没有多少可以说的，现在网上资源多的很，很多资源都可以在线观看，注意上网安全即可。找不到网站可以看看我下面介绍的番剧记录软件。\n\n# 记录观看进度（单独软件，支持云同步）\n\n从GitHub上找到了一个项目，可以记录番剧的追番进度，同时还可以跳转网站，我在此记录我的配置过程。在不在b站看番都可以用这个记录进度，我的可塑性记忆因为b站版权到期，现在已经找不到了（哭哭）。\n\n## 安装\n\n项目的网址：[漫迹：动漫清单软件，记录动漫计划和观看历史 (github.com)](https://github.com/linyi102/anime_trace)\n\n在release里面可以选择下载不同平台的安装包，如图。\n\n​![Github release](https://cdn-res.emptylight.cn/share/img/image-20240506111246-jqh4lgr.png)​\n\n其中，`win-install`​是Windows版本的安装包，`windows.zip`​是Windows版本的便携版，`android.apk`​是安卓32位的安装包，现在不建议安装，`arm64-v8a`​是安卓64位的安装包，现在的手机都只建议安装这个。\n\n在安装好之后，使用Windows版本的示例图作为示例演示。\n\n![windows example](https://cdn-res.emptylight.cn/share/img/image-20240506112753-q9d49iy.png)​\n\n左侧的按钮是首页、搜索、观看历史、笔记、更多设置。\n\n其中首页是所有动漫的示例。可以添加动漫源找到的动漫，也可以自定义输入动漫。右上角是云同步（使用webdav）、外观设置和搜索。可以为动漫根据追番的不同进度设置分类。在标记最后一集为已看时，可以自动移动番剧到特定分类。\n\n左侧的搜索可以查找动漫，点击搜索源的更多选项可以选择启用什么搜索源，使用默认的动漫源可以获取开播时间，地区，类型等，但是动漫的集数很容易不对，使用bangumi可以获取完整的简介、集数、开播时间等，但是番剧开播地区、类型需要自己手动填。具体自己抉择。\n\n自定义动漫则不需要添加搜索源的结果，点击自定义就可以创建自定义的记录。（见图中的亚特兰蒂斯生存）具体的设置过程不会有什么区别。\n\n左侧的观看历史可以按照月份排列你当月的观看番剧。\n\n左侧的笔记可以显示你所有笔记和评价。\n\n左侧的更多则是应用设置页。\n\n下面对番剧具体内容设置进行讲解。\n\n​![image](https://cdn-res.emptylight.cn/share/img/image-20240506114329-vn1vnoz.png)​\n\n如图是番剧的详情页面，点击编辑可以进入详细的编辑页面。右上角的按钮分别是外观设置和更多，更多里面的更新动漫是使用填写的动漫链接更新动漫信息，迁移动漫可以使用你启用的动漫源搜索这个动漫，可以选择使用不同网址的信息组成你的动漫信息。\n\n可以设置观看周目，添加标签，点击每一集的左边的复选框可以标记该集为已看，观看时间是当时的时间，点击中间部分可以写笔记，右侧的更多按钮可以修改观看时间，设置每一集的名字等。\n\n## 云同步\n\n云同步很简单，内置了坚果云的webdav云同步网址，只需要填入自己的坚果云账号和为应用生成的密码就可以使用坚果云的云同步。\n\n# 结尾\n\n因为写的长了，花的时间长，已经忘记要写到哪里了，所以在此又补充了一些内容。如有疑问或需要补充的内容，可以通过站点内的邮件联系我。感谢阅读。\n","slug":"chase-experience-2udw5r","published":1,"__permalink":"/post/chase-experience-2udw5r.html","layout":"post","photos":[],"link":"","_id":"cm1vkmaah00046gmec0262m37"},{"title":"正则表达式","date":"2023-09-19T06:49:35.000Z","updated":"2023-11-04T16:56:07.000Z","comments":1,"toc":true,"_content":"\n\n\n# 正则表达式\n\n# 普通字符\n\n​`[ABC]`​匹配`[...]`​中的所有字符，在单词中找到`A,B,C`​并匹配\n\n​`[^ABC]`​匹配除了`ABC`​之外的所有字符\n\n​`[A-Z]`​匹配一个区间，从`A`​到`Z`​中的所有字母，使用`[a-z]`​匹配所有小写字母\n\n> ​`.`​匹配除换行符`\\n\\r`​之外的任何单字符，等于`[^\\r\\n]`​\n\n​`[\\s\\S]`​匹配所有，`\\s`​是匹配所有空白符，包括换行，`\\S`​匹配非空白符，不包括换行\n\n​`[\\w]`​匹配字母，数字，下划线，等价于`[a-zA-Z0-9_]`​\n\n# 非打印字符\n\n​`\\cx`​匹配由`x`​指明的控制字符。例如，`\\cM`​匹配一个`control-M`​或`Enter`​。`x`​的值必须为`[a-zA-Z]`​\n\n​`\\f`​匹配一个`换页符`​，等价于`\\x0c`​和`\\cL`​\n\n​`\\n`​匹配一个`换行符`​，等价于`\\x0a`​和`\\cJ`​\n\n​`\\r`​匹配一个`回车符`​，等价于`\\x0d`​和`\\cM`​\n\n​`\\s`​匹配任何空白字符，包括空格、制表符、换页符等等。等价于`[\\f\\n\\r\\t\\v]`​。Unicode正则表达式会匹配全角空格符\n\n​`\\S`​匹配任何非空白字符，等价于`[^\\f\\n\\r\\t\\v]`​\n\n​`\\t`​匹配一个制表符，等价于`\\x09`​和`\\cI`​\n\n​`\\v`​匹配一个垂直制表符，等价于`\\x0b`​和`\\cK`​\n\n# 特殊字符\n\n​`$`​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用\n\n​`( )`​标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用\n\n> ​`*`​匹配前面的子表达式零次或多次\n\n> ​`+`​匹配前面的子表达式一次或多次\n\n​`.`​匹配除换行符`\\n\\r`​之外的任何单字符，等于`[^\\r\\n]`​\n\n​`[`​标记一个中括号表达式的开始\n\n​`?`​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符\n\n​`\\`​将下一个字符标记为特殊字符、或原意字符、或向后引用、或八进制转义符\n\n​`^`​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符\n\n​`{`​标记限定符表达式的开始\n\n​`|`​指明两项之间的一个选择\n\n# 限定符\n\n限定符用于指定正则表达式的一个给定组件必须要出现多少次才能满足匹配\n\n​`*`​匹配前面的子表达式零次或多次\n\n​`+`​匹配前面的子表达式一次或多次\n\n> ​`*`​和`+`​限定符都是贪婪的，因为它们会尽可能多地匹配文字，只要在它们后面加上一个`?`​就可以实现非贪婪或最小匹配\n\n> ​`?`​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符\n\n​`{n}`​匹配确定的n次，n为非负整数\n\n​`{n,}`​至少匹配n次，n为非负整数\n\n​`{n,m}`​至少匹配n次，至多匹配m次，$m,n$为非负整数，$n\\lt m$  \n\n# 定义符\n\n定义符能将正则表达式固定到行首或行尾\n\n不能将限定符与定位符一起使用，请在正则表达式的开始使用`^`​，不要将`^`​的这种用法与中括号表达式内的\n\n> ​`^`​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符\n\n> ​`$`​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用\n\n​`\\b`​匹配一个单词边界，即字与空格间的位置\n\n​`\\B`​匹配非单词边界\n\n# 组合式\n\n​`/[1-9][0-9]*/`​匹配一个正整数，其中的`[1-9]`​设置第一个数字不为`0`​，`[0-9]*`​表示任意多个数字\n\n​`/[0-9]{1,2}/`​匹配`0-99`​的两位数，并且可以匹配`0,00,01`​等数字\n\n​`/[1-9][0-9]?/`​或`/[1-9][0-9]{0,1}`​匹配`1-99`​的正整数\n\n​`/^Chapter [1-9][0-9]{0,1}/`​匹配一个只有两个数字且出现在行首的章节标题\n\n​`/^Chapter [1-9][0-9]{0,1}$/`​匹配一个既出现在开头又出现在结尾的章节标题数字\n\n​`/\\bCha/`​匹配单词`Chapter`​的开头三个字母，也可匹配到`Charater`​\n\n​`/ter\\b/`​匹配单词`Chapter`​的结尾三个字母，也可匹配到`Charater`​\n\n​`/\\Bapt/`​匹配单词`Chapter`​的中间的`apt`​，但是不能匹配到`aptitude`​\n","source":"_posts/regular-expression-zilx8g.md","raw":"---\ntitle: 正则表达式\ndate: '2023-09-19 14:49:35'\nupdated: '2023-11-05 00:56:07'\npermalink: /post/regular-expression-zilx8g.html\ncomments: true\ntoc: true\ntags:\n---\n\n\n\n# 正则表达式\n\n# 普通字符\n\n​`[ABC]`​匹配`[...]`​中的所有字符，在单词中找到`A,B,C`​并匹配\n\n​`[^ABC]`​匹配除了`ABC`​之外的所有字符\n\n​`[A-Z]`​匹配一个区间，从`A`​到`Z`​中的所有字母，使用`[a-z]`​匹配所有小写字母\n\n> ​`.`​匹配除换行符`\\n\\r`​之外的任何单字符，等于`[^\\r\\n]`​\n\n​`[\\s\\S]`​匹配所有，`\\s`​是匹配所有空白符，包括换行，`\\S`​匹配非空白符，不包括换行\n\n​`[\\w]`​匹配字母，数字，下划线，等价于`[a-zA-Z0-9_]`​\n\n# 非打印字符\n\n​`\\cx`​匹配由`x`​指明的控制字符。例如，`\\cM`​匹配一个`control-M`​或`Enter`​。`x`​的值必须为`[a-zA-Z]`​\n\n​`\\f`​匹配一个`换页符`​，等价于`\\x0c`​和`\\cL`​\n\n​`\\n`​匹配一个`换行符`​，等价于`\\x0a`​和`\\cJ`​\n\n​`\\r`​匹配一个`回车符`​，等价于`\\x0d`​和`\\cM`​\n\n​`\\s`​匹配任何空白字符，包括空格、制表符、换页符等等。等价于`[\\f\\n\\r\\t\\v]`​。Unicode正则表达式会匹配全角空格符\n\n​`\\S`​匹配任何非空白字符，等价于`[^\\f\\n\\r\\t\\v]`​\n\n​`\\t`​匹配一个制表符，等价于`\\x09`​和`\\cI`​\n\n​`\\v`​匹配一个垂直制表符，等价于`\\x0b`​和`\\cK`​\n\n# 特殊字符\n\n​`$`​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用\n\n​`( )`​标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用\n\n> ​`*`​匹配前面的子表达式零次或多次\n\n> ​`+`​匹配前面的子表达式一次或多次\n\n​`.`​匹配除换行符`\\n\\r`​之外的任何单字符，等于`[^\\r\\n]`​\n\n​`[`​标记一个中括号表达式的开始\n\n​`?`​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符\n\n​`\\`​将下一个字符标记为特殊字符、或原意字符、或向后引用、或八进制转义符\n\n​`^`​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符\n\n​`{`​标记限定符表达式的开始\n\n​`|`​指明两项之间的一个选择\n\n# 限定符\n\n限定符用于指定正则表达式的一个给定组件必须要出现多少次才能满足匹配\n\n​`*`​匹配前面的子表达式零次或多次\n\n​`+`​匹配前面的子表达式一次或多次\n\n> ​`*`​和`+`​限定符都是贪婪的，因为它们会尽可能多地匹配文字，只要在它们后面加上一个`?`​就可以实现非贪婪或最小匹配\n\n> ​`?`​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符\n\n​`{n}`​匹配确定的n次，n为非负整数\n\n​`{n,}`​至少匹配n次，n为非负整数\n\n​`{n,m}`​至少匹配n次，至多匹配m次，$m,n$为非负整数，$n\\lt m$  \n\n# 定义符\n\n定义符能将正则表达式固定到行首或行尾\n\n不能将限定符与定位符一起使用，请在正则表达式的开始使用`^`​，不要将`^`​的这种用法与中括号表达式内的\n\n> ​`^`​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符\n\n> ​`$`​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用\n\n​`\\b`​匹配一个单词边界，即字与空格间的位置\n\n​`\\B`​匹配非单词边界\n\n# 组合式\n\n​`/[1-9][0-9]*/`​匹配一个正整数，其中的`[1-9]`​设置第一个数字不为`0`​，`[0-9]*`​表示任意多个数字\n\n​`/[0-9]{1,2}/`​匹配`0-99`​的两位数，并且可以匹配`0,00,01`​等数字\n\n​`/[1-9][0-9]?/`​或`/[1-9][0-9]{0,1}`​匹配`1-99`​的正整数\n\n​`/^Chapter [1-9][0-9]{0,1}/`​匹配一个只有两个数字且出现在行首的章节标题\n\n​`/^Chapter [1-9][0-9]{0,1}$/`​匹配一个既出现在开头又出现在结尾的章节标题数字\n\n​`/\\bCha/`​匹配单词`Chapter`​的开头三个字母，也可匹配到`Charater`​\n\n​`/ter\\b/`​匹配单词`Chapter`​的结尾三个字母，也可匹配到`Charater`​\n\n​`/\\Bapt/`​匹配单词`Chapter`​的中间的`apt`​，但是不能匹配到`aptitude`​\n","slug":"regular-expression-zilx8g","published":1,"__permalink":"/post/regular-expression-zilx8g.html","layout":"post","photos":[],"link":"","_id":"cm1vkmaah00056gme9yw3gwxr"},{"title":"库管理","date":"2023-08-22T12:50:55.000Z","updated":"2023-12-09T03:59:20.000Z","comments":1,"toc":true,"_content":"\n\n\n# 库管理\n\n# 安装\n\n安装时使用 `pip` ​命令完成。\n\n​`pip install`​+ 库名即可安装对应的库。相应的依赖库会自动下载安装。\n\n添加参数 `-i` ​或 `--index-url` ​即可临时指定下载源，可以指定国内镜像源下载，比官网源快多了。也可以设置 `config` ​文件来永久设置下载源。\n\n添加参数 `-U` ​或 `--upgrade` ​即可更新对应的库。\n\n添加参数 `--src` ​即可指定安装的目录。\n\n添加参数 `-r` ​即可从给定的 `requirements.txt` ​中获取需要安装的库并批量安装。\n\n添加参数 `-V` ​或 `--version` ​即可指定安装的版本。\n\n# 管理\n\n使用 `pip list`​​ 即可查看当前安装的所有库。显示效果为平铺，显示当前版本号。  \n​![image](https://cdn-res.emptylight.cn/share/img/image-20230822210807-219e2zz.png \"pip\")​\n\n在安装了 `pipdeptree`​​​ 库后可以通过命令 `pipdeptree`​​​ 查看当前安装的库的依赖关系。显示效果为分层嵌套，显示当前版本号。  \n​![image](https://cdn-res.emptylight.cn/share/img/image-20230822210901-vh7ipbs.png \"pipdeptree\")​\n\n# 更新\n\n检查更新可以使用pip中的`pip list -o`​命令。\n\n更新可以使用 pip 中的`pip install -U`​命令。\n\n在安装了`pip-review`​库之后可以使用`pip-review`​命令更新。\n\n参数`-i`​为询问是否安装。\n\n参数`-C`​为在一个库安装失败后继续安装。\n\n参数`--freeze-outdated-packages`​为将需要更新的库导出为`requirements.txt`​存档。\n\n# 卸载\n\n卸载使用pip自带的指令`pip remove`​即可卸载，但是只会卸载指定的库，不会卸载依赖项。\n\n安装了`python3-pip-autoremove`​库之后可以使用指令`pip3-autoremove`​后加库名卸载库。这个方法可以一并卸载掉不使用的依赖库。\n\n使用`pip3-autoremove`​库也可以。\n\n参数`-l`​可以列出当前不使用的库并选择卸载。\n\n# 导出已安装的软件包\n\npip提供了导出已安装包的方法，使用`pip freeze > requirements.txt`​即可导出为文本文件。\n\n> <span style=\"font-weight: bold;\" data-type=\"strong\">特别注意：</span> 更新python版本需要<span style=\"font-weight: bold;\" data-type=\"strong\">首先备份</span>pip安装的软件包，在更新后的python<span style=\"font-weight: bold;\" data-type=\"strong\">再次安装！！！</span>\n","source":"_posts/library-management-bm5iw.md","raw":"---\ntitle: 库管理\ndate: '2023-08-22 20:50:55'\nupdated: '2023-12-09 11:59:20'\npermalink: /post/library-management-bm5iw.html\ncomments: true\ntoc: true\ntags:\n---\n\n\n\n# 库管理\n\n# 安装\n\n安装时使用 `pip` ​命令完成。\n\n​`pip install`​+ 库名即可安装对应的库。相应的依赖库会自动下载安装。\n\n添加参数 `-i` ​或 `--index-url` ​即可临时指定下载源，可以指定国内镜像源下载，比官网源快多了。也可以设置 `config` ​文件来永久设置下载源。\n\n添加参数 `-U` ​或 `--upgrade` ​即可更新对应的库。\n\n添加参数 `--src` ​即可指定安装的目录。\n\n添加参数 `-r` ​即可从给定的 `requirements.txt` ​中获取需要安装的库并批量安装。\n\n添加参数 `-V` ​或 `--version` ​即可指定安装的版本。\n\n# 管理\n\n使用 `pip list`​​ 即可查看当前安装的所有库。显示效果为平铺，显示当前版本号。  \n​![image](https://cdn-res.emptylight.cn/share/img/image-20230822210807-219e2zz.png \"pip\")​\n\n在安装了 `pipdeptree`​​​ 库后可以通过命令 `pipdeptree`​​​ 查看当前安装的库的依赖关系。显示效果为分层嵌套，显示当前版本号。  \n​![image](https://cdn-res.emptylight.cn/share/img/image-20230822210901-vh7ipbs.png \"pipdeptree\")​\n\n# 更新\n\n检查更新可以使用pip中的`pip list -o`​命令。\n\n更新可以使用 pip 中的`pip install -U`​命令。\n\n在安装了`pip-review`​库之后可以使用`pip-review`​命令更新。\n\n参数`-i`​为询问是否安装。\n\n参数`-C`​为在一个库安装失败后继续安装。\n\n参数`--freeze-outdated-packages`​为将需要更新的库导出为`requirements.txt`​存档。\n\n# 卸载\n\n卸载使用pip自带的指令`pip remove`​即可卸载，但是只会卸载指定的库，不会卸载依赖项。\n\n安装了`python3-pip-autoremove`​库之后可以使用指令`pip3-autoremove`​后加库名卸载库。这个方法可以一并卸载掉不使用的依赖库。\n\n使用`pip3-autoremove`​库也可以。\n\n参数`-l`​可以列出当前不使用的库并选择卸载。\n\n# 导出已安装的软件包\n\npip提供了导出已安装包的方法，使用`pip freeze > requirements.txt`​即可导出为文本文件。\n\n> <span style=\"font-weight: bold;\" data-type=\"strong\">特别注意：</span> 更新python版本需要<span style=\"font-weight: bold;\" data-type=\"strong\">首先备份</span>pip安装的软件包，在更新后的python<span style=\"font-weight: bold;\" data-type=\"strong\">再次安装！！！</span>\n","slug":"library-management-bm5iw","published":1,"__permalink":"/post/library-management-bm5iw.html","layout":"post","photos":[],"link":"","_id":"cm1vkmaai00066gmebcxp8b25"},{"title":"new.md","date":"2023-08-28T04:19:07.000Z","_content":"\nbrand new markdown","source":"_posts/new-md.md","raw":"---\ntitle: new.md\ndate: 2023-08-28 12:19:07\ntags:\n---\n\nbrand new markdown","slug":"new-md","published":1,"updated":"2023-11-07T13:56:37.236Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm1vkmaak00076gme66g4g2lr"},{"title":"windows家庭版启用沙盒","date":"2023-10-17T15:23:19.000Z","updated":"2023-10-17T15:49:19.000Z","comments":1,"toc":true,"_content":"\n\n\n# windows家庭版启用沙盒\n\n# 沙盒\n\nWindows家庭版没有办法在Windows功能中开启沙盒，需要采取特殊的方法。\n\n1. 首先开启电脑的虚拟化（需要检查BIOS）\n2. 复制下列内容并创建为`.bat`​文件\n\n    ```bat\n    @echo off\n\n    echo Checking for permissions\n    >nul 2>&1 \"%SYSTEMROOT%\\system32\\cacls.exe\" \"%SYSTEMROOT%\\system32\\config\\system\"\n\n    echo Permission check result: %errorlevel%\n\n    REM --> If error flag set, we do not have admin.\n    if '%errorlevel%' NEQ '0' (\n    echo Requesting administrative privileges...\n    goto UACPrompt\n    ) else ( goto gotAdmin )\n\n    :UACPrompt\n    echo Set UAC = CreateObject^(\"Shell.Application\"^) > \"%temp%\\getadmin.vbs\"\n    echo UAC.ShellExecute \"%~s0\", \"\", \"\", \"runas\", 1 >> \"%temp%\\getadmin.vbs\"\n\n    echo Running created temporary \"%temp%\\getadmin.vbs\"\n    timeout /T 2\n    \"%temp%\\getadmin.vbs\"\n    exit /B\n\n    :gotAdmin\n    if exist \"%temp%\\getadmin.vbs\" ( del \"%temp%\\getadmin.vbs\" )\n    pushd \"%CD%\"\n    CD /D \"%~dp0\" \n\n    echo Batch was successfully started with admin privileges\n    echo .\n    cls\n    Title Sandbox Installer\n\n    pushd \"%~dp0\"\n\n    dir /b %SystemRoot%\\servicing\\Packages\\*Containers*.mum >sandbox.txt\n\n    for /f %%i in ('findstr /i . sandbox.txt 2^>nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages\\%%i\"\n\n    del sandbox.txt\n\n    Dism /online /enable-feature /featurename:Containers-DisposableClientVM /LimitAccess /ALL\n\n    pause\n    ```\n3. 以管理员权限运行上述`.bat`​文件\n4. 运行完成后启动Windows功能，打开Windows沙盒功能，安装沙盒\n5. 安装完成后可以启用Windows沙盒\n6. 需要删除Windows沙盒时，在CMD中粘贴下列代码并运行\n\n    ```powershell\n    Dism /online /Disable-Feature /FeatureName:\"Containers-DisposableClientVM\"\n    ```\n7. 专业版可以直接在Windows功能中启用Windows沙盒，无需进行上述步骤\n\n# 虚拟机\n\n在Windows11家庭版上启用hyper-v虚拟机的操作如下。\n\n1. 将以下代码保存为cmd文件。\n\n    ```cmd\n    pushd \"%~dp0\"\n    dir /b %SystemRoot%\\servicing\\Packages\\*Hyper-V*.mum >hyper-v.txt\n    for /f %%i in ('findstr /i . hyper-v.txt 2^>nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages\\%%i\"\n    del hyper-v.txt\n    Dism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL\n    ```\n2. 用管理员权限运行，等待电脑从服务器下载hyper-v相关组件。\n3. 重启电脑。\n4. 在组件管理中查看hyper-v相关组件并开启。\n5. 删除的代码未找到。自行推测是如下代码。\n\n    ```powershell\n    Dism /online /Disable-feature /featurename:Microsoft-Hyper-V-All\n    ```\n","source":"_posts/windows-family-edition-enable-sand-box-1si53v.md","raw":"---\ntitle: windows家庭版启用沙盒\ndate: '2023-10-17 23:23:19'\nupdated: '2023-10-17 23:49:19'\npermalink: /post/windows-family-edition-enable-sand-box-1si53v.html\ncomments: true\ntoc: true\ntags:\n---\n\n\n\n# windows家庭版启用沙盒\n\n# 沙盒\n\nWindows家庭版没有办法在Windows功能中开启沙盒，需要采取特殊的方法。\n\n1. 首先开启电脑的虚拟化（需要检查BIOS）\n2. 复制下列内容并创建为`.bat`​文件\n\n    ```bat\n    @echo off\n\n    echo Checking for permissions\n    >nul 2>&1 \"%SYSTEMROOT%\\system32\\cacls.exe\" \"%SYSTEMROOT%\\system32\\config\\system\"\n\n    echo Permission check result: %errorlevel%\n\n    REM --> If error flag set, we do not have admin.\n    if '%errorlevel%' NEQ '0' (\n    echo Requesting administrative privileges...\n    goto UACPrompt\n    ) else ( goto gotAdmin )\n\n    :UACPrompt\n    echo Set UAC = CreateObject^(\"Shell.Application\"^) > \"%temp%\\getadmin.vbs\"\n    echo UAC.ShellExecute \"%~s0\", \"\", \"\", \"runas\", 1 >> \"%temp%\\getadmin.vbs\"\n\n    echo Running created temporary \"%temp%\\getadmin.vbs\"\n    timeout /T 2\n    \"%temp%\\getadmin.vbs\"\n    exit /B\n\n    :gotAdmin\n    if exist \"%temp%\\getadmin.vbs\" ( del \"%temp%\\getadmin.vbs\" )\n    pushd \"%CD%\"\n    CD /D \"%~dp0\" \n\n    echo Batch was successfully started with admin privileges\n    echo .\n    cls\n    Title Sandbox Installer\n\n    pushd \"%~dp0\"\n\n    dir /b %SystemRoot%\\servicing\\Packages\\*Containers*.mum >sandbox.txt\n\n    for /f %%i in ('findstr /i . sandbox.txt 2^>nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages\\%%i\"\n\n    del sandbox.txt\n\n    Dism /online /enable-feature /featurename:Containers-DisposableClientVM /LimitAccess /ALL\n\n    pause\n    ```\n3. 以管理员权限运行上述`.bat`​文件\n4. 运行完成后启动Windows功能，打开Windows沙盒功能，安装沙盒\n5. 安装完成后可以启用Windows沙盒\n6. 需要删除Windows沙盒时，在CMD中粘贴下列代码并运行\n\n    ```powershell\n    Dism /online /Disable-Feature /FeatureName:\"Containers-DisposableClientVM\"\n    ```\n7. 专业版可以直接在Windows功能中启用Windows沙盒，无需进行上述步骤\n\n# 虚拟机\n\n在Windows11家庭版上启用hyper-v虚拟机的操作如下。\n\n1. 将以下代码保存为cmd文件。\n\n    ```cmd\n    pushd \"%~dp0\"\n    dir /b %SystemRoot%\\servicing\\Packages\\*Hyper-V*.mum >hyper-v.txt\n    for /f %%i in ('findstr /i . hyper-v.txt 2^>nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages\\%%i\"\n    del hyper-v.txt\n    Dism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL\n    ```\n2. 用管理员权限运行，等待电脑从服务器下载hyper-v相关组件。\n3. 重启电脑。\n4. 在组件管理中查看hyper-v相关组件并开启。\n5. 删除的代码未找到。自行推测是如下代码。\n\n    ```powershell\n    Dism /online /Disable-feature /featurename:Microsoft-Hyper-V-All\n    ```\n","slug":"windows-family-edition-enable-sand-box-1si53v","published":1,"__permalink":"/post/windows-family-edition-enable-sand-box-1si53v.html","layout":"post","photos":[],"link":"","_id":"cm1vkmaal00086gmeeh3cbgqx"},{"title":"VSCode配置教程","date":"2024-07-07T03:24:43.000Z","updated":"2024-07-07T16:01:50.000Z","comments":1,"toc":true,"_content":"\n\n\n# VSCode配置教程\n\n<iframe sandbox=\"allow-top-navigation-by-user-activation allow-same-origin allow-forms allow-scripts allow-popups\" src=\"https://player.bilibili.com/player.html?bvid=BV1WLaFe1EPa&amp;page=1&amp;high_quality=1&amp;as_wide=1&amp;allowfullscreen=true&amp;autoplay=0\" data-src=\"\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"height: 321px; width: 608px;\"></iframe>\n\n# 扩展篇\n\n## 主题篇\n\n搜索theme，快捷切换主题\n\n搜索图标icon theme，\n\n设置》主题》颜色主题、图标主题\n\n## 汉化篇\n\n扩展搜索chinese，安装重启\n\n## 使用体验\n\n快捷键：搜索keymap可下载不同软件的快捷键\n\n注释高亮：Better Comments(by Aaron Bond)\n\n代码折叠优化：Better Folding(by Mohammad Baqer)\n\n错误高亮：Error Lens(by Alexander)\n\n文件大小：filesize(by Matheus Kautzmann)\n\n代码生成图片：CodeSnap(by adpyke)\n\n单词翻译：Code Translate(by w88975)\n\n多项目管理（不同文件夹）：Project Manager(by Alessandro Fragnani)\n\n自动生成注释：koroFileHeader(by OBKoro1)\n\n## 语言使用篇\n\n### 代码运行\n\nCode Runner支持多种语言运行\n\n代码编译运行、调试可能需要特殊支持，或者在launch.json或tasks.json中配置，不讲解。\n\n### C/C++\n\n安装C++ Extension Pack扩展，支持代码编译、调试、自动补全、代码高亮。需要本地安装mingw等编译器。\n\n### Java/Kotlin\n\n安装Extension Pack for Java(by Microsoft)扩展，支持编译、调试、自动补全、代码高亮、项目管理，支持多Java配置，不需要JAVA HOME也可以在设置中设置多个Java版本。\n\nKotlin可以通过安装扩展支持，体验不算好。\n\n### Python\n\n安装Python扩展，Jupyter扩展，支持本地使用Python，anaconda，pyenv等环境，可以使用Python、Jupyter Notebook，使用笔记本时可以自动为没有安装Jupyter核心的Python安装对应的库。\n\n### HTML\n\nHTML无需过多配置，本身有一定的支持。安装一些别的扩展能够提升使用体验。\n\nColorize(by YuTengjing)：颜色高亮显示。\n\nImage preview(by Kiss Tamas)：在行号左边显示图片。\n\nHTML CSS Support(by ecmel)：CSS的自动补全。\n\nIntellSense for CSS class names in HTML(by Styleguide Intellisense)：HTML的自动补全。\n\nTailwind CSS IntelliSense(by Tailwind Labs)：Tailwind CSS支持。\n\nXML(by Red Hat)：XML的语法高亮、格式化等。\n\n# 设置篇\n\n## 设置（UI）\n\n### 常用设置\n\n#### 自动保存：\n\nFiles: Auto Save根据需要设置，建议使用自动保存（可在文件>自动保存中开启）\n\n搜索save，可见：\n\nFiles: Auto Save When No Errors启用后只保存无错误的文件\n\nEditor: Format On Save Mode支持通过版本管理确认格式化范围，如果文件相当大可以减少格式化时间\n\n#### 自动换行：\n\nEditor: Word Wrap支持在屏幕最右边或者超过特定行数时自动换行，不出现水平滚动条\n\n#### 括号高亮：\n\nGuides: Bracket Pairs垂直方向括号高亮\n\nGuides: Bracket Paris orizontal水平方向括号高亮\n\nBracket Pair Colorization: Independent Color Pool Per Bracket Type为不同种类括号对使用不同的颜色序列，对不同的括号按不同层次依次显示颜色\n\nBracket Pari Colorization: Enabled对成对括号\n\n#### 自动折叠导入语句：\n\nFolding Imports By Default启用后自动折叠导入范围\n\n#### 平滑滚动：\n\nSmooth Scrolling启用后使用平滑滚动\n\nList: Smooth Scrolling控制列表和树是否具有平滑滚动效果\n\nIntergrated: Smooth Scrolling在终端中启用平滑滚动\n\n#### 空格自动补全至制表符位置：\n\nSticky Tab Stops使用空格时也自动填充到tab位置\n\n#### 自动格式化：\n\nFormat On Paste自动格式化粘贴内容\n\nFormat On Save保存时自动格式化\n\nFormat On save Mode可根据版本管理格式化修改内容\n\nFormat On Type输入换行符后格式化这一行\n\n### 缩略图（右边滚动条边的小地图）：\n\nMaxColumn缩略图最大显示宽度\n\nRender Characters启用后渲染实际字符，关闭后只渲染颜色块\n\n### 代码建议（自动补全）：\n\nSuggest: Snippets Prevent Quick Suggestions有时没法应用自动补全把这个关掉就好\n\nSuggest: Preview在编辑器内光标位置显示将要填充的内容\n\n### 文件设置：\n\nAuto Guess Encoding打开文件时自动猜测文件编码，不必手动调整编码\n\nTrim Final Newlines删除文件最后一行空行后面的所有空行\n\nTrim Trailing Whitespace删除文件每一行后面的空格，**Markdown必须关闭**\n\n### 编辑器：\n\nLimit: Enable限制编辑器（标签页）打开数目\n\nLimit: Exclude Dirty排除脏编辑器\n\nLimit: Value限制编辑器最大数目\n\nNotebooks: Line Numbers笔记本中显示行号\n\n### 窗口：\n\nAuto Detect Color Scheme根据系统主题切换VSCode颜色主题\n\nAuto Detect High Contrast根据系统高对比度主题切换VSCode高对比度主题\n\nDouble Click Icon To Close双击VSC图标关闭VSCode窗口\n\nRestore Fullscreen重新打开后保持全屏（或不全屏）\n\nRestore Windows重新打开后显示多少个编辑器\n\n### 功能：\n\nDin Unfocused: Enabled将不具有焦点的编辑器变暗\n\nConfirm Delete在删除文件时显示确认\n\nConfirm Drag And Drop在拖放和移动文件时显示确认\n\nConfirm Paste Native在系统文件管理器复制文件到VSCode的文件管理器中时显示确认\n\nTerminal: Clear Before Reusing在终端中启动调试之前清空终端\n\nExperimental: Show History Graph在源代码管理（版本管理）视图中显示历史记录图（提交记录树）而不是传入/传出更改（实验功能，或可代替Git Graph扩展）\n\nIntegrated: Enable Images在终端中支持图像\n\n## 配置文件\n\n配置文件是VSCode新正式提供支持的一种配置方式，可以在不同配置文件中使用不同的扩展、设置、键盘快捷方式等。\n\n创建快捷方式时可选择需要独立设置什么内容，个人喜欢只单独配置扩展，将配置文件名称改为不同的语言，这样就将不同语言的插件隔离开了，启动不同的项目文件夹可以记住不同的配置文件，启动速度也能一定程度加快。也可以使用独立的快捷方式，这样Java环境就使用eclipse或idea的快捷键，C/C++环境就使用VS的快捷键。\n\n## 命令面板\n\n可以快速访问和搜索VSCode或插件提供的功能，除了`win+shift+p`​之外，还可以使用`F1`​拉起命令面板。\n\n此处搜索滚动可以开启“切换编辑器粘滞滚动”，可以在滚动时显示当前代码所属代码块的方法名或类名等。也可以快速重启VSCode或扩展等。\n\n## 键盘快捷方式\n\n可以手动设置一些快捷键，或者手动编写一些新的快捷键实现一些功能。比如“在下面插入行”（在当前行下插入一个新的行并将光标移至下一行）——我设置了Shift+Enter（和Android Studio一样），“删除行”（删除当前行，光标移动到右边）——Shift+Delete（不手动配置也能删除当前行，光标移动到左边）。\n\n## 用户代码片段\n\n可以自行设置特定语言或所有语言的特殊类型的代码补全，可以一键生成块注释或者补充扩展没有的代码补全，比如：\n\nJava:\n\n```json\n{\n    \"str to String\": {\n        \"prefix\": \"str\",\n        \"body\": [\n            \"String$0\"\n        ],\n        \"description\": \"把str补全成String\"\n    },\n    \"Scanner(System.in)\": {\n        \"prefix\": \"sysin\",\n        \"body\": [\n            \"Scanner ${1:sc} = new Scanner(System.in);$0\",\n        ],\n        \"descrption\": \"读取System.in作为输入\"\n    }\n}\n```\n\n这里就在输入`str`​时可以自动补全成`String`​并将光标放置在后面（可以没有），在输入`sysin`​时补全成Scanner并可选调整变量名（不会自动引入Scanner）。这里还可以写好自动生成块注释，然后自动移动光标填充信息。\n\n# 快捷操作篇\n\n## 切换文件编码格式\n\n右下角有一个UTF-8或GBK按钮，取决于当前的文件格式，点击可以显示重新打开或保存文件选项，可以按照目标格式打开或保存文件。但是请注意，如果当前无法正确显示文件字符，那么必须先以正确的编码显示文件才能重新保存文件，否则会出现问题。\n\n## 选择语言模式\n\n右下角在编码按钮旁边有一个语言按钮，显示取决于当前的文件使用的编程语言。点击可以手动选择以什么语言加载当前文件，适用于自动检测语言错误的情况。\n","source":"_posts/vscode-configuration-tutorial-z1euaf6.md","raw":"---\ntitle: VSCode配置教程\ndate: '2024-07-07 11:24:43'\nupdated: '2024-07-08 00:01:50'\npermalink: /post/vscode-configuration-tutorial-z1euaf6.html\ncomments: true\ntoc: true\n---\n\n\n\n# VSCode配置教程\n\n<iframe sandbox=\"allow-top-navigation-by-user-activation allow-same-origin allow-forms allow-scripts allow-popups\" src=\"https://player.bilibili.com/player.html?bvid=BV1WLaFe1EPa&amp;page=1&amp;high_quality=1&amp;as_wide=1&amp;allowfullscreen=true&amp;autoplay=0\" data-src=\"\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"height: 321px; width: 608px;\"></iframe>\n\n# 扩展篇\n\n## 主题篇\n\n搜索theme，快捷切换主题\n\n搜索图标icon theme，\n\n设置》主题》颜色主题、图标主题\n\n## 汉化篇\n\n扩展搜索chinese，安装重启\n\n## 使用体验\n\n快捷键：搜索keymap可下载不同软件的快捷键\n\n注释高亮：Better Comments(by Aaron Bond)\n\n代码折叠优化：Better Folding(by Mohammad Baqer)\n\n错误高亮：Error Lens(by Alexander)\n\n文件大小：filesize(by Matheus Kautzmann)\n\n代码生成图片：CodeSnap(by adpyke)\n\n单词翻译：Code Translate(by w88975)\n\n多项目管理（不同文件夹）：Project Manager(by Alessandro Fragnani)\n\n自动生成注释：koroFileHeader(by OBKoro1)\n\n## 语言使用篇\n\n### 代码运行\n\nCode Runner支持多种语言运行\n\n代码编译运行、调试可能需要特殊支持，或者在launch.json或tasks.json中配置，不讲解。\n\n### C/C++\n\n安装C++ Extension Pack扩展，支持代码编译、调试、自动补全、代码高亮。需要本地安装mingw等编译器。\n\n### Java/Kotlin\n\n安装Extension Pack for Java(by Microsoft)扩展，支持编译、调试、自动补全、代码高亮、项目管理，支持多Java配置，不需要JAVA HOME也可以在设置中设置多个Java版本。\n\nKotlin可以通过安装扩展支持，体验不算好。\n\n### Python\n\n安装Python扩展，Jupyter扩展，支持本地使用Python，anaconda，pyenv等环境，可以使用Python、Jupyter Notebook，使用笔记本时可以自动为没有安装Jupyter核心的Python安装对应的库。\n\n### HTML\n\nHTML无需过多配置，本身有一定的支持。安装一些别的扩展能够提升使用体验。\n\nColorize(by YuTengjing)：颜色高亮显示。\n\nImage preview(by Kiss Tamas)：在行号左边显示图片。\n\nHTML CSS Support(by ecmel)：CSS的自动补全。\n\nIntellSense for CSS class names in HTML(by Styleguide Intellisense)：HTML的自动补全。\n\nTailwind CSS IntelliSense(by Tailwind Labs)：Tailwind CSS支持。\n\nXML(by Red Hat)：XML的语法高亮、格式化等。\n\n# 设置篇\n\n## 设置（UI）\n\n### 常用设置\n\n#### 自动保存：\n\nFiles: Auto Save根据需要设置，建议使用自动保存（可在文件>自动保存中开启）\n\n搜索save，可见：\n\nFiles: Auto Save When No Errors启用后只保存无错误的文件\n\nEditor: Format On Save Mode支持通过版本管理确认格式化范围，如果文件相当大可以减少格式化时间\n\n#### 自动换行：\n\nEditor: Word Wrap支持在屏幕最右边或者超过特定行数时自动换行，不出现水平滚动条\n\n#### 括号高亮：\n\nGuides: Bracket Pairs垂直方向括号高亮\n\nGuides: Bracket Paris orizontal水平方向括号高亮\n\nBracket Pair Colorization: Independent Color Pool Per Bracket Type为不同种类括号对使用不同的颜色序列，对不同的括号按不同层次依次显示颜色\n\nBracket Pari Colorization: Enabled对成对括号\n\n#### 自动折叠导入语句：\n\nFolding Imports By Default启用后自动折叠导入范围\n\n#### 平滑滚动：\n\nSmooth Scrolling启用后使用平滑滚动\n\nList: Smooth Scrolling控制列表和树是否具有平滑滚动效果\n\nIntergrated: Smooth Scrolling在终端中启用平滑滚动\n\n#### 空格自动补全至制表符位置：\n\nSticky Tab Stops使用空格时也自动填充到tab位置\n\n#### 自动格式化：\n\nFormat On Paste自动格式化粘贴内容\n\nFormat On Save保存时自动格式化\n\nFormat On save Mode可根据版本管理格式化修改内容\n\nFormat On Type输入换行符后格式化这一行\n\n### 缩略图（右边滚动条边的小地图）：\n\nMaxColumn缩略图最大显示宽度\n\nRender Characters启用后渲染实际字符，关闭后只渲染颜色块\n\n### 代码建议（自动补全）：\n\nSuggest: Snippets Prevent Quick Suggestions有时没法应用自动补全把这个关掉就好\n\nSuggest: Preview在编辑器内光标位置显示将要填充的内容\n\n### 文件设置：\n\nAuto Guess Encoding打开文件时自动猜测文件编码，不必手动调整编码\n\nTrim Final Newlines删除文件最后一行空行后面的所有空行\n\nTrim Trailing Whitespace删除文件每一行后面的空格，**Markdown必须关闭**\n\n### 编辑器：\n\nLimit: Enable限制编辑器（标签页）打开数目\n\nLimit: Exclude Dirty排除脏编辑器\n\nLimit: Value限制编辑器最大数目\n\nNotebooks: Line Numbers笔记本中显示行号\n\n### 窗口：\n\nAuto Detect Color Scheme根据系统主题切换VSCode颜色主题\n\nAuto Detect High Contrast根据系统高对比度主题切换VSCode高对比度主题\n\nDouble Click Icon To Close双击VSC图标关闭VSCode窗口\n\nRestore Fullscreen重新打开后保持全屏（或不全屏）\n\nRestore Windows重新打开后显示多少个编辑器\n\n### 功能：\n\nDin Unfocused: Enabled将不具有焦点的编辑器变暗\n\nConfirm Delete在删除文件时显示确认\n\nConfirm Drag And Drop在拖放和移动文件时显示确认\n\nConfirm Paste Native在系统文件管理器复制文件到VSCode的文件管理器中时显示确认\n\nTerminal: Clear Before Reusing在终端中启动调试之前清空终端\n\nExperimental: Show History Graph在源代码管理（版本管理）视图中显示历史记录图（提交记录树）而不是传入/传出更改（实验功能，或可代替Git Graph扩展）\n\nIntegrated: Enable Images在终端中支持图像\n\n## 配置文件\n\n配置文件是VSCode新正式提供支持的一种配置方式，可以在不同配置文件中使用不同的扩展、设置、键盘快捷方式等。\n\n创建快捷方式时可选择需要独立设置什么内容，个人喜欢只单独配置扩展，将配置文件名称改为不同的语言，这样就将不同语言的插件隔离开了，启动不同的项目文件夹可以记住不同的配置文件，启动速度也能一定程度加快。也可以使用独立的快捷方式，这样Java环境就使用eclipse或idea的快捷键，C/C++环境就使用VS的快捷键。\n\n## 命令面板\n\n可以快速访问和搜索VSCode或插件提供的功能，除了`win+shift+p`​之外，还可以使用`F1`​拉起命令面板。\n\n此处搜索滚动可以开启“切换编辑器粘滞滚动”，可以在滚动时显示当前代码所属代码块的方法名或类名等。也可以快速重启VSCode或扩展等。\n\n## 键盘快捷方式\n\n可以手动设置一些快捷键，或者手动编写一些新的快捷键实现一些功能。比如“在下面插入行”（在当前行下插入一个新的行并将光标移至下一行）——我设置了Shift+Enter（和Android Studio一样），“删除行”（删除当前行，光标移动到右边）——Shift+Delete（不手动配置也能删除当前行，光标移动到左边）。\n\n## 用户代码片段\n\n可以自行设置特定语言或所有语言的特殊类型的代码补全，可以一键生成块注释或者补充扩展没有的代码补全，比如：\n\nJava:\n\n```json\n{\n    \"str to String\": {\n        \"prefix\": \"str\",\n        \"body\": [\n            \"String$0\"\n        ],\n        \"description\": \"把str补全成String\"\n    },\n    \"Scanner(System.in)\": {\n        \"prefix\": \"sysin\",\n        \"body\": [\n            \"Scanner ${1:sc} = new Scanner(System.in);$0\",\n        ],\n        \"descrption\": \"读取System.in作为输入\"\n    }\n}\n```\n\n这里就在输入`str`​时可以自动补全成`String`​并将光标放置在后面（可以没有），在输入`sysin`​时补全成Scanner并可选调整变量名（不会自动引入Scanner）。这里还可以写好自动生成块注释，然后自动移动光标填充信息。\n\n# 快捷操作篇\n\n## 切换文件编码格式\n\n右下角有一个UTF-8或GBK按钮，取决于当前的文件格式，点击可以显示重新打开或保存文件选项，可以按照目标格式打开或保存文件。但是请注意，如果当前无法正确显示文件字符，那么必须先以正确的编码显示文件才能重新保存文件，否则会出现问题。\n\n## 选择语言模式\n\n右下角在编码按钮旁边有一个语言按钮，显示取决于当前的文件使用的编程语言。点击可以手动选择以什么语言加载当前文件，适用于自动检测语言错误的情况。\n","slug":"vscode-configuration-tutorial-z1euaf6","published":1,"__permalink":"/post/vscode-configuration-tutorial-z1euaf6.html","layout":"post","photos":[],"link":"","_id":"cm1vkmaam00096gmee1x1cra2"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}