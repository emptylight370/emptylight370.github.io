{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-inside/source/3rdpartylicenses.txt","path":"3rdpartylicenses.txt","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/main.543c891b4aad158701f3.js","path":"main.543c891b4aad158701f3.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/polyfills.b7bf56fc45f931a8b83e.js","path":"polyfills.b7bf56fc45f931a8b83e.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/runtime.1ed960b0635ea0669f87.js","path":"runtime.1ed960b0635ea0669f87.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/styles.91e7dfca63c7c151daa6.css","path":"styles.91e7dfca63c7c151daa6.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-inside/source/theme.9ecc9ab1.js","path":"theme.9ecc9ab1.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/JS的高级操作.md","hash":"37d5fc6e5280e159a351a7d63916a0cb3add5c38","modified":1697777332663},{"_id":"source/_posts/chase-experience-2udw5r.md","hash":"b615605d59578fa0625110c8aa38531a05118f96","modified":1703868044406},{"_id":"source/_posts/regular-expression-zilx8g.md","hash":"2ef0f463d0389b24ffdb2d15465fe4f6cf34b224","modified":1699365397237},{"_id":"source/_posts/new-md.md","hash":"f0449a9d7fd5b2e02484466c08298c7b05ca06aa","modified":1699365397236},{"_id":"source/_posts/library-management-bm5iw.md","hash":"37102a16ed0311be3fb1daea4f9bcc2dfd7d26fe","modified":1702097047283},{"_id":"source/_posts/windows-family-edition-enable-sand-box-1si53v.md","hash":"eed1fae85c10025fada5b598da8ae63cf45e74f3","modified":1697777332669},{"_id":"source/_posts/git-operation-z1k24je.md","hash":"5b3d758c973d42dddda589e60a32698f516e94f8","modified":1699366032599},{"_id":"source/about/index.md","hash":"40b1ce78cd077a566f50270b0c44f10228c8a610","modified":1697777332670},{"_id":"source/function/index.md","hash":"50b71765ff93eb2bf0b48f6eecf1f61c86daf57e","modified":1697777332670},{"_id":"node_modules/hexo-theme-inside/README.md","hash":"e993bc5fa16acadba760307c788b51824a734189","modified":1697777330462},{"_id":"node_modules/hexo-theme-inside/README_zh-Hans.md","hash":"f96588753fdb984654122ed5addadbe4021f5244","modified":1697777330462},{"_id":"node_modules/hexo-theme-inside/LICENSE","hash":"587ed58b79820b776e021afef12d76e9ed076a50","modified":1697777330462},{"_id":"node_modules/hexo-theme-inside/_config.yml","hash":"83f3c309aa363f7b1a713603bd67ca87c3e2932f","modified":1697777330463},{"_id":"node_modules/hexo-theme-inside/package.json","hash":"a6bf3bac160fdb1505f02dcd355d53cb4cfa9568","modified":1697777330484},{"_id":"node_modules/hexo-theme-inside/languages/en.yml","hash":"a14fee4604e4575926906070fad1c01d916195d8","modified":1697777330463},{"_id":"node_modules/hexo-theme-inside/languages/zh-Hans.yml","hash":"934a733fd0c94e54720e7de078fed420915a4c54","modified":1697777330464},{"_id":"node_modules/hexo-theme-inside/languages/ja.yml","hash":"3b2fa6f0adfa2c198edc34fe5421792999246435","modified":1697777330464},{"_id":"node_modules/hexo-theme-inside/lib/config.js","hash":"1b0a1af85f155bddda2e926f1005a0a275c27665","modified":1697777330466},{"_id":"node_modules/hexo-theme-inside/languages/zh-Hant.yml","hash":"1241229153c9e836c3262d859a7e40f8fdf260e2","modified":1697777330466},{"_id":"node_modules/hexo-theme-inside/lib/configSchema.json","hash":"96f935497d9529c02dd0b595c3f7bafabc76411e","modified":1697777330467},{"_id":"node_modules/hexo-theme-inside/scripts/index.js","hash":"12380556b8afcd8a719d8033d76ca380cfc7137d","modified":1697777330484},{"_id":"node_modules/hexo-theme-inside/layout/index.njk","hash":"35dab0b412f3a6c8570068f907033a3134973619","modified":1697777330466},{"_id":"node_modules/hexo-theme-inside/source/3rdpartylicenses.txt","hash":"fcb21920ef2d18973c75510e7cbb4fa4568a626f","modified":1697777330485},{"_id":"node_modules/hexo-theme-inside/source/_manifest.json","hash":"7aa53dbc28337d7660d194163df64c00476c3015","modified":1697777330485},{"_id":"node_modules/hexo-theme-inside/lib/utils.js","hash":"73e17613043eec2a59595aefe81f9716ce300805","modified":1697777330484},{"_id":"node_modules/hexo-theme-inside/source/runtime.1ed960b0635ea0669f87.js","hash":"1a23d8cab7062a7fae5ed6184d88f6b37c77516b","modified":1697777330500},{"_id":"node_modules/hexo-theme-inside/source/polyfills.b7bf56fc45f931a8b83e.js","hash":"4f742c8c6f028dc25a8a020f6909128b03cfda48","modified":1697777330499},{"_id":"node_modules/hexo-theme-inside/lib/filter/index.js","hash":"ab9b08fdc8243c551058f921061e91026556a521","modified":1697777330467},{"_id":"node_modules/hexo-theme-inside/source/theme.9ecc9ab1.js","hash":"da3c8f9402454e1943d212bcb79cbc29b12b5dca","modified":1697777330501},{"_id":"node_modules/hexo-theme-inside/lib/generator/config.js","hash":"6fabc157b574d5c31ebfe49ee9496e84156457f6","modified":1697777330469},{"_id":"node_modules/hexo-theme-inside/lib/filter/ssr.js","hash":"5971af61b92958a321afab7650a6d32c392b62c1","modified":1697777330468},{"_id":"node_modules/hexo-theme-inside/lib/generator/index.js","hash":"15f6b6e6a39493f02f8e539de8b8ba2daddac2db","modified":1697777330473},{"_id":"node_modules/hexo-theme-inside/lib/filter/templates.js","hash":"8b540fb05c1105c286f167c6ebf132cb188eca6f","modified":1697777330468},{"_id":"node_modules/hexo-theme-inside/lib/helper/ga.js","hash":"ce09016863d39d96ae38b80aa28202faa8635524","modified":1697777330475},{"_id":"node_modules/hexo-theme-inside/lib/generator/manifest.js","hash":"7994ef9242d019fcc4f4ee9ecf2c2e17d9f12daa","modified":1697777330473},{"_id":"node_modules/hexo-theme-inside/lib/generator/sitemap.js","hash":"dc2f3df07a6447c28fa170567959ef3019bc47f5","modified":1697777330474},{"_id":"node_modules/hexo-theme-inside/lib/generator/sw.js","hash":"44ac846f1ebdc06aad555b2bf1f22126bc22aee7","modified":1697777330474},{"_id":"node_modules/hexo-theme-inside/lib/helper/index.js","hash":"80dee4ed2f43f6d1739c1f7fc14276ae9db1f650","modified":1697777330475},{"_id":"node_modules/hexo-theme-inside/lib/filter/post.js","hash":"b2645bbf375919a3e4f0f37d34504ba66fff96c6","modified":1697777330468},{"_id":"node_modules/hexo-theme-inside/lib/plugins/disqus.js","hash":"eb83c238c60451e49693751067b3e2f1f70c64f3","modified":1697777330477},{"_id":"node_modules/hexo-theme-inside/lib/helper/structured_data.js","hash":"a37c5aa02cf002392c2199baf01eb938ee8dd517","modified":1697777330475},{"_id":"node_modules/hexo-theme-inside/lib/helper/url_trim.js","hash":"16288ca371b5af345fbfc5d556349e1879f23a0a","modified":1697777330476},{"_id":"node_modules/hexo-theme-inside/lib/renderer/index.js","hash":"17d08e85329032234c14ca9ba20609e207320864","modified":1697777330478},{"_id":"node_modules/hexo-theme-inside/lib/plugins/manifest.json","hash":"599213b5bf45fa84f857c6bb0c2fc88cfa4f8984","modified":1697777330477},{"_id":"node_modules/hexo-theme-inside/lib/tag/canvas.js","hash":"47f9819fe60b1af3d5e2695ff8aa32ea5de88a8f","modified":1697777330482},{"_id":"node_modules/hexo-theme-inside/lib/tag/gist.js","hash":"ae7a2338748070c32d21f2376dcab235d88e558c","modified":1697777330483},{"_id":"node_modules/hexo-theme-inside/lib/tag/index.js","hash":"f82e11d43e688af043e3921f9b8ba292a559919d","modified":1697777330483},{"_id":"node_modules/hexo-theme-inside/lib/plugins/palette.js","hash":"b4ae90c6da4b78a661da118a060d604255be81e0","modified":1697777330478},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/index.js","hash":"8da9fec8a1b9f1f9be4bc203b2459659a4785d87","modified":1697777330471},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/archives.js","hash":"96582a2f4460ffc1ab83f56acfc07c5357626967","modified":1697777330470},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/categories.js","hash":"519c5694eebd3891c2c3b47c6f5de8eac8619f57","modified":1697777330470},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/posts.js","hash":"3581c146c58ac0b7b1ac711d817a0588aa597ffc","modified":1697777330472},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/pages.js","hash":"1c6dceb3a1fee0aa53c7ce83747b74d2a5f95104","modified":1697777330471},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/properties.js","hash":"ea05c089bee7301244701fa517a0fac565b4dfcf","modified":1697777330472},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/search.js","hash":"6267adff4e65e0a5d600df450fc7787e41ecc100","modified":1697777330472},{"_id":"node_modules/hexo-theme-inside/lib/generator/entries/tags.js","hash":"b03a80773606699066fadf9fee9d567de939dfb4","modified":1697777330473},{"_id":"node_modules/hexo-theme-inside/lib/plugins/cipher.js","hash":"6b9131a1e31b16966ba5e64081621a30e8eb258b","modified":1697777330476},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/index.js","hash":"21ebd5ea7ecd16b666f8a057a285954517a21e75","modified":1697777330479},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/mixins.js","hash":"69dc836c544025de940e2c403671f174a5d3adfe","modified":1697777330480},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/collapse.js","hash":"1d4ab64c877ad6b8721e340b20ee4aa78e6f8499","modified":1697777330480},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/index.js","hash":"f3adaf2527bf471adbaa1a757a6a9cab2b47945e","modified":1697777330481},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/timeline.js","hash":"57b5b1729675298019ab6a5156f31abef7930722","modified":1697777330481},{"_id":"node_modules/hexo-theme-inside/lib/renderer/markdown/plugins/tree.js","hash":"6a08f40615d72b45229d6f7f1b5d7b6146cbfa0d","modified":1697777330482},{"_id":"node_modules/hexo-theme-inside/source/styles.91e7dfca63c7c151daa6.css","hash":"be513488e892c07b5734dd0a095d0c4fc4c7804b","modified":1697777330500},{"_id":"node_modules/hexo-theme-inside/source/main.543c891b4aad158701f3.js","hash":"9d0edfa9c6b5f269f1c2c5d622e23ec6dbd8141c","modified":1697777330499},{"_id":"node_modules/hexo-theme-inside/source/_ssr.js","hash":"cdc036e56f497b4d2f933bc5fc19d61564e36beb","modified":1697777330497}],"Category":[],"Data":[],"Page":[{"title":"index","date":"2023-08-28T10:39:17.000Z","tags":null,"_content":"\n# 欢迎查看EmptyLight\n本站由[Hexo](https://hexo.io)提供技术支持，使用主题[inside](https://github.com/ikeq/hexo-theme-inside)，并在[Github Page](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site)上发布运行。","source":"about/index.md","raw":"---\ntitle: index\ndate: 2023-08-28 18:39:17\ntags:\n---\n\n# 欢迎查看EmptyLight\n本站由[Hexo](https://hexo.io)提供技术支持，使用主题[inside](https://github.com/ikeq/hexo-theme-inside)，并在[Github Page](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site)上发布运行。","updated":"2023-10-20T04:48:52.670Z","path":"about/index.html","comments":0,"layout":"page","_id":"clqqv4ob10000vsmecjszgx88","content":"<h1 id=\"欢迎查看emptylight\">欢迎查看EmptyLight<a title=\"#欢迎查看emptylight\" href=\"#欢迎查看emptylight\"></a></h1>\n<p>本站由<a href=\"https://hexo.io\" target=\"_blank\">Hexo</a>提供技术支持，使用主题<a href=\"https://github.com/ikeq/hexo-theme-inside\" target=\"_blank\">inside</a>，并在<a href=\"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site\" target=\"_blank\">Github Page</a>上发布运行。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"欢迎查看emptylight\">欢迎查看EmptyLight<a title=\"#欢迎查看emptylight\" href=\"#欢迎查看emptylight\"></a></h1>\n<p>本站由<a href=\"https://hexo.io\" target=\"_blank\">Hexo</a>提供技术支持，使用主题<a href=\"https://github.com/ikeq/hexo-theme-inside\" target=\"_blank\">inside</a>，并在<a href=\"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site\" target=\"_blank\">Github Page</a>上发布运行。</p>\n","date_formatted":{"ll":"2023年8月28日","L":"2023/08/28","MM-DD":"08-28"},"link":"about","plink":"http://lingfengyu-dreaming.github.io/about/","type":"page","copyright":{"author":"EmptyLight","link":"<a href=\"http://lingfengyu-dreaming.github.io/about/\" title=\"index\">http://lingfengyu-dreaming.github.io/about/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"toc":[{"id":"欢迎查看emptylight","title":"欢迎查看EmptyLight","index":"1"}],"reading_time":"29 字约 1 分钟"},{"title":"functions","date":"2023-08-28T11:00:11.000Z","tags":null,"_content":"\n# 支持的功能\n本站点支持连接到原站点中提供支持的功能，并且还在不断更新。  \n请注意，这里的链接都是外链，并且托管在腾讯云上。请确认自己到腾讯云服务器的连接速度。\n\n# 支持列表\n- [Base64](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/base64.html)\n- [EncodeURI](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/uricoding.html)\n- [LinkTo](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/link.html)","source":"function/index.md","raw":"---\ntitle: functions\ndate: 2023-08-28 19:00:11\ntags:\n---\n\n# 支持的功能\n本站点支持连接到原站点中提供支持的功能，并且还在不断更新。  \n请注意，这里的链接都是外链，并且托管在腾讯云上。请确认自己到腾讯云服务器的连接速度。\n\n# 支持列表\n- [Base64](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/base64.html)\n- [EncodeURI](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/uricoding.html)\n- [LinkTo](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/link.html)","updated":"2023-10-20T04:48:52.670Z","path":"function/index.html","comments":0,"layout":"page","_id":"clqqv4ob60002vsme8frh18u6","content":"<h1 id=\"支持的功能\">支持的功能<a title=\"#支持的功能\" href=\"#支持的功能\"></a></h1>\n<p>本站点支持连接到原站点中提供支持的功能，并且还在不断更新。<br>\n请注意，这里的链接都是外链，并且托管在腾讯云上。请确认自己到腾讯云服务器的连接速度。</p>\n<h1 id=\"支持列表\">支持列表<a title=\"#支持列表\" href=\"#支持列表\"></a></h1>\n<ul>\n<li><a href=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/base64.html\" target=\"_blank\">Base64</a></li>\n<li><a href=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/uricoding.html\" target=\"_blank\">EncodeURI</a></li>\n<li><a href=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/link.html\" target=\"_blank\">LinkTo</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"支持的功能\">支持的功能<a title=\"#支持的功能\" href=\"#支持的功能\"></a></h1>\n<p>本站点支持连接到原站点中提供支持的功能，并且还在不断更新。<br>\n请注意，这里的链接都是外链，并且托管在腾讯云上。请确认自己到腾讯云服务器的连接速度。</p>\n<h1 id=\"支持列表\">支持列表<a title=\"#支持列表\" href=\"#支持列表\"></a></h1>\n<ul>\n<li><a href=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/base64.html\" target=\"_blank\">Base64</a></li>\n<li><a href=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/uricoding.html\" target=\"_blank\">EncodeURI</a></li>\n<li><a href=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/website/function/link.html\" target=\"_blank\">LinkTo</a></li>\n</ul>\n","date_formatted":{"ll":"2023年8月28日","L":"2023/08/28","MM-DD":"08-28"},"link":"function","plink":"http://lingfengyu-dreaming.github.io/function/","type":"page","copyright":{"author":"EmptyLight","link":"<a href=\"http://lingfengyu-dreaming.github.io/function/\" title=\"functions\">http://lingfengyu-dreaming.github.io/function/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"toc":[{"id":"支持的功能","title":"支持的功能","index":"1"},{"id":"支持列表","title":"支持列表","index":"2"}],"reading_time":"77 字约 1 分钟"}],"Post":[{"title":"JS的高级操作","date":"2023-08-20T15:21:13.000Z","lastmod":"2023-08-21T06:25:20.000Z","_content":"\n# JS的高级操作\n\n## 复制文本或其他内容到剪切板\n\n对剪切板的操作使用 `navigator` ​进行，这个操作不会立即执行，而是会生成一个 `promise` ​对象，具体的操作由浏览器异步执行，返回结果到 `promise` ​对象中。\n\n```js\n// 写入文本到剪切板\nnavigator.clipboard.writeText(text);\n// 写入其他内容到剪切板\nnavigator.clipboard.write(object);\n// 读取剪切板的文本\nvar text = navigator.clipboard.readText();\n// 读取剪切板的内容\nvar object = navigator.clipboard.read();\n```\n\n如果想要根据结果做出相应的操作，就需要使用 `.then()` ​来获取返回的结果。结构为 `.then(successed funtion, failed function)`​，内部放置的是 `function` ​块，最好使用 `function() {}` ​包裹代码块。\n\n```js\nnavigator.clipboard.writeText(text).then(function() {alert(\"success\");}, function() {alert(\"failed\");});\n\n// 对这个结构进行展开则是\nnavigator.clipboard.writeText(text).then(\n    function() {alert(\"success\");}, //success\n    function() {alert(\"failed\");} //failed\n);\n```\n\n在浏览器执行操作之前最好使用 `premission` ​获取权限，但是文档讲的不明不白的，不会。\n\n## 在页面内通过 JS 设置一个通知\n\n```js\n// 设置通知的函数，其中的参数分别是：显示的消息，通知状态(success/fail)，持续时间(ms)\nfunction notification(message, state, duration)\n{\n    // 创建一个div来显示消息\n    var notification = document.createElement('div');\n    // 内部显示的文字内容\n    notification.textContent = message;\n    // 通过style属性进行显示位置设定\n    // 固定显示位置，方便下面调整位置\n    notification.style.position = 'fixed';\n    // 距离顶部距离\n    notification.style.top = '10px';\n    // 距离右部距离，此处的calc(49%)不能完全居中，需要调整\n    notification.style.right = 'calc(49%)';\n    // 忘记是什么参数了\n    notification.style.padding = '10px';\n    // 根据传入的状态来显示背景，达成不同通知效果\n    if (state == \"success\")\n        notification.style.backgroundColor = 'white';\n    else if (state == \"fail\")\n        notification.style.backgroundColor = 'yellow';\n    // 边框\n    notification.style.border = '1px solid black';\n    // 曲角\n    notification.style.borderRadius = '5px';\n    // 显示在屏幕上，直接添加到body内，成为body的子元素\n    document.body.appendChild(notification);\n    // 设置一个定时器来移除子元素，持续时间为输入的时间\n    setTimeout(function ()\n    {\n        document.body.removeChild(notification);\n    }, duration);\n}\n```\n\n## 通过 Base64 进行加解密\n\njs 中内置有一个 Base64 的方法，但是只支持 AscII 字符转换，这个肯定不够用，但是还是记录如下\n\n```js\n// 加密\nvar inputText=document.getElementById(\"input\").value;\nvar outputText=btoa(inputText);\n\n// 解密\nvar inputText=document.getElementById(\"input\").value;\nvar outputText=atob(inputText);\n```\n\n通过引入 [js-base64](https://www.npmjs.com/package/js-base64) 库的方法，我们可以支持任意字符的 Base64 加解密\n\n```html\n<!-- 通过网络引入所需资源 -->\n<script src=\"https://cdn.jsdelivr.net/npm/js-base64@3.7.5/base64.min.js\"></script>\n```\n\n```js\n// 在js中使用js-base64\n// 加密\nvar inputText=document.getElementById(\"input\");\nvar outputText=Base64.encode(inputText);\n\n// 解密\nvar inputText=document.getElementById(\"input\");\nvar outputText=Base64.decode(inputText);\n```\n","source":"_posts/JS的高级操作.md","raw":"---\ntitle: JS的高级操作\ndate: 2023-08-20T23:21:13Z\nlastmod: 2023-08-21T14:25:20Z\n---\n\n# JS的高级操作\n\n## 复制文本或其他内容到剪切板\n\n对剪切板的操作使用 `navigator` ​进行，这个操作不会立即执行，而是会生成一个 `promise` ​对象，具体的操作由浏览器异步执行，返回结果到 `promise` ​对象中。\n\n```js\n// 写入文本到剪切板\nnavigator.clipboard.writeText(text);\n// 写入其他内容到剪切板\nnavigator.clipboard.write(object);\n// 读取剪切板的文本\nvar text = navigator.clipboard.readText();\n// 读取剪切板的内容\nvar object = navigator.clipboard.read();\n```\n\n如果想要根据结果做出相应的操作，就需要使用 `.then()` ​来获取返回的结果。结构为 `.then(successed funtion, failed function)`​，内部放置的是 `function` ​块，最好使用 `function() {}` ​包裹代码块。\n\n```js\nnavigator.clipboard.writeText(text).then(function() {alert(\"success\");}, function() {alert(\"failed\");});\n\n// 对这个结构进行展开则是\nnavigator.clipboard.writeText(text).then(\n    function() {alert(\"success\");}, //success\n    function() {alert(\"failed\");} //failed\n);\n```\n\n在浏览器执行操作之前最好使用 `premission` ​获取权限，但是文档讲的不明不白的，不会。\n\n## 在页面内通过 JS 设置一个通知\n\n```js\n// 设置通知的函数，其中的参数分别是：显示的消息，通知状态(success/fail)，持续时间(ms)\nfunction notification(message, state, duration)\n{\n    // 创建一个div来显示消息\n    var notification = document.createElement('div');\n    // 内部显示的文字内容\n    notification.textContent = message;\n    // 通过style属性进行显示位置设定\n    // 固定显示位置，方便下面调整位置\n    notification.style.position = 'fixed';\n    // 距离顶部距离\n    notification.style.top = '10px';\n    // 距离右部距离，此处的calc(49%)不能完全居中，需要调整\n    notification.style.right = 'calc(49%)';\n    // 忘记是什么参数了\n    notification.style.padding = '10px';\n    // 根据传入的状态来显示背景，达成不同通知效果\n    if (state == \"success\")\n        notification.style.backgroundColor = 'white';\n    else if (state == \"fail\")\n        notification.style.backgroundColor = 'yellow';\n    // 边框\n    notification.style.border = '1px solid black';\n    // 曲角\n    notification.style.borderRadius = '5px';\n    // 显示在屏幕上，直接添加到body内，成为body的子元素\n    document.body.appendChild(notification);\n    // 设置一个定时器来移除子元素，持续时间为输入的时间\n    setTimeout(function ()\n    {\n        document.body.removeChild(notification);\n    }, duration);\n}\n```\n\n## 通过 Base64 进行加解密\n\njs 中内置有一个 Base64 的方法，但是只支持 AscII 字符转换，这个肯定不够用，但是还是记录如下\n\n```js\n// 加密\nvar inputText=document.getElementById(\"input\").value;\nvar outputText=btoa(inputText);\n\n// 解密\nvar inputText=document.getElementById(\"input\").value;\nvar outputText=atob(inputText);\n```\n\n通过引入 [js-base64](https://www.npmjs.com/package/js-base64) 库的方法，我们可以支持任意字符的 Base64 加解密\n\n```html\n<!-- 通过网络引入所需资源 -->\n<script src=\"https://cdn.jsdelivr.net/npm/js-base64@3.7.5/base64.min.js\"></script>\n```\n\n```js\n// 在js中使用js-base64\n// 加密\nvar inputText=document.getElementById(\"input\");\nvar outputText=Base64.encode(inputText);\n\n// 解密\nvar inputText=document.getElementById(\"input\");\nvar outputText=Base64.decode(inputText);\n```\n","slug":"JS的高级操作","published":1,"updated":"2023-10-20T04:48:52.663Z","comments":0,"layout":"post","photos":[],"link":"2023/08/20/JS的高级操作","_id":"clqqv4ob30001vsmeb3de1vpr","content":"<h1 id=\"js的高级操作\">JS的高级操作<a title=\"#js的高级操作\" href=\"#js的高级操作\"></a></h1>\n<h2 id=\"复制文本或其他内容到剪切板\">复制文本或其他内容到剪切板<a title=\"#复制文本或其他内容到剪切板\" href=\"#复制文本或其他内容到剪切板\"></a></h2>\n<p>对剪切板的操作使用 <code>navigator</code> ​进行，这个操作不会立即执行，而是会生成一个 <code>promise</code> ​对象，具体的操作由浏览器异步执行，返回结果到 <code>promise</code> ​对象中。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 写入文本到剪切板</span></span><br><span class=\"line\">navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">writeText</span>(text);</span><br><span class=\"line\"><span class=\"comment\">// 写入其他内容到剪切板</span></span><br><span class=\"line\">navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">write</span>(object);</span><br><span class=\"line\"><span class=\"comment\">// 读取剪切板的文本</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> text = navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">readText</span>();</span><br><span class=\"line\"><span class=\"comment\">// 读取剪切板的内容</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> object = navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">read</span>();</span><br></pre></td></tr></table></figure>\n<p>如果想要根据结果做出相应的操作，就需要使用 <code>.then()</code> ​来获取返回的结果。结构为 <code>.then(successed funtion, failed function)</code>​，内部放置的是 <code>function</code> ​块，最好使用 <code>function() &#123;&#125;</code> ​包裹代码块。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">writeText</span>(text).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;success&quot;</span>);&#125;, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;failed&quot;</span>);&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对这个结构进行展开则是</span></span><br><span class=\"line\">navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">writeText</span>(text).<span class=\"title function_\">then</span>(</span><br><span class=\"line\">    <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;success&quot;</span>);&#125;, <span class=\"comment\">//success</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;failed&quot;</span>);&#125; <span class=\"comment\">//failed</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>在浏览器执行操作之前最好使用 <code>premission</code> ​获取权限，但是文档讲的不明不白的，不会。</p>\n<h2 id=\"在页面内通过-js-设置一个通知\">在页面内通过 JS 设置一个通知<a title=\"#在页面内通过-js-设置一个通知\" href=\"#在页面内通过-js-设置一个通知\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置通知的函数，其中的参数分别是：显示的消息，通知状态(success/fail)，持续时间(ms)</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">notification</span>(<span class=\"params\">message, state, duration</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个div来显示消息</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> notification = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 内部显示的文字内容</span></span><br><span class=\"line\">    notification.<span class=\"property\">textContent</span> = message;</span><br><span class=\"line\">    <span class=\"comment\">// 通过style属性进行显示位置设定</span></span><br><span class=\"line\">    <span class=\"comment\">// 固定显示位置，方便下面调整位置</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">position</span> = <span class=\"string\">&#x27;fixed&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 距离顶部距离</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">top</span> = <span class=\"string\">&#x27;10px&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 距离右部距离，此处的calc(49%)不能完全居中，需要调整</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">right</span> = <span class=\"string\">&#x27;calc(49%)&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 忘记是什么参数了</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">padding</span> = <span class=\"string\">&#x27;10px&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 根据传入的状态来显示背景，达成不同通知效果</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (state == <span class=\"string\">&quot;success&quot;</span>)</span><br><span class=\"line\">        notification.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&#x27;white&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (state == <span class=\"string\">&quot;fail&quot;</span>)</span><br><span class=\"line\">        notification.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 边框</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">border</span> = <span class=\"string\">&#x27;1px solid black&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 曲角</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">borderRadius</span> = <span class=\"string\">&#x27;5px&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 显示在屏幕上，直接添加到body内，成为body的子元素</span></span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(notification);</span><br><span class=\"line\">    <span class=\"comment\">// 设置一个定时器来移除子元素，持续时间为输入的时间</span></span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">removeChild</span>(notification);</span><br><span class=\"line\">    &#125;, duration);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过-base64-进行加解密\">通过 Base64 进行加解密<a title=\"#通过-base64-进行加解密\" href=\"#通过-base64-进行加解密\"></a></h2>\n<p>js 中内置有一个 Base64 的方法，但是只支持 AscII 字符转换，这个肯定不够用，但是还是记录如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 加密</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputText=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>).<span class=\"property\">value</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> outputText=<span class=\"title function_\">btoa</span>(inputText);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解密</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputText=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>).<span class=\"property\">value</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> outputText=<span class=\"title function_\">atob</span>(inputText);</span><br></pre></td></tr></table></figure>\n<p>通过引入 <a href=\"https://www.npmjs.com/package/js-base64\" target=\"_blank\">js-base64</a> 库的方法，我们可以支持任意字符的 Base64 加解密</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 通过网络引入所需资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/js-base64@3.7.5/base64.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在js中使用js-base64</span></span><br><span class=\"line\"><span class=\"comment\">// 加密</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputText=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> outputText=<span class=\"title class_\">Base64</span>.<span class=\"title function_\">encode</span>(inputText);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解密</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputText=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> outputText=<span class=\"title class_\">Base64</span>.<span class=\"title function_\">decode</span>(inputText);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"js的高级操作\">JS的高级操作<a title=\"#js的高级操作\" href=\"#js的高级操作\"></a></h1>\n<h2 id=\"复制文本或其他内容到剪切板\">复制文本或其他内容到剪切板<a title=\"#复制文本或其他内容到剪切板\" href=\"#复制文本或其他内容到剪切板\"></a></h2>\n<p>对剪切板的操作使用 <code>navigator</code> ​进行，这个操作不会立即执行，而是会生成一个 <code>promise</code> ​对象，具体的操作由浏览器异步执行，返回结果到 <code>promise</code> ​对象中。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 写入文本到剪切板</span></span><br><span class=\"line\">navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">writeText</span>(text);</span><br><span class=\"line\"><span class=\"comment\">// 写入其他内容到剪切板</span></span><br><span class=\"line\">navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">write</span>(object);</span><br><span class=\"line\"><span class=\"comment\">// 读取剪切板的文本</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> text = navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">readText</span>();</span><br><span class=\"line\"><span class=\"comment\">// 读取剪切板的内容</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> object = navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">read</span>();</span><br></pre></td></tr></table></figure>\n<p>如果想要根据结果做出相应的操作，就需要使用 <code>.then()</code> ​来获取返回的结果。结构为 <code>.then(successed funtion, failed function)</code>​，内部放置的是 <code>function</code> ​块，最好使用 <code>function() &#123;&#125;</code> ​包裹代码块。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">writeText</span>(text).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;success&quot;</span>);&#125;, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;failed&quot;</span>);&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对这个结构进行展开则是</span></span><br><span class=\"line\">navigator.<span class=\"property\">clipboard</span>.<span class=\"title function_\">writeText</span>(text).<span class=\"title function_\">then</span>(</span><br><span class=\"line\">    <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;success&quot;</span>);&#125;, <span class=\"comment\">//success</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;failed&quot;</span>);&#125; <span class=\"comment\">//failed</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>在浏览器执行操作之前最好使用 <code>premission</code> ​获取权限，但是文档讲的不明不白的，不会。</p>\n<h2 id=\"在页面内通过-js-设置一个通知\">在页面内通过 JS 设置一个通知<a title=\"#在页面内通过-js-设置一个通知\" href=\"#在页面内通过-js-设置一个通知\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置通知的函数，其中的参数分别是：显示的消息，通知状态(success/fail)，持续时间(ms)</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">notification</span>(<span class=\"params\">message, state, duration</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个div来显示消息</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> notification = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 内部显示的文字内容</span></span><br><span class=\"line\">    notification.<span class=\"property\">textContent</span> = message;</span><br><span class=\"line\">    <span class=\"comment\">// 通过style属性进行显示位置设定</span></span><br><span class=\"line\">    <span class=\"comment\">// 固定显示位置，方便下面调整位置</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">position</span> = <span class=\"string\">&#x27;fixed&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 距离顶部距离</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">top</span> = <span class=\"string\">&#x27;10px&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 距离右部距离，此处的calc(49%)不能完全居中，需要调整</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">right</span> = <span class=\"string\">&#x27;calc(49%)&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 忘记是什么参数了</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">padding</span> = <span class=\"string\">&#x27;10px&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 根据传入的状态来显示背景，达成不同通知效果</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (state == <span class=\"string\">&quot;success&quot;</span>)</span><br><span class=\"line\">        notification.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&#x27;white&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (state == <span class=\"string\">&quot;fail&quot;</span>)</span><br><span class=\"line\">        notification.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 边框</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">border</span> = <span class=\"string\">&#x27;1px solid black&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 曲角</span></span><br><span class=\"line\">    notification.<span class=\"property\">style</span>.<span class=\"property\">borderRadius</span> = <span class=\"string\">&#x27;5px&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 显示在屏幕上，直接添加到body内，成为body的子元素</span></span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(notification);</span><br><span class=\"line\">    <span class=\"comment\">// 设置一个定时器来移除子元素，持续时间为输入的时间</span></span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">removeChild</span>(notification);</span><br><span class=\"line\">    &#125;, duration);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过-base64-进行加解密\">通过 Base64 进行加解密<a title=\"#通过-base64-进行加解密\" href=\"#通过-base64-进行加解密\"></a></h2>\n<p>js 中内置有一个 Base64 的方法，但是只支持 AscII 字符转换，这个肯定不够用，但是还是记录如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 加密</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputText=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>).<span class=\"property\">value</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> outputText=<span class=\"title function_\">btoa</span>(inputText);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解密</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputText=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>).<span class=\"property\">value</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> outputText=<span class=\"title function_\">atob</span>(inputText);</span><br></pre></td></tr></table></figure>\n<p>通过引入 <a href=\"https://www.npmjs.com/package/js-base64\" target=\"_blank\">js-base64</a> 库的方法，我们可以支持任意字符的 Base64 加解密</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 通过网络引入所需资源 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/js-base64@3.7.5/base64.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在js中使用js-base64</span></span><br><span class=\"line\"><span class=\"comment\">// 加密</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputText=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> outputText=<span class=\"title class_\">Base64</span>.<span class=\"title function_\">encode</span>(inputText);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解密</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> inputText=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> outputText=<span class=\"title class_\">Base64</span>.<span class=\"title function_\">decode</span>(inputText);</span><br></pre></td></tr></table></figure>\n","date_formatted":{"ll":"2023年8月20日","L":"2023/08/20","MM-DD":"08-20"},"plink":"http://lingfengyu-dreaming.github.io/2023/08/20/JS的高级操作/","type":"post","toc":[{"id":"js的高级操作","title":"JS的高级操作","index":"1","children":[{"id":"复制文本或其他内容到剪切板","title":"复制文本或其他内容到剪切板","index":"1.1"},{"id":"在页面内通过-js-设置一个通知","title":"在页面内通过 JS 设置一个通知","index":"1.2"},{"id":"通过-base64-进行加解密","title":"通过 Base64 进行加解密","index":"1.3"}]}],"reading_time":"720 字约 5 分钟"},{"title":"追番体验","date":"2023-12-29T15:25:02.000Z","updated":"2023-12-29T16:35:02.000Z","comments":0,"toc":[{"id":"追番体验","title":"追番体验","index":"1"},{"id":"前言","title":"前言","index":"2"},{"id":"了解知识","title":"了解知识","index":"3"},{"id":"网站","title":"网站","index":"4"},{"id":"下载器","title":"下载器","index":"5"},{"id":"找资源","title":"找资源","index":"6"},{"id":"结尾","title":"结尾","index":"7"}],"_content":"\n\n\n# 追番体验\n\n# 前言\n\n毫无疑问，追番当然是非常重要的一件事情。\n\n在现在这个环境，要追番也不是一件容易的事情。b站追番删减版又慢半拍，a站也少见于追番过程中，网上的视频站也偶尔能淘出一些宝贝，但更多时候是xx赌场广告满天飞。\n\n这种时候，在尝试过多种追番方案之后，我选择了较为整体的追番安排——使用种子站获取汉化组的最新资源。\n\n这个选择代表着我需要了解bt下载的各种知识，同时能够找到长期稳定的发布站——或是源站，或是镜像站，又需要找到一个能够同时承担接管浏览器http下载和bt下载功能的下载器。之后就是长期跟进番剧进度，找汉化组资源。\n\n以下就列出我目前的解决方案。于2023-12-30完成。不保证没有错别字（特别是软件名字、网站名字等）。\n\n# 了解知识\n\nbt下载不同于http下载。我个人的理解：http下载通常指从服务器到客户端的下载，只要服务器不挂不墙，要下载内容还是很方便的，比如网盘、网站内下载链接等等等等。。。。bt下载是p2p下载，从一个用户到另一个用户，你下载的资源是其他下载这个资源的人发送给你的，不是直接从汉化组服务器发出来给你的。这就意味着你的下载速度完全和其他人的上传速度挂钩。一般情况下，汉化组或者发布组都会有一个服务器，里面长期挂载着自己资源的上传，这也是资源首先上传的来源。之后，在有几个人接收完资源之后，如果是正规的bt客户端，就会有一段时间的上传操作，这个时候用户的下载客户端就变成了上传客户端，给其他下载的人发送内容。长此以往，循环往复。这就是bt下载，也是为什么要在下载完成后挂一段时间上传的原因（尽管很少有上传的时候）。\n\n因为国内的网络环境，多数情况下bt下载和上传都不会显得容易。这时候就需要用到路由器的upnp功能（或者叫端口转发），这个功能我无法过多解释，建议自行bing搜索。其次，bt下载是用户之间直接连接，为了找到其他人，你需要知道其他人的ip地址才能连接到他们。直接在互联网上广播自己的ip地址显然不合适，这时候就需要有服务器来间接连接用户，这就是tracker服务器，这些服务器一般由发布站维护，记录当前上传/下载种子的人，通过查询服务器信息可以去连接其他人，尝试沟通对方是否有自己在下载的资源。连接成功，就可以开始从对方那里接收数据了。\n\n知道了基础信息，就需要有合适的工具了。bt下载工具很多，qbittorrent，qbittorrentEE，bitComit，Motrix，transmission，xdown等等，很多人有发推荐，为了减轻负担，我选择了有自动更新tracker服务器功能的软件，比如qbittorrentEE，Motrix，xdown，下文根据Motrix和xdown进行介绍。\n\n# 网站\n\n现存的发布站不少，网上很容易搜到的，我放个链接在这里：[ACG.RIP](https://acgrip.art/ \"ACG.RIP\")。当然，你自己能搜到别的发布站肯定更好，多在收藏夹里面放几个网站，到了出问题的时候还有备用站能看。可以尝试搜bt下载站，动漫下载站等常见关键词，或者搜常见字幕组的名字，这种情况下容易找到网站。\n\n在发布动漫资源的网站外，还有其他资源的网站，比如发布字幕的网站等，这些别的网站还请自行搜索，我没有用到这类网站。\n\n# 下载器\n\n前文提过，我以Motrix和xdown为基础进行介绍。qbittorrentEE我记得是能实现下面大部分功能的，但是只支持bt下载。\n\n在安装完下载器（或者是不需要安装的解压版）之后，还请把设置全部看一遍，尽量设置好，不要嫌麻烦。我列出一些我比较关注的设置项。\n\n1. http下载设置。接管浏览器下载的文件、文件类型。我的下载器是接管浏览器下载的，Motrix使用edge浏览器的[Aria2 Explorer](https://microsoftedge.microsoft.com/addons/detail/jjfgljkjddpcpfapejfkelkbjbehagbh \"Aria2 Explorer\")扩展接管，这个扩展能够比较好地接管下载；xdown使用自带扩展接管下载，之前跟开发者邮件后得知xdown的扩展会首先尝试启动xdown，所以有时需要多点击下载几次。\n2. http下载线程。Motrix和xdown都是多线程下载器，能够有效加快下载速度（度盘除外）。\n3. bt下载设置。bt下载完成后的上传时间、分享率。上传时间和分享率直接关系到你给其他人发送多少内容。在有能力的时候还请尽量多上传一会发给别人。\n4. tracker服务器设置。Motrix和xdown都可以自动更新tracker服务器，并且自带服务器。这种情况下默认每天自动更新一次服务器，也不用自己动手。这就是我选择Motrix和xdown的较主要原因。\n5. RSS订阅源。这个功能比较老了，建议自己搜一下。它是能够读取一个xml网页里面的文章信息。我前文提到的ACG.RIP有提供RSS订阅源，但是Motrix是没有这个功能的，是xdown有这个功能。使用RSS订阅源，我关注了几个常看的字幕组，在网站上有内容更新之后，RSS订阅源网页自动更新，xdown就能获取到更新的文章内容（也就是新发布的番剧内容），可以通过这个打开浏览器页面或者直接下载bt种子。\n\n在设置好之后，一般就能比较好地下载内容了。前面提到过，是比较正规的bt下载器，而根据以往长期的使用体验，在下载这方面，似乎一直都是迅雷比较出色，又活得比较久，为什么大家都不推荐迅雷呢？因为迅雷的下载策略。迅雷的下载是从所有的bt下载客户端下载，但是只上传到自己的服务器和自己的客户端，那么其他需要下载的用户不使用迅雷就无法从迅雷下载内容，迅雷这番操作也被称为吸血，所以迅雷也有被称为吸血雷。但是有时一些无人做种的种子还是可以去迅雷试试运气的，说不定迅雷服务器就有资源同时未被迅雷和谐呢？\n\n# 找资源\n\n一般可以通过b站了解下季度新番，或者看比较出名的番剧网站，又或者是想要补什么老番？\n\n但是，由于bt下载的特性，新内容比较容易有更多人下载上传，老内容就容易没有人做种从而变成死种（就是无法下载，因为没人上传）。这时候要补老番就显得比较麻烦，所以我补老番还是会更多地试试网盘。\n\n对于新番，可以看看别人的评价，再根据自己的喜好评估是否要看。\n\n对于发布站上一长串的番剧文件名，我推荐自行搜索了解，可以找到整体从前往后的各部分解释，又能找到每个位置参数的具体解释，网上还是有很多教程的。我不便展开。\n\n# 结尾\n\n因为写的长了，花的时间长，原本要写的内容已经忘记要写到哪里了。所以在此草草结尾，如有疑问或需要补充的内容，可以通过站点内的邮件联系我。感谢阅读。\n","source":"_posts/chase-experience-2udw5r.md","raw":"---\ntitle: 追番体验\ndate: '2023-12-29 23:25:02'\nupdated: '2023-12-30 00:35:02'\npermalink: /post/chase-experience-2udw5r.html\ncomments: true\ntoc: true\n---\n\n\n\n# 追番体验\n\n# 前言\n\n毫无疑问，追番当然是非常重要的一件事情。\n\n在现在这个环境，要追番也不是一件容易的事情。b站追番删减版又慢半拍，a站也少见于追番过程中，网上的视频站也偶尔能淘出一些宝贝，但更多时候是xx赌场广告满天飞。\n\n这种时候，在尝试过多种追番方案之后，我选择了较为整体的追番安排——使用种子站获取汉化组的最新资源。\n\n这个选择代表着我需要了解bt下载的各种知识，同时能够找到长期稳定的发布站——或是源站，或是镜像站，又需要找到一个能够同时承担接管浏览器http下载和bt下载功能的下载器。之后就是长期跟进番剧进度，找汉化组资源。\n\n以下就列出我目前的解决方案。于2023-12-30完成。不保证没有错别字（特别是软件名字、网站名字等）。\n\n# 了解知识\n\nbt下载不同于http下载。我个人的理解：http下载通常指从服务器到客户端的下载，只要服务器不挂不墙，要下载内容还是很方便的，比如网盘、网站内下载链接等等等等。。。。bt下载是p2p下载，从一个用户到另一个用户，你下载的资源是其他下载这个资源的人发送给你的，不是直接从汉化组服务器发出来给你的。这就意味着你的下载速度完全和其他人的上传速度挂钩。一般情况下，汉化组或者发布组都会有一个服务器，里面长期挂载着自己资源的上传，这也是资源首先上传的来源。之后，在有几个人接收完资源之后，如果是正规的bt客户端，就会有一段时间的上传操作，这个时候用户的下载客户端就变成了上传客户端，给其他下载的人发送内容。长此以往，循环往复。这就是bt下载，也是为什么要在下载完成后挂一段时间上传的原因（尽管很少有上传的时候）。\n\n因为国内的网络环境，多数情况下bt下载和上传都不会显得容易。这时候就需要用到路由器的upnp功能（或者叫端口转发），这个功能我无法过多解释，建议自行bing搜索。其次，bt下载是用户之间直接连接，为了找到其他人，你需要知道其他人的ip地址才能连接到他们。直接在互联网上广播自己的ip地址显然不合适，这时候就需要有服务器来间接连接用户，这就是tracker服务器，这些服务器一般由发布站维护，记录当前上传/下载种子的人，通过查询服务器信息可以去连接其他人，尝试沟通对方是否有自己在下载的资源。连接成功，就可以开始从对方那里接收数据了。\n\n知道了基础信息，就需要有合适的工具了。bt下载工具很多，qbittorrent，qbittorrentEE，bitComit，Motrix，transmission，xdown等等，很多人有发推荐，为了减轻负担，我选择了有自动更新tracker服务器功能的软件，比如qbittorrentEE，Motrix，xdown，下文根据Motrix和xdown进行介绍。\n\n# 网站\n\n现存的发布站不少，网上很容易搜到的，我放个链接在这里：[ACG.RIP](https://acgrip.art/ \"ACG.RIP\")。当然，你自己能搜到别的发布站肯定更好，多在收藏夹里面放几个网站，到了出问题的时候还有备用站能看。可以尝试搜bt下载站，动漫下载站等常见关键词，或者搜常见字幕组的名字，这种情况下容易找到网站。\n\n在发布动漫资源的网站外，还有其他资源的网站，比如发布字幕的网站等，这些别的网站还请自行搜索，我没有用到这类网站。\n\n# 下载器\n\n前文提过，我以Motrix和xdown为基础进行介绍。qbittorrentEE我记得是能实现下面大部分功能的，但是只支持bt下载。\n\n在安装完下载器（或者是不需要安装的解压版）之后，还请把设置全部看一遍，尽量设置好，不要嫌麻烦。我列出一些我比较关注的设置项。\n\n1. http下载设置。接管浏览器下载的文件、文件类型。我的下载器是接管浏览器下载的，Motrix使用edge浏览器的[Aria2 Explorer](https://microsoftedge.microsoft.com/addons/detail/jjfgljkjddpcpfapejfkelkbjbehagbh \"Aria2 Explorer\")扩展接管，这个扩展能够比较好地接管下载；xdown使用自带扩展接管下载，之前跟开发者邮件后得知xdown的扩展会首先尝试启动xdown，所以有时需要多点击下载几次。\n2. http下载线程。Motrix和xdown都是多线程下载器，能够有效加快下载速度（度盘除外）。\n3. bt下载设置。bt下载完成后的上传时间、分享率。上传时间和分享率直接关系到你给其他人发送多少内容。在有能力的时候还请尽量多上传一会发给别人。\n4. tracker服务器设置。Motrix和xdown都可以自动更新tracker服务器，并且自带服务器。这种情况下默认每天自动更新一次服务器，也不用自己动手。这就是我选择Motrix和xdown的较主要原因。\n5. RSS订阅源。这个功能比较老了，建议自己搜一下。它是能够读取一个xml网页里面的文章信息。我前文提到的ACG.RIP有提供RSS订阅源，但是Motrix是没有这个功能的，是xdown有这个功能。使用RSS订阅源，我关注了几个常看的字幕组，在网站上有内容更新之后，RSS订阅源网页自动更新，xdown就能获取到更新的文章内容（也就是新发布的番剧内容），可以通过这个打开浏览器页面或者直接下载bt种子。\n\n在设置好之后，一般就能比较好地下载内容了。前面提到过，是比较正规的bt下载器，而根据以往长期的使用体验，在下载这方面，似乎一直都是迅雷比较出色，又活得比较久，为什么大家都不推荐迅雷呢？因为迅雷的下载策略。迅雷的下载是从所有的bt下载客户端下载，但是只上传到自己的服务器和自己的客户端，那么其他需要下载的用户不使用迅雷就无法从迅雷下载内容，迅雷这番操作也被称为吸血，所以迅雷也有被称为吸血雷。但是有时一些无人做种的种子还是可以去迅雷试试运气的，说不定迅雷服务器就有资源同时未被迅雷和谐呢？\n\n# 找资源\n\n一般可以通过b站了解下季度新番，或者看比较出名的番剧网站，又或者是想要补什么老番？\n\n但是，由于bt下载的特性，新内容比较容易有更多人下载上传，老内容就容易没有人做种从而变成死种（就是无法下载，因为没人上传）。这时候要补老番就显得比较麻烦，所以我补老番还是会更多地试试网盘。\n\n对于新番，可以看看别人的评价，再根据自己的喜好评估是否要看。\n\n对于发布站上一长串的番剧文件名，我推荐自行搜索了解，可以找到整体从前往后的各部分解释，又能找到每个位置参数的具体解释，网上还是有很多教程的。我不便展开。\n\n# 结尾\n\n因为写的长了，花的时间长，原本要写的内容已经忘记要写到哪里了。所以在此草草结尾，如有疑问或需要补充的内容，可以通过站点内的邮件联系我。感谢阅读。\n","slug":"chase-experience-2udw5r","published":1,"__permalink":"/post/chase-experience-2udw5r.html","layout":"post","photos":[],"link":"post/chase-experience-2udw5r","_id":"clqqv4ob60003vsme9la8944k","content":"<h1 id=\"追番体验\">追番体验<a title=\"#追番体验\" href=\"#追番体验\"></a></h1>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<p>毫无疑问，追番当然是非常重要的一件事情。</p>\n<p>在现在这个环境，要追番也不是一件容易的事情。b站追番删减版又慢半拍，a站也少见于追番过程中，网上的视频站也偶尔能淘出一些宝贝，但更多时候是xx赌场广告满天飞。</p>\n<p>这种时候，在尝试过多种追番方案之后，我选择了较为整体的追番安排——使用种子站获取汉化组的最新资源。</p>\n<p>这个选择代表着我需要了解bt下载的各种知识，同时能够找到长期稳定的发布站——或是源站，或是镜像站，又需要找到一个能够同时承担接管浏览器http下载和bt下载功能的下载器。之后就是长期跟进番剧进度，找汉化组资源。</p>\n<p>以下就列出我目前的解决方案。于2023-12-30完成。不保证没有错别字（特别是软件名字、网站名字等）。</p>\n<h1 id=\"了解知识\">了解知识<a title=\"#了解知识\" href=\"#了解知识\"></a></h1>\n<p>bt下载不同于http下载。我个人的理解：http下载通常指从服务器到客户端的下载，只要服务器不挂不墙，要下载内容还是很方便的，比如网盘、网站内下载链接等等等等。。。。bt下载是p2p下载，从一个用户到另一个用户，你下载的资源是其他下载这个资源的人发送给你的，不是直接从汉化组服务器发出来给你的。这就意味着你的下载速度完全和其他人的上传速度挂钩。一般情况下，汉化组或者发布组都会有一个服务器，里面长期挂载着自己资源的上传，这也是资源首先上传的来源。之后，在有几个人接收完资源之后，如果是正规的bt客户端，就会有一段时间的上传操作，这个时候用户的下载客户端就变成了上传客户端，给其他下载的人发送内容。长此以往，循环往复。这就是bt下载，也是为什么要在下载完成后挂一段时间上传的原因（尽管很少有上传的时候）。</p>\n<p>因为国内的网络环境，多数情况下bt下载和上传都不会显得容易。这时候就需要用到路由器的upnp功能（或者叫端口转发），这个功能我无法过多解释，建议自行bing搜索。其次，bt下载是用户之间直接连接，为了找到其他人，你需要知道其他人的ip地址才能连接到他们。直接在互联网上广播自己的ip地址显然不合适，这时候就需要有服务器来间接连接用户，这就是tracker服务器，这些服务器一般由发布站维护，记录当前上传/下载种子的人，通过查询服务器信息可以去连接其他人，尝试沟通对方是否有自己在下载的资源。连接成功，就可以开始从对方那里接收数据了。</p>\n<p>知道了基础信息，就需要有合适的工具了。bt下载工具很多，qbittorrent，qbittorrentEE，bitComit，Motrix，transmission，xdown等等，很多人有发推荐，为了减轻负担，我选择了有自动更新tracker服务器功能的软件，比如qbittorrentEE，Motrix，xdown，下文根据Motrix和xdown进行介绍。</p>\n<h1 id=\"网站\">网站<a title=\"#网站\" href=\"#网站\"></a></h1>\n<p>现存的发布站不少，网上很容易搜到的，我放个链接在这里：<a href=\"https://acgrip.art/\" title=\"ACG.RIP\" target=\"_blank\">ACG.RIP</a>。当然，你自己能搜到别的发布站肯定更好，多在收藏夹里面放几个网站，到了出问题的时候还有备用站能看。可以尝试搜bt下载站，动漫下载站等常见关键词，或者搜常见字幕组的名字，这种情况下容易找到网站。</p>\n<p>在发布动漫资源的网站外，还有其他资源的网站，比如发布字幕的网站等，这些别的网站还请自行搜索，我没有用到这类网站。</p>\n<h1 id=\"下载器\">下载器<a title=\"#下载器\" href=\"#下载器\"></a></h1>\n<p>前文提过，我以Motrix和xdown为基础进行介绍。qbittorrentEE我记得是能实现下面大部分功能的，但是只支持bt下载。</p>\n<p>在安装完下载器（或者是不需要安装的解压版）之后，还请把设置全部看一遍，尽量设置好，不要嫌麻烦。我列出一些我比较关注的设置项。</p>\n<ol>\n<li>http下载设置。接管浏览器下载的文件、文件类型。我的下载器是接管浏览器下载的，Motrix使用edge浏览器的<a href=\"https://microsoftedge.microsoft.com/addons/detail/jjfgljkjddpcpfapejfkelkbjbehagbh\" title=\"Aria2 Explorer\" target=\"_blank\">Aria2 Explorer</a>扩展接管，这个扩展能够比较好地接管下载；xdown使用自带扩展接管下载，之前跟开发者邮件后得知xdown的扩展会首先尝试启动xdown，所以有时需要多点击下载几次。</li>\n<li>http下载线程。Motrix和xdown都是多线程下载器，能够有效加快下载速度（度盘除外）。</li>\n<li>bt下载设置。bt下载完成后的上传时间、分享率。上传时间和分享率直接关系到你给其他人发送多少内容。在有能力的时候还请尽量多上传一会发给别人。</li>\n<li>tracker服务器设置。Motrix和xdown都可以自动更新tracker服务器，并且自带服务器。这种情况下默认每天自动更新一次服务器，也不用自己动手。这就是我选择Motrix和xdown的较主要原因。</li>\n<li>RSS订阅源。这个功能比较老了，建议自己搜一下。它是能够读取一个xml网页里面的文章信息。我前文提到的ACG.RIP有提供RSS订阅源，但是Motrix是没有这个功能的，是xdown有这个功能。使用RSS订阅源，我关注了几个常看的字幕组，在网站上有内容更新之后，RSS订阅源网页自动更新，xdown就能获取到更新的文章内容（也就是新发布的番剧内容），可以通过这个打开浏览器页面或者直接下载bt种子。</li>\n</ol>\n<p>在设置好之后，一般就能比较好地下载内容了。前面提到过，是比较正规的bt下载器，而根据以往长期的使用体验，在下载这方面，似乎一直都是迅雷比较出色，又活得比较久，为什么大家都不推荐迅雷呢？因为迅雷的下载策略。迅雷的下载是从所有的bt下载客户端下载，但是只上传到自己的服务器和自己的客户端，那么其他需要下载的用户不使用迅雷就无法从迅雷下载内容，迅雷这番操作也被称为吸血，所以迅雷也有被称为吸血雷。但是有时一些无人做种的种子还是可以去迅雷试试运气的，说不定迅雷服务器就有资源同时未被迅雷和谐呢？</p>\n<h1 id=\"找资源\">找资源<a title=\"#找资源\" href=\"#找资源\"></a></h1>\n<p>一般可以通过b站了解下季度新番，或者看比较出名的番剧网站，又或者是想要补什么老番？</p>\n<p>但是，由于bt下载的特性，新内容比较容易有更多人下载上传，老内容就容易没有人做种从而变成死种（就是无法下载，因为没人上传）。这时候要补老番就显得比较麻烦，所以我补老番还是会更多地试试网盘。</p>\n<p>对于新番，可以看看别人的评价，再根据自己的喜好评估是否要看。</p>\n<p>对于发布站上一长串的番剧文件名，我推荐自行搜索了解，可以找到整体从前往后的各部分解释，又能找到每个位置参数的具体解释，网上还是有很多教程的。我不便展开。</p>\n<h1 id=\"结尾\">结尾<a title=\"#结尾\" href=\"#结尾\"></a></h1>\n<p>因为写的长了，花的时间长，原本要写的内容已经忘记要写到哪里了。所以在此草草结尾，如有疑问或需要补充的内容，可以通过站点内的邮件联系我。感谢阅读。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"追番体验\">追番体验<a title=\"#追番体验\" href=\"#追番体验\"></a></h1>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<p>毫无疑问，追番当然是非常重要的一件事情。</p>\n<p>在现在这个环境，要追番也不是一件容易的事情。b站追番删减版又慢半拍，a站也少见于追番过程中，网上的视频站也偶尔能淘出一些宝贝，但更多时候是xx赌场广告满天飞。</p>\n<p>这种时候，在尝试过多种追番方案之后，我选择了较为整体的追番安排——使用种子站获取汉化组的最新资源。</p>\n<p>这个选择代表着我需要了解bt下载的各种知识，同时能够找到长期稳定的发布站——或是源站，或是镜像站，又需要找到一个能够同时承担接管浏览器http下载和bt下载功能的下载器。之后就是长期跟进番剧进度，找汉化组资源。</p>\n<p>以下就列出我目前的解决方案。于2023-12-30完成。不保证没有错别字（特别是软件名字、网站名字等）。</p>\n<h1 id=\"了解知识\">了解知识<a title=\"#了解知识\" href=\"#了解知识\"></a></h1>\n<p>bt下载不同于http下载。我个人的理解：http下载通常指从服务器到客户端的下载，只要服务器不挂不墙，要下载内容还是很方便的，比如网盘、网站内下载链接等等等等。。。。bt下载是p2p下载，从一个用户到另一个用户，你下载的资源是其他下载这个资源的人发送给你的，不是直接从汉化组服务器发出来给你的。这就意味着你的下载速度完全和其他人的上传速度挂钩。一般情况下，汉化组或者发布组都会有一个服务器，里面长期挂载着自己资源的上传，这也是资源首先上传的来源。之后，在有几个人接收完资源之后，如果是正规的bt客户端，就会有一段时间的上传操作，这个时候用户的下载客户端就变成了上传客户端，给其他下载的人发送内容。长此以往，循环往复。这就是bt下载，也是为什么要在下载完成后挂一段时间上传的原因（尽管很少有上传的时候）。</p>\n<p>因为国内的网络环境，多数情况下bt下载和上传都不会显得容易。这时候就需要用到路由器的upnp功能（或者叫端口转发），这个功能我无法过多解释，建议自行bing搜索。其次，bt下载是用户之间直接连接，为了找到其他人，你需要知道其他人的ip地址才能连接到他们。直接在互联网上广播自己的ip地址显然不合适，这时候就需要有服务器来间接连接用户，这就是tracker服务器，这些服务器一般由发布站维护，记录当前上传/下载种子的人，通过查询服务器信息可以去连接其他人，尝试沟通对方是否有自己在下载的资源。连接成功，就可以开始从对方那里接收数据了。</p>\n<p>知道了基础信息，就需要有合适的工具了。bt下载工具很多，qbittorrent，qbittorrentEE，bitComit，Motrix，transmission，xdown等等，很多人有发推荐，为了减轻负担，我选择了有自动更新tracker服务器功能的软件，比如qbittorrentEE，Motrix，xdown，下文根据Motrix和xdown进行介绍。</p>\n<h1 id=\"网站\">网站<a title=\"#网站\" href=\"#网站\"></a></h1>\n<p>现存的发布站不少，网上很容易搜到的，我放个链接在这里：<a href=\"https://acgrip.art/\" title=\"ACG.RIP\" target=\"_blank\">ACG.RIP</a>。当然，你自己能搜到别的发布站肯定更好，多在收藏夹里面放几个网站，到了出问题的时候还有备用站能看。可以尝试搜bt下载站，动漫下载站等常见关键词，或者搜常见字幕组的名字，这种情况下容易找到网站。</p>\n<p>在发布动漫资源的网站外，还有其他资源的网站，比如发布字幕的网站等，这些别的网站还请自行搜索，我没有用到这类网站。</p>\n<h1 id=\"下载器\">下载器<a title=\"#下载器\" href=\"#下载器\"></a></h1>\n<p>前文提过，我以Motrix和xdown为基础进行介绍。qbittorrentEE我记得是能实现下面大部分功能的，但是只支持bt下载。</p>\n<p>在安装完下载器（或者是不需要安装的解压版）之后，还请把设置全部看一遍，尽量设置好，不要嫌麻烦。我列出一些我比较关注的设置项。</p>\n<ol>\n<li>http下载设置。接管浏览器下载的文件、文件类型。我的下载器是接管浏览器下载的，Motrix使用edge浏览器的<a href=\"https://microsoftedge.microsoft.com/addons/detail/jjfgljkjddpcpfapejfkelkbjbehagbh\" title=\"Aria2 Explorer\" target=\"_blank\">Aria2 Explorer</a>扩展接管，这个扩展能够比较好地接管下载；xdown使用自带扩展接管下载，之前跟开发者邮件后得知xdown的扩展会首先尝试启动xdown，所以有时需要多点击下载几次。</li>\n<li>http下载线程。Motrix和xdown都是多线程下载器，能够有效加快下载速度（度盘除外）。</li>\n<li>bt下载设置。bt下载完成后的上传时间、分享率。上传时间和分享率直接关系到你给其他人发送多少内容。在有能力的时候还请尽量多上传一会发给别人。</li>\n<li>tracker服务器设置。Motrix和xdown都可以自动更新tracker服务器，并且自带服务器。这种情况下默认每天自动更新一次服务器，也不用自己动手。这就是我选择Motrix和xdown的较主要原因。</li>\n<li>RSS订阅源。这个功能比较老了，建议自己搜一下。它是能够读取一个xml网页里面的文章信息。我前文提到的ACG.RIP有提供RSS订阅源，但是Motrix是没有这个功能的，是xdown有这个功能。使用RSS订阅源，我关注了几个常看的字幕组，在网站上有内容更新之后，RSS订阅源网页自动更新，xdown就能获取到更新的文章内容（也就是新发布的番剧内容），可以通过这个打开浏览器页面或者直接下载bt种子。</li>\n</ol>\n<p>在设置好之后，一般就能比较好地下载内容了。前面提到过，是比较正规的bt下载器，而根据以往长期的使用体验，在下载这方面，似乎一直都是迅雷比较出色，又活得比较久，为什么大家都不推荐迅雷呢？因为迅雷的下载策略。迅雷的下载是从所有的bt下载客户端下载，但是只上传到自己的服务器和自己的客户端，那么其他需要下载的用户不使用迅雷就无法从迅雷下载内容，迅雷这番操作也被称为吸血，所以迅雷也有被称为吸血雷。但是有时一些无人做种的种子还是可以去迅雷试试运气的，说不定迅雷服务器就有资源同时未被迅雷和谐呢？</p>\n<h1 id=\"找资源\">找资源<a title=\"#找资源\" href=\"#找资源\"></a></h1>\n<p>一般可以通过b站了解下季度新番，或者看比较出名的番剧网站，又或者是想要补什么老番？</p>\n<p>但是，由于bt下载的特性，新内容比较容易有更多人下载上传，老内容就容易没有人做种从而变成死种（就是无法下载，因为没人上传）。这时候要补老番就显得比较麻烦，所以我补老番还是会更多地试试网盘。</p>\n<p>对于新番，可以看看别人的评价，再根据自己的喜好评估是否要看。</p>\n<p>对于发布站上一长串的番剧文件名，我推荐自行搜索了解，可以找到整体从前往后的各部分解释，又能找到每个位置参数的具体解释，网上还是有很多教程的。我不便展开。</p>\n<h1 id=\"结尾\">结尾<a title=\"#结尾\" href=\"#结尾\"></a></h1>\n<p>因为写的长了，花的时间长，原本要写的内容已经忘记要写到哪里了。所以在此草草结尾，如有疑问或需要补充的内容，可以通过站点内的邮件联系我。感谢阅读。</p>\n","date_formatted":{"ll":"2023年12月29日","L":"2023/12/29","MM-DD":"12-29"},"plink":"http://lingfengyu-dreaming.github.io/post/chase-experience-2udw5r/","type":"post","reading_time":"2096 字约 14 分钟"},{"title":"库管理","date":"2023-08-22T12:50:55.000Z","updated":"2023-12-09T03:59:20.000Z","comments":0,"toc":[{"id":"库管理","title":"库管理","index":"1"},{"id":"安装","title":"安装","index":"2"},{"id":"管理","title":"管理","index":"3"},{"id":"更新","title":"更新","index":"4"},{"id":"卸载","title":"卸载","index":"5"},{"id":"导出已安装的软件包","title":"导出已安装的软件包","index":"6"}],"_content":"\n\n\n# 库管理\n\n# 安装\n\n安装时使用 `pip` ​命令完成。\n\n​`pip install`​+ 库名即可安装对应的库。相应的依赖库会自动下载安装。\n\n添加参数 `-i` ​或 `--index-url` ​即可临时指定下载源，可以指定国内镜像源下载，比官网源快多了。也可以设置 `config` ​文件来永久设置下载源。\n\n添加参数 `-U` ​或 `--upgrade` ​即可更新对应的库。\n\n添加参数 `--src` ​即可指定安装的目录。\n\n添加参数 `-r` ​即可从给定的 `requirements.txt` ​中获取需要安装的库并批量安装。\n\n添加参数 `-V` ​或 `--version` ​即可指定安装的版本。\n\n# 管理\n\n使用 `pip list`​​ 即可查看当前安装的所有库。显示效果为平铺，显示当前版本号。  \n​![image](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/share/img/image-20230822210807-219e2zz.png \"pip\")​\n\n在安装了 `pipdeptree`​​​ 库后可以通过命令 `pipdeptree`​​​ 查看当前安装的库的依赖关系。显示效果为分层嵌套，显示当前版本号。  \n​![image](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/share/img/image-20230822210901-vh7ipbs.png \"pipdeptree\")​\n\n# 更新\n\n检查更新可以使用pip中的`pip list -o`​命令。\n\n更新可以使用 pip 中的`pip install -U`​命令。\n\n在安装了`pip-review`​库之后可以使用`pip-review`​命令更新。\n\n参数`-i`​为询问是否安装。\n\n参数`-C`​为在一个库安装失败后继续安装。\n\n参数`--freeze-outdated-packages`​为将需要更新的库导出为`requirements.txt`​存档。\n\n# 卸载\n\n卸载使用pip自带的指令`pip remove`​即可卸载，但是只会卸载指定的库，不会卸载依赖项。\n\n安装了`python3-pip-autoremove`​库之后可以使用指令`pip3-autoremove`​后加库名卸载库。这个方法可以一并卸载掉不使用的依赖库。\n\n使用`pip3-autoremove`​库也可以。\n\n参数`-l`​可以列出当前不使用的库并选择卸载。\n\n# 导出已安装的软件包\n\npip提供了导出已安装包的方法，使用`pip freeze > requirements.txt`​即可导出为文本文件。\n\n> <span style=\"font-weight: bold;\" data-type=\"strong\">特别注意：</span> 更新python版本需要<span style=\"font-weight: bold;\" data-type=\"strong\">首先备份</span>pip安装的软件包，在更新后的python<span style=\"font-weight: bold;\" data-type=\"strong\">再次安装！！！</span>\n","source":"_posts/library-management-bm5iw.md","raw":"---\ntitle: 库管理\ndate: '2023-08-22 20:50:55'\nupdated: '2023-12-09 11:59:20'\npermalink: /post/library-management-bm5iw.html\ncomments: true\ntoc: true\n---\n\n\n\n# 库管理\n\n# 安装\n\n安装时使用 `pip` ​命令完成。\n\n​`pip install`​+ 库名即可安装对应的库。相应的依赖库会自动下载安装。\n\n添加参数 `-i` ​或 `--index-url` ​即可临时指定下载源，可以指定国内镜像源下载，比官网源快多了。也可以设置 `config` ​文件来永久设置下载源。\n\n添加参数 `-U` ​或 `--upgrade` ​即可更新对应的库。\n\n添加参数 `--src` ​即可指定安装的目录。\n\n添加参数 `-r` ​即可从给定的 `requirements.txt` ​中获取需要安装的库并批量安装。\n\n添加参数 `-V` ​或 `--version` ​即可指定安装的版本。\n\n# 管理\n\n使用 `pip list`​​ 即可查看当前安装的所有库。显示效果为平铺，显示当前版本号。  \n​![image](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/share/img/image-20230822210807-219e2zz.png \"pip\")​\n\n在安装了 `pipdeptree`​​​ 库后可以通过命令 `pipdeptree`​​​ 查看当前安装的库的依赖关系。显示效果为分层嵌套，显示当前版本号。  \n​![image](https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/share/img/image-20230822210901-vh7ipbs.png \"pipdeptree\")​\n\n# 更新\n\n检查更新可以使用pip中的`pip list -o`​命令。\n\n更新可以使用 pip 中的`pip install -U`​命令。\n\n在安装了`pip-review`​库之后可以使用`pip-review`​命令更新。\n\n参数`-i`​为询问是否安装。\n\n参数`-C`​为在一个库安装失败后继续安装。\n\n参数`--freeze-outdated-packages`​为将需要更新的库导出为`requirements.txt`​存档。\n\n# 卸载\n\n卸载使用pip自带的指令`pip remove`​即可卸载，但是只会卸载指定的库，不会卸载依赖项。\n\n安装了`python3-pip-autoremove`​库之后可以使用指令`pip3-autoremove`​后加库名卸载库。这个方法可以一并卸载掉不使用的依赖库。\n\n使用`pip3-autoremove`​库也可以。\n\n参数`-l`​可以列出当前不使用的库并选择卸载。\n\n# 导出已安装的软件包\n\npip提供了导出已安装包的方法，使用`pip freeze > requirements.txt`​即可导出为文本文件。\n\n> <span style=\"font-weight: bold;\" data-type=\"strong\">特别注意：</span> 更新python版本需要<span style=\"font-weight: bold;\" data-type=\"strong\">首先备份</span>pip安装的软件包，在更新后的python<span style=\"font-weight: bold;\" data-type=\"strong\">再次安装！！！</span>\n","slug":"library-management-bm5iw","published":1,"__permalink":"/post/library-management-bm5iw.html","layout":"post","photos":[],"link":"post/library-management-bm5iw","_id":"clqqv4ob70004vsmedbrd8b74","content":"<h1 id=\"库管理\">库管理<a title=\"#库管理\" href=\"#库管理\"></a></h1>\n<h1 id=\"安装\">安装<a title=\"#安装\" href=\"#安装\"></a></h1>\n<p>安装时使用 <code>pip</code> ​命令完成。</p>\n<p>​<code>pip install</code>​+ 库名即可安装对应的库。相应的依赖库会自动下载安装。</p>\n<p>添加参数 <code>-i</code> ​或 <code>--index-url</code> ​即可临时指定下载源，可以指定国内镜像源下载，比官网源快多了。也可以设置 <code>config</code> ​文件来永久设置下载源。</p>\n<p>添加参数 <code>-U</code> ​或 <code>--upgrade</code> ​即可更新对应的库。</p>\n<p>添加参数 <code>--src</code> ​即可指定安装的目录。</p>\n<p>添加参数 <code>-r</code> ​即可从给定的 <code>requirements.txt</code> ​中获取需要安装的库并批量安装。</p>\n<p>添加参数 <code>-V</code> ​或 <code>--version</code> ​即可指定安装的版本。</p>\n<h1 id=\"管理\">管理<a title=\"#管理\" href=\"#管理\"></a></h1>\n<p>使用 <code>pip list</code>​​ 即可查看当前安装的所有库。显示效果为平铺，显示当前版本号。<br>\n​<img src=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/share/img/image-20230822210807-219e2zz.png\" alt=\"image\" title=\"pip\" loading=\"lazy\">​</p>\n<p>在安装了 <code>pipdeptree</code>​​​ 库后可以通过命令 <code>pipdeptree</code>​​​ 查看当前安装的库的依赖关系。显示效果为分层嵌套，显示当前版本号。<br>\n​<img src=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/share/img/image-20230822210901-vh7ipbs.png\" alt=\"image\" title=\"pipdeptree\" loading=\"lazy\">​</p>\n<h1 id=\"更新\">更新<a title=\"#更新\" href=\"#更新\"></a></h1>\n<p>检查更新可以使用pip中的<code>pip list -o</code>​命令。</p>\n<p>更新可以使用 pip 中的<code>pip install -U</code>​命令。</p>\n<p>在安装了<code>pip-review</code>​库之后可以使用<code>pip-review</code>​命令更新。</p>\n<p>参数<code>-i</code>​为询问是否安装。</p>\n<p>参数<code>-C</code>​为在一个库安装失败后继续安装。</p>\n<p>参数<code>--freeze-outdated-packages</code>​为将需要更新的库导出为<code>requirements.txt</code>​存档。</p>\n<h1 id=\"卸载\">卸载<a title=\"#卸载\" href=\"#卸载\"></a></h1>\n<p>卸载使用pip自带的指令<code>pip remove</code>​即可卸载，但是只会卸载指定的库，不会卸载依赖项。</p>\n<p>安装了<code>python3-pip-autoremove</code>​库之后可以使用指令<code>pip3-autoremove</code>​后加库名卸载库。这个方法可以一并卸载掉不使用的依赖库。</p>\n<p>使用<code>pip3-autoremove</code>​库也可以。</p>\n<p>参数<code>-l</code>​可以列出当前不使用的库并选择卸载。</p>\n<h1 id=\"导出已安装的软件包\">导出已安装的软件包<a title=\"#导出已安装的软件包\" href=\"#导出已安装的软件包\"></a></h1>\n<p>pip提供了导出已安装包的方法，使用<code>pip freeze &gt; requirements.txt</code>​即可导出为文本文件。</p>\n<blockquote>\n<p><span style=\"font-weight: bold;\" data-type=\"strong\">特别注意：</span> 更新python版本需要<span style=\"font-weight: bold;\" data-type=\"strong\">首先备份</span>pip安装的软件包，在更新后的python<span style=\"font-weight: bold;\" data-type=\"strong\">再次安装！！！</span></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"库管理\">库管理<a title=\"#库管理\" href=\"#库管理\"></a></h1>\n<h1 id=\"安装\">安装<a title=\"#安装\" href=\"#安装\"></a></h1>\n<p>安装时使用 <code>pip</code> ​命令完成。</p>\n<p>​<code>pip install</code>​+ 库名即可安装对应的库。相应的依赖库会自动下载安装。</p>\n<p>添加参数 <code>-i</code> ​或 <code>--index-url</code> ​即可临时指定下载源，可以指定国内镜像源下载，比官网源快多了。也可以设置 <code>config</code> ​文件来永久设置下载源。</p>\n<p>添加参数 <code>-U</code> ​或 <code>--upgrade</code> ​即可更新对应的库。</p>\n<p>添加参数 <code>--src</code> ​即可指定安装的目录。</p>\n<p>添加参数 <code>-r</code> ​即可从给定的 <code>requirements.txt</code> ​中获取需要安装的库并批量安装。</p>\n<p>添加参数 <code>-V</code> ​或 <code>--version</code> ​即可指定安装的版本。</p>\n<h1 id=\"管理\">管理<a title=\"#管理\" href=\"#管理\"></a></h1>\n<p>使用 <code>pip list</code>​​ 即可查看当前安装的所有库。显示效果为平铺，显示当前版本号。<br>\n​<img src=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/share/img/image-20230822210807-219e2zz.png\" alt=\"image\" title=\"pip\" loading=\"lazy\">​</p>\n<p>在安装了 <code>pipdeptree</code>​​​ 库后可以通过命令 <code>pipdeptree</code>​​​ 查看当前安装的库的依赖关系。显示效果为分层嵌套，显示当前版本号。<br>\n​<img src=\"https://outio-1320253797.cos.ap-guangzhou.myqcloud.com/share/img/image-20230822210901-vh7ipbs.png\" alt=\"image\" title=\"pipdeptree\" loading=\"lazy\">​</p>\n<h1 id=\"更新\">更新<a title=\"#更新\" href=\"#更新\"></a></h1>\n<p>检查更新可以使用pip中的<code>pip list -o</code>​命令。</p>\n<p>更新可以使用 pip 中的<code>pip install -U</code>​命令。</p>\n<p>在安装了<code>pip-review</code>​库之后可以使用<code>pip-review</code>​命令更新。</p>\n<p>参数<code>-i</code>​为询问是否安装。</p>\n<p>参数<code>-C</code>​为在一个库安装失败后继续安装。</p>\n<p>参数<code>--freeze-outdated-packages</code>​为将需要更新的库导出为<code>requirements.txt</code>​存档。</p>\n<h1 id=\"卸载\">卸载<a title=\"#卸载\" href=\"#卸载\"></a></h1>\n<p>卸载使用pip自带的指令<code>pip remove</code>​即可卸载，但是只会卸载指定的库，不会卸载依赖项。</p>\n<p>安装了<code>python3-pip-autoremove</code>​库之后可以使用指令<code>pip3-autoremove</code>​后加库名卸载库。这个方法可以一并卸载掉不使用的依赖库。</p>\n<p>使用<code>pip3-autoremove</code>​库也可以。</p>\n<p>参数<code>-l</code>​可以列出当前不使用的库并选择卸载。</p>\n<h1 id=\"导出已安装的软件包\">导出已安装的软件包<a title=\"#导出已安装的软件包\" href=\"#导出已安装的软件包\"></a></h1>\n<p>pip提供了导出已安装包的方法，使用<code>pip freeze &gt; requirements.txt</code>​即可导出为文本文件。</p>\n<blockquote>\n<p><span style=\"font-weight: bold;\" data-type=\"strong\">特别注意：</span> 更新python版本需要<span style=\"font-weight: bold;\" data-type=\"strong\">首先备份</span>pip安装的软件包，在更新后的python<span style=\"font-weight: bold;\" data-type=\"strong\">再次安装！！！</span></p>\n</blockquote>\n","date_formatted":{"ll":"2023年8月22日","L":"2023/08/22","MM-DD":"08-22"},"plink":"http://lingfengyu-dreaming.github.io/post/library-management-bm5iw/","type":"post","reading_time":"539 字约 4 分钟"},{"title":"git操作","date":"2023-10-25T10:39:54.000Z","updated":"2023-11-07T14:04:43.000Z","comments":0,"toc":[{"id":"git操作","title":"git操作","index":"1"},{"id":"删除文件","title":"删除文件","index":"2"},{"id":"从所有历史记录中删除文件","title":"从所有历史记录中删除文件","index":"3"},{"id":"变基","title":"变基","index":"4"},{"id":"合并","title":"合并","index":"5"},{"id":"拣选","title":"拣选","index":"6"},{"id":"标签","title":"标签","index":"7"},{"id":"rerere","title":"Rerere","index":"8"},{"id":"设置别名","title":"设置别名","index":"9"},{"id":"获取远端提交情况","title":"获取远端提交情况","index":"10"},{"id":"临时禁用-ssl","title":"临时禁用 SSL","index":"11"},{"id":"切换远程-url","title":"切换远程 URL","index":"12"}],"_content":"\n\n\n# git操作\n\n# 删除文件\n\n```bash\n# 删除文件\ngit rm files_name\n# 删除文件夹\ngit rm -r dirs_name\n# 仅从索引中删除文件(本地不删除)\ngit rm --cached files_name\n# 仅从索引中删除文件夹(本地不删除)\ngit rm --cached -r dirs_name\n```\n\n# 从所有历史记录中删除文件\n\n```bash\n# 从历史记录中删除文件并不删除本地文件\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch files_name' --prune-empty --tag-name-filter cat -- --all\n# 从历史记录中删除文件夹并不删除本地文件\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch -r dirs_name' --prune-empty --tagname-filter cat -- --all\n```\n\n# 变基\n\n```bash\ngit rebase\n```\n\n# 合并\n\n```bash\n# 将分支branch_name合并入当前分支\ngit merge branch_name\n# 退出合并\ngit merge --abort\n# 合并时完全忽略空格\ngit merge -Xignore-all-space\n# 合并时将一个或多个空格视为等价的\ngit merge -Xignore-space-change\n```\n\n# 拣选\n\n```bash\ngit cherry-pick sha-1\n```\n\n拉取 sha-1 提交到当前分支，并且提供一个新的 sha-1 给这次提交\n\n# 标签\n\n```bash\n# 显示所有标签\ngit tag\n# 显示匹配的标签\ngit tag -l \"1.*\"\n# 添加附注标签\ngit tag -a tag_name -m \"tag_message\"\n# 显示附注标签\ngit tag show tag_name\n# 添加轻量标签(不需要任何选项)\ngit tag tag_name\n# 为历史提交sha-1添加标签\ngit tag -a tag_name sha-1\n# 将标签推送到远程origin\ngit push origin --tags\n# 删除标签tag_name\ngit tag -d tag_name\n# 在远程origin删除标签tag_name\ngit push origin :refs/tags/tag_name\ngit push --delete tag_name\n```\n\n# Rerere\n\nRerere 允许 git 记住解决冲突的方法，并在下一次出现同样情况时自动解决\n\n但是不能乱改，git 会记住你每一次修改的变更\n\n```bash\ngit config --global rerere.enable true\n```\n\n# 设置别名\n\n```bash\n# 为checkout设置co别名\ngit config --global alias.co checkout\n```\n\n# 获取远端提交情况\n\n```bash\n# 一般情况下适用\ngit fetch\n# 需要刷新远程配置时\n# 远程已有新提交\ngit fetch -f/--force\n# 远程没有新提交\ngit fetch --refetch\n```\n\n# 临时禁用 SSL\n\n适用于 watt toolkit 的 hosts 代理模式，出现 SSL 报错情况\n\n```bash\n# 通过添加env对本条命令禁用SSL校验\nenv GIT_SSL_NO_VERIFY=true git push origin\nenv GIT_SSL_NO_VERIFY=true git pull\nenv GIT_SSL_NO_VERIFY=true git fetch\n```\n\n# 切换远程 URL\n\n使用 HTTPS 总是会遇到一些奇奇怪怪的问题，这时可以将远程 URL 更改成 SSH 连接来避免这些奇奇怪怪的问题\n\n```bash\n# 在git bash里面的命令长这样\ngit remote set-url <name> <new-url>\n# 写上参数之后要长这样\ngit remote set-url origin git@github.com:user_name/repo.git\ngit remote set-url origin git@gitee.com:user_name/repo.git\n```\n","source":"_posts/git-operation-z1k24je.md","raw":"---\ntitle: git操作\ndate: '2023-10-25 18:39:54'\nupdated: '2023-11-07 22:04:43'\npermalink: /post/git-operation-z1k24je.html\ncomments: true\ntoc: true\n---\n\n\n\n# git操作\n\n# 删除文件\n\n```bash\n# 删除文件\ngit rm files_name\n# 删除文件夹\ngit rm -r dirs_name\n# 仅从索引中删除文件(本地不删除)\ngit rm --cached files_name\n# 仅从索引中删除文件夹(本地不删除)\ngit rm --cached -r dirs_name\n```\n\n# 从所有历史记录中删除文件\n\n```bash\n# 从历史记录中删除文件并不删除本地文件\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch files_name' --prune-empty --tag-name-filter cat -- --all\n# 从历史记录中删除文件夹并不删除本地文件\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch -r dirs_name' --prune-empty --tagname-filter cat -- --all\n```\n\n# 变基\n\n```bash\ngit rebase\n```\n\n# 合并\n\n```bash\n# 将分支branch_name合并入当前分支\ngit merge branch_name\n# 退出合并\ngit merge --abort\n# 合并时完全忽略空格\ngit merge -Xignore-all-space\n# 合并时将一个或多个空格视为等价的\ngit merge -Xignore-space-change\n```\n\n# 拣选\n\n```bash\ngit cherry-pick sha-1\n```\n\n拉取 sha-1 提交到当前分支，并且提供一个新的 sha-1 给这次提交\n\n# 标签\n\n```bash\n# 显示所有标签\ngit tag\n# 显示匹配的标签\ngit tag -l \"1.*\"\n# 添加附注标签\ngit tag -a tag_name -m \"tag_message\"\n# 显示附注标签\ngit tag show tag_name\n# 添加轻量标签(不需要任何选项)\ngit tag tag_name\n# 为历史提交sha-1添加标签\ngit tag -a tag_name sha-1\n# 将标签推送到远程origin\ngit push origin --tags\n# 删除标签tag_name\ngit tag -d tag_name\n# 在远程origin删除标签tag_name\ngit push origin :refs/tags/tag_name\ngit push --delete tag_name\n```\n\n# Rerere\n\nRerere 允许 git 记住解决冲突的方法，并在下一次出现同样情况时自动解决\n\n但是不能乱改，git 会记住你每一次修改的变更\n\n```bash\ngit config --global rerere.enable true\n```\n\n# 设置别名\n\n```bash\n# 为checkout设置co别名\ngit config --global alias.co checkout\n```\n\n# 获取远端提交情况\n\n```bash\n# 一般情况下适用\ngit fetch\n# 需要刷新远程配置时\n# 远程已有新提交\ngit fetch -f/--force\n# 远程没有新提交\ngit fetch --refetch\n```\n\n# 临时禁用 SSL\n\n适用于 watt toolkit 的 hosts 代理模式，出现 SSL 报错情况\n\n```bash\n# 通过添加env对本条命令禁用SSL校验\nenv GIT_SSL_NO_VERIFY=true git push origin\nenv GIT_SSL_NO_VERIFY=true git pull\nenv GIT_SSL_NO_VERIFY=true git fetch\n```\n\n# 切换远程 URL\n\n使用 HTTPS 总是会遇到一些奇奇怪怪的问题，这时可以将远程 URL 更改成 SSH 连接来避免这些奇奇怪怪的问题\n\n```bash\n# 在git bash里面的命令长这样\ngit remote set-url <name> <new-url>\n# 写上参数之后要长这样\ngit remote set-url origin git@github.com:user_name/repo.git\ngit remote set-url origin git@gitee.com:user_name/repo.git\n```\n","slug":"git-operation-z1k24je","published":1,"__permalink":"/post/git-operation-z1k24je.html","layout":"post","photos":[],"link":"post/git-operation-z1k24je","_id":"clqqv4ob70005vsme73yh92dr","content":"<h1 id=\"git操作\">git操作<a title=\"#git操作\" href=\"#git操作\"></a></h1>\n<h1 id=\"删除文件\">删除文件<a title=\"#删除文件\" href=\"#删除文件\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除文件</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> files_name</span><br><span class=\"line\"><span class=\"comment\"># 删除文件夹</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> -r dirs_name</span><br><span class=\"line\"><span class=\"comment\"># 仅从索引中删除文件(本地不删除)</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> --cached files_name</span><br><span class=\"line\"><span class=\"comment\"># 仅从索引中删除文件夹(本地不删除)</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> --cached -r dirs_name</span><br></pre></td></tr></table></figure>\n<h1 id=\"从所有历史记录中删除文件\">从所有历史记录中删除文件<a title=\"#从所有历史记录中删除文件\" href=\"#从所有历史记录中删除文件\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从历史记录中删除文件并不删除本地文件</span></span><br><span class=\"line\">git filter-branch --force --index-filter <span class=\"string\">&#x27;git rm --cached --ignore-unmatch files_name&#x27;</span> --prune-empty --tag-name-filter <span class=\"built_in\">cat</span> -- --all</span><br><span class=\"line\"><span class=\"comment\"># 从历史记录中删除文件夹并不删除本地文件</span></span><br><span class=\"line\">git filter-branch --force --index-filter <span class=\"string\">&#x27;git rm --cached --ignore-unmatch -r dirs_name&#x27;</span> --prune-empty --tagname-filter <span class=\"built_in\">cat</span> -- --all</span><br></pre></td></tr></table></figure>\n<h1 id=\"变基\">变基<a title=\"#变基\" href=\"#变基\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase</span><br></pre></td></tr></table></figure>\n<h1 id=\"合并\">合并<a title=\"#合并\" href=\"#合并\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将分支branch_name合并入当前分支</span></span><br><span class=\"line\">git merge branch_name</span><br><span class=\"line\"><span class=\"comment\"># 退出合并</span></span><br><span class=\"line\">git merge --abort</span><br><span class=\"line\"><span class=\"comment\"># 合并时完全忽略空格</span></span><br><span class=\"line\">git merge -Xignore-all-space</span><br><span class=\"line\"><span class=\"comment\"># 合并时将一个或多个空格视为等价的</span></span><br><span class=\"line\">git merge -Xignore-space-change</span><br></pre></td></tr></table></figure>\n<h1 id=\"拣选\">拣选<a title=\"#拣选\" href=\"#拣选\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick sha-1</span><br></pre></td></tr></table></figure>\n<p>拉取 sha-1 提交到当前分支，并且提供一个新的 sha-1 给这次提交</p>\n<h1 id=\"标签\">标签<a title=\"#标签\" href=\"#标签\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示所有标签</span></span><br><span class=\"line\">git tag</span><br><span class=\"line\"><span class=\"comment\"># 显示匹配的标签</span></span><br><span class=\"line\">git tag -l <span class=\"string\">&quot;1.*&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 添加附注标签</span></span><br><span class=\"line\">git tag -a tag_name -m <span class=\"string\">&quot;tag_message&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 显示附注标签</span></span><br><span class=\"line\">git tag show tag_name</span><br><span class=\"line\"><span class=\"comment\"># 添加轻量标签(不需要任何选项)</span></span><br><span class=\"line\">git tag tag_name</span><br><span class=\"line\"><span class=\"comment\"># 为历史提交sha-1添加标签</span></span><br><span class=\"line\">git tag -a tag_name sha-1</span><br><span class=\"line\"><span class=\"comment\"># 将标签推送到远程origin</span></span><br><span class=\"line\">git push origin --tags</span><br><span class=\"line\"><span class=\"comment\"># 删除标签tag_name</span></span><br><span class=\"line\">git tag -d tag_name</span><br><span class=\"line\"><span class=\"comment\"># 在远程origin删除标签tag_name</span></span><br><span class=\"line\">git push origin :refs/tags/tag_name</span><br><span class=\"line\">git push --delete tag_name</span><br></pre></td></tr></table></figure>\n<h1 id=\"rerere\">Rerere<a title=\"#rerere\" href=\"#rerere\"></a></h1>\n<p>Rerere 允许 git 记住解决冲突的方法，并在下一次出现同样情况时自动解决</p>\n<p>但是不能乱改，git 会记住你每一次修改的变更</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global rerere.enable <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"设置别名\">设置别名<a title=\"#设置别名\" href=\"#设置别名\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 为checkout设置co别名</span></span><br><span class=\"line\">git config --global alias.co checkout</span><br></pre></td></tr></table></figure>\n<h1 id=\"获取远端提交情况\">获取远端提交情况<a title=\"#获取远端提交情况\" href=\"#获取远端提交情况\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一般情况下适用</span></span><br><span class=\"line\">git fetch</span><br><span class=\"line\"><span class=\"comment\"># 需要刷新远程配置时</span></span><br><span class=\"line\"><span class=\"comment\"># 远程已有新提交</span></span><br><span class=\"line\">git fetch -f/--force</span><br><span class=\"line\"><span class=\"comment\"># 远程没有新提交</span></span><br><span class=\"line\">git fetch --refetch</span><br></pre></td></tr></table></figure>\n<h1 id=\"临时禁用-ssl\">临时禁用 SSL<a title=\"#临时禁用-ssl\" href=\"#临时禁用-ssl\"></a></h1>\n<p>适用于 watt toolkit 的 hosts 代理模式，出现 SSL 报错情况</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过添加env对本条命令禁用SSL校验</span></span><br><span class=\"line\"><span class=\"built_in\">env</span> GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span> git push origin</span><br><span class=\"line\"><span class=\"built_in\">env</span> GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span> git pull</span><br><span class=\"line\"><span class=\"built_in\">env</span> GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span> git fetch</span><br></pre></td></tr></table></figure>\n<h1 id=\"切换远程-url\">切换远程 URL<a title=\"#切换远程-url\" href=\"#切换远程-url\"></a></h1>\n<p>使用 HTTPS 总是会遇到一些奇奇怪怪的问题，这时可以将远程 URL 更改成 SSH 连接来避免这些奇奇怪怪的问题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在git bash里面的命令长这样</span></span><br><span class=\"line\">git remote set-url &lt;name&gt; &lt;new-url&gt;</span><br><span class=\"line\"><span class=\"comment\"># 写上参数之后要长这样</span></span><br><span class=\"line\">git remote set-url origin git@github.com:user_name/repo.git</span><br><span class=\"line\">git remote set-url origin git@gitee.com:user_name/repo.git</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"git操作\">git操作<a title=\"#git操作\" href=\"#git操作\"></a></h1>\n<h1 id=\"删除文件\">删除文件<a title=\"#删除文件\" href=\"#删除文件\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除文件</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> files_name</span><br><span class=\"line\"><span class=\"comment\"># 删除文件夹</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> -r dirs_name</span><br><span class=\"line\"><span class=\"comment\"># 仅从索引中删除文件(本地不删除)</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> --cached files_name</span><br><span class=\"line\"><span class=\"comment\"># 仅从索引中删除文件夹(本地不删除)</span></span><br><span class=\"line\">git <span class=\"built_in\">rm</span> --cached -r dirs_name</span><br></pre></td></tr></table></figure>\n<h1 id=\"从所有历史记录中删除文件\">从所有历史记录中删除文件<a title=\"#从所有历史记录中删除文件\" href=\"#从所有历史记录中删除文件\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从历史记录中删除文件并不删除本地文件</span></span><br><span class=\"line\">git filter-branch --force --index-filter <span class=\"string\">&#x27;git rm --cached --ignore-unmatch files_name&#x27;</span> --prune-empty --tag-name-filter <span class=\"built_in\">cat</span> -- --all</span><br><span class=\"line\"><span class=\"comment\"># 从历史记录中删除文件夹并不删除本地文件</span></span><br><span class=\"line\">git filter-branch --force --index-filter <span class=\"string\">&#x27;git rm --cached --ignore-unmatch -r dirs_name&#x27;</span> --prune-empty --tagname-filter <span class=\"built_in\">cat</span> -- --all</span><br></pre></td></tr></table></figure>\n<h1 id=\"变基\">变基<a title=\"#变基\" href=\"#变基\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase</span><br></pre></td></tr></table></figure>\n<h1 id=\"合并\">合并<a title=\"#合并\" href=\"#合并\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将分支branch_name合并入当前分支</span></span><br><span class=\"line\">git merge branch_name</span><br><span class=\"line\"><span class=\"comment\"># 退出合并</span></span><br><span class=\"line\">git merge --abort</span><br><span class=\"line\"><span class=\"comment\"># 合并时完全忽略空格</span></span><br><span class=\"line\">git merge -Xignore-all-space</span><br><span class=\"line\"><span class=\"comment\"># 合并时将一个或多个空格视为等价的</span></span><br><span class=\"line\">git merge -Xignore-space-change</span><br></pre></td></tr></table></figure>\n<h1 id=\"拣选\">拣选<a title=\"#拣选\" href=\"#拣选\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick sha-1</span><br></pre></td></tr></table></figure>\n<p>拉取 sha-1 提交到当前分支，并且提供一个新的 sha-1 给这次提交</p>\n<h1 id=\"标签\">标签<a title=\"#标签\" href=\"#标签\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示所有标签</span></span><br><span class=\"line\">git tag</span><br><span class=\"line\"><span class=\"comment\"># 显示匹配的标签</span></span><br><span class=\"line\">git tag -l <span class=\"string\">&quot;1.*&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 添加附注标签</span></span><br><span class=\"line\">git tag -a tag_name -m <span class=\"string\">&quot;tag_message&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 显示附注标签</span></span><br><span class=\"line\">git tag show tag_name</span><br><span class=\"line\"><span class=\"comment\"># 添加轻量标签(不需要任何选项)</span></span><br><span class=\"line\">git tag tag_name</span><br><span class=\"line\"><span class=\"comment\"># 为历史提交sha-1添加标签</span></span><br><span class=\"line\">git tag -a tag_name sha-1</span><br><span class=\"line\"><span class=\"comment\"># 将标签推送到远程origin</span></span><br><span class=\"line\">git push origin --tags</span><br><span class=\"line\"><span class=\"comment\"># 删除标签tag_name</span></span><br><span class=\"line\">git tag -d tag_name</span><br><span class=\"line\"><span class=\"comment\"># 在远程origin删除标签tag_name</span></span><br><span class=\"line\">git push origin :refs/tags/tag_name</span><br><span class=\"line\">git push --delete tag_name</span><br></pre></td></tr></table></figure>\n<h1 id=\"rerere\">Rerere<a title=\"#rerere\" href=\"#rerere\"></a></h1>\n<p>Rerere 允许 git 记住解决冲突的方法，并在下一次出现同样情况时自动解决</p>\n<p>但是不能乱改，git 会记住你每一次修改的变更</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global rerere.enable <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"设置别名\">设置别名<a title=\"#设置别名\" href=\"#设置别名\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 为checkout设置co别名</span></span><br><span class=\"line\">git config --global alias.co checkout</span><br></pre></td></tr></table></figure>\n<h1 id=\"获取远端提交情况\">获取远端提交情况<a title=\"#获取远端提交情况\" href=\"#获取远端提交情况\"></a></h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一般情况下适用</span></span><br><span class=\"line\">git fetch</span><br><span class=\"line\"><span class=\"comment\"># 需要刷新远程配置时</span></span><br><span class=\"line\"><span class=\"comment\"># 远程已有新提交</span></span><br><span class=\"line\">git fetch -f/--force</span><br><span class=\"line\"><span class=\"comment\"># 远程没有新提交</span></span><br><span class=\"line\">git fetch --refetch</span><br></pre></td></tr></table></figure>\n<h1 id=\"临时禁用-ssl\">临时禁用 SSL<a title=\"#临时禁用-ssl\" href=\"#临时禁用-ssl\"></a></h1>\n<p>适用于 watt toolkit 的 hosts 代理模式，出现 SSL 报错情况</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过添加env对本条命令禁用SSL校验</span></span><br><span class=\"line\"><span class=\"built_in\">env</span> GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span> git push origin</span><br><span class=\"line\"><span class=\"built_in\">env</span> GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span> git pull</span><br><span class=\"line\"><span class=\"built_in\">env</span> GIT_SSL_NO_VERIFY=<span class=\"literal\">true</span> git fetch</span><br></pre></td></tr></table></figure>\n<h1 id=\"切换远程-url\">切换远程 URL<a title=\"#切换远程-url\" href=\"#切换远程-url\"></a></h1>\n<p>使用 HTTPS 总是会遇到一些奇奇怪怪的问题，这时可以将远程 URL 更改成 SSH 连接来避免这些奇奇怪怪的问题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在git bash里面的命令长这样</span></span><br><span class=\"line\">git remote set-url &lt;name&gt; &lt;new-url&gt;</span><br><span class=\"line\"><span class=\"comment\"># 写上参数之后要长这样</span></span><br><span class=\"line\">git remote set-url origin git@github.com:user_name/repo.git</span><br><span class=\"line\">git remote set-url origin git@gitee.com:user_name/repo.git</span><br></pre></td></tr></table></figure>\n","date_formatted":{"ll":"2023年10月25日","L":"2023/10/25","MM-DD":"10-25"},"plink":"http://lingfengyu-dreaming.github.io/post/git-operation-z1k24je/","type":"post","reading_time":"691 字约 5 分钟"},{"title":"new.md","date":"2023-08-28T04:19:07.000Z","_content":"\nbrand new markdown","source":"_posts/new-md.md","raw":"---\ntitle: new.md\ndate: 2023-08-28 12:19:07\ntags:\n---\n\nbrand new markdown","slug":"new-md","published":1,"updated":"2023-11-07T13:56:37.236Z","comments":0,"layout":"post","photos":[],"link":"2023/08/28/new-md","_id":"clqqv4ob80006vsme3ou45u95","content":"<p>brand new markdown</p>\n","site":{"data":{}},"excerpt":"","more":"<p>brand new markdown</p>\n","date_formatted":{"ll":"2023年8月28日","L":"2023/08/28","MM-DD":"08-28"},"plink":"http://lingfengyu-dreaming.github.io/2023/08/28/new-md/","type":"post","reading_time":"3 字约 1 分钟"},{"title":"正则表达式","date":"2023-09-19T06:49:35.000Z","updated":"2023-11-04T16:56:07.000Z","comments":0,"toc":[{"id":"正则表达式","title":"正则表达式","index":"1"},{"id":"普通字符","title":"普通字符","index":"2"},{"id":"非打印字符","title":"非打印字符","index":"3"},{"id":"特殊字符","title":"特殊字符","index":"4"},{"id":"限定符","title":"限定符","index":"5"},{"id":"定义符","title":"定义符","index":"6"},{"id":"组合式","title":"组合式","index":"7"}],"_content":"\n\n\n# 正则表达式\n\n# 普通字符\n\n​`[ABC]`​匹配`[...]`​中的所有字符，在单词中找到`A,B,C`​并匹配\n\n​`[^ABC]`​匹配除了`ABC`​之外的所有字符\n\n​`[A-Z]`​匹配一个区间，从`A`​到`Z`​中的所有字母，使用`[a-z]`​匹配所有小写字母\n\n> ​`.`​匹配除换行符`\\n\\r`​之外的任何单字符，等于`[^\\r\\n]`​\n\n​`[\\s\\S]`​匹配所有，`\\s`​是匹配所有空白符，包括换行，`\\S`​匹配非空白符，不包括换行\n\n​`[\\w]`​匹配字母，数字，下划线，等价于`[a-zA-Z0-9_]`​\n\n# 非打印字符\n\n​`\\cx`​匹配由`x`​指明的控制字符。例如，`\\cM`​匹配一个`control-M`​或`Enter`​。`x`​的值必须为`[a-zA-Z]`​\n\n​`\\f`​匹配一个`换页符`​，等价于`\\x0c`​和`\\cL`​\n\n​`\\n`​匹配一个`换行符`​，等价于`\\x0a`​和`\\cJ`​\n\n​`\\r`​匹配一个`回车符`​，等价于`\\x0d`​和`\\cM`​\n\n​`\\s`​匹配任何空白字符，包括空格、制表符、换页符等等。等价于`[\\f\\n\\r\\t\\v]`​。Unicode正则表达式会匹配全角空格符\n\n​`\\S`​匹配任何非空白字符，等价于`[^\\f\\n\\r\\t\\v]`​\n\n​`\\t`​匹配一个制表符，等价于`\\x09`​和`\\cI`​\n\n​`\\v`​匹配一个垂直制表符，等价于`\\x0b`​和`\\cK`​\n\n# 特殊字符\n\n​`$`​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用\n\n​`( )`​标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用\n\n> ​`*`​匹配前面的子表达式零次或多次\n\n> ​`+`​匹配前面的子表达式一次或多次\n\n​`.`​匹配除换行符`\\n\\r`​之外的任何单字符，等于`[^\\r\\n]`​\n\n​`[`​标记一个中括号表达式的开始\n\n​`?`​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符\n\n​`\\`​将下一个字符标记为特殊字符、或原意字符、或向后引用、或八进制转义符\n\n​`^`​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符\n\n​`{`​标记限定符表达式的开始\n\n​`|`​指明两项之间的一个选择\n\n# 限定符\n\n限定符用于指定正则表达式的一个给定组件必须要出现多少次才能满足匹配\n\n​`*`​匹配前面的子表达式零次或多次\n\n​`+`​匹配前面的子表达式一次或多次\n\n> ​`*`​和`+`​限定符都是贪婪的，因为它们会尽可能多地匹配文字，只要在它们后面加上一个`?`​就可以实现非贪婪或最小匹配\n\n> ​`?`​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符\n\n​`{n}`​匹配确定的n次，n为非负整数\n\n​`{n,}`​至少匹配n次，n为非负整数\n\n​`{n,m}`​至少匹配n次，至多匹配m次，$m,n$为非负整数，$n\\lt m$  \n\n# 定义符\n\n定义符能将正则表达式固定到行首或行尾\n\n不能将限定符与定位符一起使用，请在正则表达式的开始使用`^`​，不要将`^`​的这种用法与中括号表达式内的\n\n> ​`^`​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符\n\n> ​`$`​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用\n\n​`\\b`​匹配一个单词边界，即字与空格间的位置\n\n​`\\B`​匹配非单词边界\n\n# 组合式\n\n​`/[1-9][0-9]*/`​匹配一个正整数，其中的`[1-9]`​设置第一个数字不为`0`​，`[0-9]*`​表示任意多个数字\n\n​`/[0-9]{1,2}/`​匹配`0-99`​的两位数，并且可以匹配`0,00,01`​等数字\n\n​`/[1-9][0-9]?/`​或`/[1-9][0-9]{0,1}`​匹配`1-99`​的正整数\n\n​`/^Chapter [1-9][0-9]{0,1}/`​匹配一个只有两个数字且出现在行首的章节标题\n\n​`/^Chapter [1-9][0-9]{0,1}$/`​匹配一个既出现在开头又出现在结尾的章节标题数字\n\n​`/\\bCha/`​匹配单词`Chapter`​的开头三个字母，也可匹配到`Charater`​\n\n​`/ter\\b/`​匹配单词`Chapter`​的结尾三个字母，也可匹配到`Charater`​\n\n​`/\\Bapt/`​匹配单词`Chapter`​的中间的`apt`​，但是不能匹配到`aptitude`​\n","source":"_posts/regular-expression-zilx8g.md","raw":"---\ntitle: 正则表达式\ndate: '2023-09-19 14:49:35'\nupdated: '2023-11-05 00:56:07'\npermalink: /post/regular-expression-zilx8g.html\ncomments: true\ntoc: true\n---\n\n\n\n# 正则表达式\n\n# 普通字符\n\n​`[ABC]`​匹配`[...]`​中的所有字符，在单词中找到`A,B,C`​并匹配\n\n​`[^ABC]`​匹配除了`ABC`​之外的所有字符\n\n​`[A-Z]`​匹配一个区间，从`A`​到`Z`​中的所有字母，使用`[a-z]`​匹配所有小写字母\n\n> ​`.`​匹配除换行符`\\n\\r`​之外的任何单字符，等于`[^\\r\\n]`​\n\n​`[\\s\\S]`​匹配所有，`\\s`​是匹配所有空白符，包括换行，`\\S`​匹配非空白符，不包括换行\n\n​`[\\w]`​匹配字母，数字，下划线，等价于`[a-zA-Z0-9_]`​\n\n# 非打印字符\n\n​`\\cx`​匹配由`x`​指明的控制字符。例如，`\\cM`​匹配一个`control-M`​或`Enter`​。`x`​的值必须为`[a-zA-Z]`​\n\n​`\\f`​匹配一个`换页符`​，等价于`\\x0c`​和`\\cL`​\n\n​`\\n`​匹配一个`换行符`​，等价于`\\x0a`​和`\\cJ`​\n\n​`\\r`​匹配一个`回车符`​，等价于`\\x0d`​和`\\cM`​\n\n​`\\s`​匹配任何空白字符，包括空格、制表符、换页符等等。等价于`[\\f\\n\\r\\t\\v]`​。Unicode正则表达式会匹配全角空格符\n\n​`\\S`​匹配任何非空白字符，等价于`[^\\f\\n\\r\\t\\v]`​\n\n​`\\t`​匹配一个制表符，等价于`\\x09`​和`\\cI`​\n\n​`\\v`​匹配一个垂直制表符，等价于`\\x0b`​和`\\cK`​\n\n# 特殊字符\n\n​`$`​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用\n\n​`( )`​标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用\n\n> ​`*`​匹配前面的子表达式零次或多次\n\n> ​`+`​匹配前面的子表达式一次或多次\n\n​`.`​匹配除换行符`\\n\\r`​之外的任何单字符，等于`[^\\r\\n]`​\n\n​`[`​标记一个中括号表达式的开始\n\n​`?`​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符\n\n​`\\`​将下一个字符标记为特殊字符、或原意字符、或向后引用、或八进制转义符\n\n​`^`​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符\n\n​`{`​标记限定符表达式的开始\n\n​`|`​指明两项之间的一个选择\n\n# 限定符\n\n限定符用于指定正则表达式的一个给定组件必须要出现多少次才能满足匹配\n\n​`*`​匹配前面的子表达式零次或多次\n\n​`+`​匹配前面的子表达式一次或多次\n\n> ​`*`​和`+`​限定符都是贪婪的，因为它们会尽可能多地匹配文字，只要在它们后面加上一个`?`​就可以实现非贪婪或最小匹配\n\n> ​`?`​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符\n\n​`{n}`​匹配确定的n次，n为非负整数\n\n​`{n,}`​至少匹配n次，n为非负整数\n\n​`{n,m}`​至少匹配n次，至多匹配m次，$m,n$为非负整数，$n\\lt m$  \n\n# 定义符\n\n定义符能将正则表达式固定到行首或行尾\n\n不能将限定符与定位符一起使用，请在正则表达式的开始使用`^`​，不要将`^`​的这种用法与中括号表达式内的\n\n> ​`^`​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符\n\n> ​`$`​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用\n\n​`\\b`​匹配一个单词边界，即字与空格间的位置\n\n​`\\B`​匹配非单词边界\n\n# 组合式\n\n​`/[1-9][0-9]*/`​匹配一个正整数，其中的`[1-9]`​设置第一个数字不为`0`​，`[0-9]*`​表示任意多个数字\n\n​`/[0-9]{1,2}/`​匹配`0-99`​的两位数，并且可以匹配`0,00,01`​等数字\n\n​`/[1-9][0-9]?/`​或`/[1-9][0-9]{0,1}`​匹配`1-99`​的正整数\n\n​`/^Chapter [1-9][0-9]{0,1}/`​匹配一个只有两个数字且出现在行首的章节标题\n\n​`/^Chapter [1-9][0-9]{0,1}$/`​匹配一个既出现在开头又出现在结尾的章节标题数字\n\n​`/\\bCha/`​匹配单词`Chapter`​的开头三个字母，也可匹配到`Charater`​\n\n​`/ter\\b/`​匹配单词`Chapter`​的结尾三个字母，也可匹配到`Charater`​\n\n​`/\\Bapt/`​匹配单词`Chapter`​的中间的`apt`​，但是不能匹配到`aptitude`​\n","slug":"regular-expression-zilx8g","published":1,"__permalink":"/post/regular-expression-zilx8g.html","layout":"post","photos":[],"link":"post/regular-expression-zilx8g","_id":"clqqv4obb0007vsme6uv02u2k","content":"<h1 id=\"正则表达式\">正则表达式<a title=\"#正则表达式\" href=\"#正则表达式\"></a></h1>\n<h1 id=\"普通字符\">普通字符<a title=\"#普通字符\" href=\"#普通字符\"></a></h1>\n<p>​<code>[ABC]</code>​匹配<code>[...]</code>​中的所有字符，在单词中找到<code>A,B,C</code>​并匹配</p>\n<p>​<code>[^ABC]</code>​匹配除了<code>ABC</code>​之外的所有字符</p>\n<p>​<code>[A-Z]</code>​匹配一个区间，从<code>A</code>​到<code>Z</code>​中的所有字母，使用<code>[a-z]</code>​匹配所有小写字母</p>\n<blockquote>\n<p>​<code>.</code>​匹配除换行符<code>\\n\\r</code>​之外的任何单字符，等于<code>[^\\r\\n]</code>​</p>\n</blockquote>\n<p>​<code>[\\s\\S]</code>​匹配所有，<code>\\s</code>​是匹配所有空白符，包括换行，<code>\\S</code>​匹配非空白符，不包括换行</p>\n<p>​<code>[\\w]</code>​匹配字母，数字，下划线，等价于<code>[a-zA-Z0-9_]</code>​</p>\n<h1 id=\"非打印字符\">非打印字符<a title=\"#非打印字符\" href=\"#非打印字符\"></a></h1>\n<p>​<code>\\cx</code>​匹配由<code>x</code>​指明的控制字符。例如，<code>\\cM</code>​匹配一个<code>control-M</code>​或<code>Enter</code>​。<code>x</code>​的值必须为<code>[a-zA-Z]</code>​</p>\n<p>​<code>\\f</code>​匹配一个<code>换页符</code>​，等价于<code>\\x0c</code>​和<code>\\cL</code>​</p>\n<p>​<code>\\n</code>​匹配一个<code>换行符</code>​，等价于<code>\\x0a</code>​和<code>\\cJ</code>​</p>\n<p>​<code>\\r</code>​匹配一个<code>回车符</code>​，等价于<code>\\x0d</code>​和<code>\\cM</code>​</p>\n<p>​<code>\\s</code>​匹配任何空白字符，包括空格、制表符、换页符等等。等价于<code>[\\f\\n\\r\\t\\v]</code>​。Unicode正则表达式会匹配全角空格符</p>\n<p>​<code>\\S</code>​匹配任何非空白字符，等价于<code>[^\\f\\n\\r\\t\\v]</code>​</p>\n<p>​<code>\\t</code>​匹配一个制表符，等价于<code>\\x09</code>​和<code>\\cI</code>​</p>\n<p>​<code>\\v</code>​匹配一个垂直制表符，等价于<code>\\x0b</code>​和<code>\\cK</code>​</p>\n<h1 id=\"特殊字符\">特殊字符<a title=\"#特殊字符\" href=\"#特殊字符\"></a></h1>\n<p>​<code>$</code>​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用</p>\n<p>​<code>( )</code>​标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用</p>\n<blockquote>\n<p>​<code>*</code>​匹配前面的子表达式零次或多次</p>\n</blockquote>\n<blockquote>\n<p>​<code>+</code>​匹配前面的子表达式一次或多次</p>\n</blockquote>\n<p>​<code>.</code>​匹配除换行符<code>\\n\\r</code>​之外的任何单字符，等于<code>[^\\r\\n]</code>​</p>\n<p>​<code>[</code>​标记一个中括号表达式的开始</p>\n<p>​<code>?</code>​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符</p>\n<p>​<code>\\</code>​将下一个字符标记为特殊字符、或原意字符、或向后引用、或八进制转义符</p>\n<p>​<code>^</code>​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符</p>\n<p>​<code>&#123;</code>​标记限定符表达式的开始</p>\n<p>​<code>|</code>​指明两项之间的一个选择</p>\n<h1 id=\"限定符\">限定符<a title=\"#限定符\" href=\"#限定符\"></a></h1>\n<p>限定符用于指定正则表达式的一个给定组件必须要出现多少次才能满足匹配</p>\n<p>​<code>*</code>​匹配前面的子表达式零次或多次</p>\n<p>​<code>+</code>​匹配前面的子表达式一次或多次</p>\n<blockquote>\n<p>​<code>*</code>​和<code>+</code>​限定符都是贪婪的，因为它们会尽可能多地匹配文字，只要在它们后面加上一个<code>?</code>​就可以实现非贪婪或最小匹配</p>\n</blockquote>\n<blockquote>\n<p>​<code>?</code>​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符</p>\n</blockquote>\n<p>​<code>&#123;n&#125;</code>​匹配确定的n次，n为非负整数</p>\n<p>​<code>&#123;n,&#125;</code>​至少匹配n次，n为非负整数</p>\n<p>​<code>&#123;n,m&#125;</code>​至少匹配n次，至多匹配m次，$m,n$为非负整数，$n\\lt m$</p>\n<h1 id=\"定义符\">定义符<a title=\"#定义符\" href=\"#定义符\"></a></h1>\n<p>定义符能将正则表达式固定到行首或行尾</p>\n<p>不能将限定符与定位符一起使用，请在正则表达式的开始使用<code>^</code>​，不要将<code>^</code>​的这种用法与中括号表达式内的</p>\n<blockquote>\n<p>​<code>^</code>​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符</p>\n</blockquote>\n<blockquote>\n<p>​<code>$</code>​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用</p>\n</blockquote>\n<p>​<code>\\b</code>​匹配一个单词边界，即字与空格间的位置</p>\n<p>​<code>\\B</code>​匹配非单词边界</p>\n<h1 id=\"组合式\">组合式<a title=\"#组合式\" href=\"#组合式\"></a></h1>\n<p>​<code>/[1-9][0-9]*/</code>​匹配一个正整数，其中的<code>[1-9]</code>​设置第一个数字不为<code>0</code>​，<code>[0-9]*</code>​表示任意多个数字</p>\n<p>​<code>/[0-9]&#123;1,2&#125;/</code>​匹配<code>0-99</code>​的两位数，并且可以匹配<code>0,00,01</code>​等数字</p>\n<p>​<code>/[1-9][0-9]?/</code>​或<code>/[1-9][0-9]&#123;0,1&#125;</code>​匹配<code>1-99</code>​的正整数</p>\n<p>​<code>/^Chapter [1-9][0-9]&#123;0,1&#125;/</code>​匹配一个只有两个数字且出现在行首的章节标题</p>\n<p>​<code>/^Chapter [1-9][0-9]&#123;0,1&#125;$/</code>​匹配一个既出现在开头又出现在结尾的章节标题数字</p>\n<p>​<code>/\\bCha/</code>​匹配单词<code>Chapter</code>​的开头三个字母，也可匹配到<code>Charater</code>​</p>\n<p>​<code>/ter\\b/</code>​匹配单词<code>Chapter</code>​的结尾三个字母，也可匹配到<code>Charater</code>​</p>\n<p>​<code>/\\Bapt/</code>​匹配单词<code>Chapter</code>​的中间的<code>apt</code>​，但是不能匹配到<code>aptitude</code>​</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"正则表达式\">正则表达式<a title=\"#正则表达式\" href=\"#正则表达式\"></a></h1>\n<h1 id=\"普通字符\">普通字符<a title=\"#普通字符\" href=\"#普通字符\"></a></h1>\n<p>​<code>[ABC]</code>​匹配<code>[...]</code>​中的所有字符，在单词中找到<code>A,B,C</code>​并匹配</p>\n<p>​<code>[^ABC]</code>​匹配除了<code>ABC</code>​之外的所有字符</p>\n<p>​<code>[A-Z]</code>​匹配一个区间，从<code>A</code>​到<code>Z</code>​中的所有字母，使用<code>[a-z]</code>​匹配所有小写字母</p>\n<blockquote>\n<p>​<code>.</code>​匹配除换行符<code>\\n\\r</code>​之外的任何单字符，等于<code>[^\\r\\n]</code>​</p>\n</blockquote>\n<p>​<code>[\\s\\S]</code>​匹配所有，<code>\\s</code>​是匹配所有空白符，包括换行，<code>\\S</code>​匹配非空白符，不包括换行</p>\n<p>​<code>[\\w]</code>​匹配字母，数字，下划线，等价于<code>[a-zA-Z0-9_]</code>​</p>\n<h1 id=\"非打印字符\">非打印字符<a title=\"#非打印字符\" href=\"#非打印字符\"></a></h1>\n<p>​<code>\\cx</code>​匹配由<code>x</code>​指明的控制字符。例如，<code>\\cM</code>​匹配一个<code>control-M</code>​或<code>Enter</code>​。<code>x</code>​的值必须为<code>[a-zA-Z]</code>​</p>\n<p>​<code>\\f</code>​匹配一个<code>换页符</code>​，等价于<code>\\x0c</code>​和<code>\\cL</code>​</p>\n<p>​<code>\\n</code>​匹配一个<code>换行符</code>​，等价于<code>\\x0a</code>​和<code>\\cJ</code>​</p>\n<p>​<code>\\r</code>​匹配一个<code>回车符</code>​，等价于<code>\\x0d</code>​和<code>\\cM</code>​</p>\n<p>​<code>\\s</code>​匹配任何空白字符，包括空格、制表符、换页符等等。等价于<code>[\\f\\n\\r\\t\\v]</code>​。Unicode正则表达式会匹配全角空格符</p>\n<p>​<code>\\S</code>​匹配任何非空白字符，等价于<code>[^\\f\\n\\r\\t\\v]</code>​</p>\n<p>​<code>\\t</code>​匹配一个制表符，等价于<code>\\x09</code>​和<code>\\cI</code>​</p>\n<p>​<code>\\v</code>​匹配一个垂直制表符，等价于<code>\\x0b</code>​和<code>\\cK</code>​</p>\n<h1 id=\"特殊字符\">特殊字符<a title=\"#特殊字符\" href=\"#特殊字符\"></a></h1>\n<p>​<code>$</code>​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用</p>\n<p>​<code>( )</code>​标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用</p>\n<blockquote>\n<p>​<code>*</code>​匹配前面的子表达式零次或多次</p>\n</blockquote>\n<blockquote>\n<p>​<code>+</code>​匹配前面的子表达式一次或多次</p>\n</blockquote>\n<p>​<code>.</code>​匹配除换行符<code>\\n\\r</code>​之外的任何单字符，等于<code>[^\\r\\n]</code>​</p>\n<p>​<code>[</code>​标记一个中括号表达式的开始</p>\n<p>​<code>?</code>​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符</p>\n<p>​<code>\\</code>​将下一个字符标记为特殊字符、或原意字符、或向后引用、或八进制转义符</p>\n<p>​<code>^</code>​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符</p>\n<p>​<code>&#123;</code>​标记限定符表达式的开始</p>\n<p>​<code>|</code>​指明两项之间的一个选择</p>\n<h1 id=\"限定符\">限定符<a title=\"#限定符\" href=\"#限定符\"></a></h1>\n<p>限定符用于指定正则表达式的一个给定组件必须要出现多少次才能满足匹配</p>\n<p>​<code>*</code>​匹配前面的子表达式零次或多次</p>\n<p>​<code>+</code>​匹配前面的子表达式一次或多次</p>\n<blockquote>\n<p>​<code>*</code>​和<code>+</code>​限定符都是贪婪的，因为它们会尽可能多地匹配文字，只要在它们后面加上一个<code>?</code>​就可以实现非贪婪或最小匹配</p>\n</blockquote>\n<blockquote>\n<p>​<code>?</code>​匹配前面的子表达式零次或一次，或指明一个非贪婪限定符</p>\n</blockquote>\n<p>​<code>&#123;n&#125;</code>​匹配确定的n次，n为非负整数</p>\n<p>​<code>&#123;n,&#125;</code>​至少匹配n次，n为非负整数</p>\n<p>​<code>&#123;n,m&#125;</code>​至少匹配n次，至多匹配m次，$m,n$为非负整数，$n\\lt m$</p>\n<h1 id=\"定义符\">定义符<a title=\"#定义符\" href=\"#定义符\"></a></h1>\n<p>定义符能将正则表达式固定到行首或行尾</p>\n<p>不能将限定符与定位符一起使用，请在正则表达式的开始使用<code>^</code>​，不要将<code>^</code>​的这种用法与中括号表达式内的</p>\n<blockquote>\n<p>​<code>^</code>​匹配输入字符串的开始位置，用法为在正则表达式的开头使用，除非在方括号表达式中使用，此时表示除方括号内字符外的字符</p>\n</blockquote>\n<blockquote>\n<p>​<code>$</code>​匹配输入字符串的结尾位置，用法为在正则表达式的结尾使用</p>\n</blockquote>\n<p>​<code>\\b</code>​匹配一个单词边界，即字与空格间的位置</p>\n<p>​<code>\\B</code>​匹配非单词边界</p>\n<h1 id=\"组合式\">组合式<a title=\"#组合式\" href=\"#组合式\"></a></h1>\n<p>​<code>/[1-9][0-9]*/</code>​匹配一个正整数，其中的<code>[1-9]</code>​设置第一个数字不为<code>0</code>​，<code>[0-9]*</code>​表示任意多个数字</p>\n<p>​<code>/[0-9]&#123;1,2&#125;/</code>​匹配<code>0-99</code>​的两位数，并且可以匹配<code>0,00,01</code>​等数字</p>\n<p>​<code>/[1-9][0-9]?/</code>​或<code>/[1-9][0-9]&#123;0,1&#125;</code>​匹配<code>1-99</code>​的正整数</p>\n<p>​<code>/^Chapter [1-9][0-9]&#123;0,1&#125;/</code>​匹配一个只有两个数字且出现在行首的章节标题</p>\n<p>​<code>/^Chapter [1-9][0-9]&#123;0,1&#125;$/</code>​匹配一个既出现在开头又出现在结尾的章节标题数字</p>\n<p>​<code>/\\bCha/</code>​匹配单词<code>Chapter</code>​的开头三个字母，也可匹配到<code>Charater</code>​</p>\n<p>​<code>/ter\\b/</code>​匹配单词<code>Chapter</code>​的结尾三个字母，也可匹配到<code>Charater</code>​</p>\n<p>​<code>/\\Bapt/</code>​匹配单词<code>Chapter</code>​的中间的<code>apt</code>​，但是不能匹配到<code>aptitude</code>​</p>\n","date_formatted":{"ll":"2023年9月19日","L":"2023/09/19","MM-DD":"09-19"},"plink":"http://lingfengyu-dreaming.github.io/post/regular-expression-zilx8g/","type":"post","reading_time":"1115 字约 7 分钟"},{"title":"windows家庭版启用沙盒","date":"2023-10-17T15:23:19.000Z","updated":"2023-10-17T15:49:19.000Z","comments":0,"toc":[{"id":"windows家庭版启用沙盒","title":"windows家庭版启用沙盒","index":"1"}],"_content":"\n\n\n# windows家庭版启用沙盒\n\nWindows家庭版没有办法在Windows功能中开启沙盒，需要采取特殊的方法。\n\n1. 首先开启电脑的虚拟化（需要检查BIOS）\n2. 复制下列内容并创建为`.bat`​文件\n\n    ```bat\n    @echo off\n\n    echo Checking for permissions\n    >nul 2>&1 \"%SYSTEMROOT%\\system32\\cacls.exe\" \"%SYSTEMROOT%\\system32\\config\\system\"\n\n    echo Permission check result: %errorlevel%\n\n    REM --> If error flag set, we do not have admin.\n    if '%errorlevel%' NEQ '0' (\n    echo Requesting administrative privileges...\n    goto UACPrompt\n    ) else ( goto gotAdmin )\n\n    :UACPrompt\n    echo Set UAC = CreateObject^(\"Shell.Application\"^) > \"%temp%\\getadmin.vbs\"\n    echo UAC.ShellExecute \"%~s0\", \"\", \"\", \"runas\", 1 >> \"%temp%\\getadmin.vbs\"\n\n    echo Running created temporary \"%temp%\\getadmin.vbs\"\n    timeout /T 2\n    \"%temp%\\getadmin.vbs\"\n    exit /B\n\n    :gotAdmin\n    if exist \"%temp%\\getadmin.vbs\" ( del \"%temp%\\getadmin.vbs\" )\n    pushd \"%CD%\"\n    CD /D \"%~dp0\" \n\n    echo Batch was successfully started with admin privileges\n    echo .\n    cls\n    Title Sandbox Installer\n\n    pushd \"%~dp0\"\n\n    dir /b %SystemRoot%\\servicing\\Packages\\*Containers*.mum >sandbox.txt\n\n    for /f %%i in ('findstr /i . sandbox.txt 2^>nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages\\%%i\"\n\n    del sandbox.txt\n\n    Dism /online /enable-feature /featurename:Containers-DisposableClientVM /LimitAccess /ALL\n\n    pause\n    ```\n3. 以管理员权限运行上述`.bat`​文件\n4. 运行完成后启动Windows功能，打开Windows沙盒功能，安装沙盒\n5. 安装完成后可以启用Windows沙盒\n6. 需要删除Windows沙盒时，在CMD中粘贴下列代码并运行\n\n    ```powershell\n    Dism /online /Disable-Feature /FeatureName:\"Containers-DisposableClientVM\"\n    ```\n7. 专业版可以直接在Windows功能中启用Windows沙盒，无需进行上述步骤\n","source":"_posts/windows-family-edition-enable-sand-box-1si53v.md","raw":"---\ntitle: windows家庭版启用沙盒\ndate: '2023-10-17 23:23:19'\nupdated: '2023-10-17 23:49:19'\npermalink: /post/windows-family-edition-enable-sand-box-1si53v.html\ncomments: true\ntoc: true\n---\n\n\n\n# windows家庭版启用沙盒\n\nWindows家庭版没有办法在Windows功能中开启沙盒，需要采取特殊的方法。\n\n1. 首先开启电脑的虚拟化（需要检查BIOS）\n2. 复制下列内容并创建为`.bat`​文件\n\n    ```bat\n    @echo off\n\n    echo Checking for permissions\n    >nul 2>&1 \"%SYSTEMROOT%\\system32\\cacls.exe\" \"%SYSTEMROOT%\\system32\\config\\system\"\n\n    echo Permission check result: %errorlevel%\n\n    REM --> If error flag set, we do not have admin.\n    if '%errorlevel%' NEQ '0' (\n    echo Requesting administrative privileges...\n    goto UACPrompt\n    ) else ( goto gotAdmin )\n\n    :UACPrompt\n    echo Set UAC = CreateObject^(\"Shell.Application\"^) > \"%temp%\\getadmin.vbs\"\n    echo UAC.ShellExecute \"%~s0\", \"\", \"\", \"runas\", 1 >> \"%temp%\\getadmin.vbs\"\n\n    echo Running created temporary \"%temp%\\getadmin.vbs\"\n    timeout /T 2\n    \"%temp%\\getadmin.vbs\"\n    exit /B\n\n    :gotAdmin\n    if exist \"%temp%\\getadmin.vbs\" ( del \"%temp%\\getadmin.vbs\" )\n    pushd \"%CD%\"\n    CD /D \"%~dp0\" \n\n    echo Batch was successfully started with admin privileges\n    echo .\n    cls\n    Title Sandbox Installer\n\n    pushd \"%~dp0\"\n\n    dir /b %SystemRoot%\\servicing\\Packages\\*Containers*.mum >sandbox.txt\n\n    for /f %%i in ('findstr /i . sandbox.txt 2^>nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages\\%%i\"\n\n    del sandbox.txt\n\n    Dism /online /enable-feature /featurename:Containers-DisposableClientVM /LimitAccess /ALL\n\n    pause\n    ```\n3. 以管理员权限运行上述`.bat`​文件\n4. 运行完成后启动Windows功能，打开Windows沙盒功能，安装沙盒\n5. 安装完成后可以启用Windows沙盒\n6. 需要删除Windows沙盒时，在CMD中粘贴下列代码并运行\n\n    ```powershell\n    Dism /online /Disable-Feature /FeatureName:\"Containers-DisposableClientVM\"\n    ```\n7. 专业版可以直接在Windows功能中启用Windows沙盒，无需进行上述步骤\n","slug":"windows-family-edition-enable-sand-box-1si53v","published":1,"__permalink":"/post/windows-family-edition-enable-sand-box-1si53v.html","layout":"post","photos":[],"link":"post/windows-family-edition-enable-sand-box-1si53v","_id":"clqqv4obb0008vsme5xts23qt","content":"<h1 id=\"windows家庭版启用沙盒\">windows家庭版启用沙盒<a title=\"#windows家庭版启用沙盒\" href=\"#windows家庭版启用沙盒\"></a></h1>\n<p>Windows家庭版没有办法在Windows功能中开启沙盒，需要采取特殊的方法。</p>\n<ol>\n<li>\n<p>首先开启电脑的虚拟化（需要检查BIOS）</p>\n</li>\n<li>\n<p>复制下列内容并创建为<code>.bat</code>​文件</p>\n <figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Checking <span class=\"keyword\">for</span> permissions</span><br><span class=\"line\">&gt;<span class=\"built_in\">nul</span> <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> &quot;<span class=\"variable\">%SYSTEMROOT%</span>\\system32\\<span class=\"built_in\">cacls</span>.exe&quot; &quot;<span class=\"variable\">%SYSTEMROOT%</span>\\system32\\config\\system&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Permission check result: <span class=\"variable\">%errorlevel%</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">REM --&gt; If error flag set, we do not have admin.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> &#x27;<span class=\"variable\">%errorlevel%</span>&#x27; <span class=\"keyword\">NEQ</span> &#x27;<span class=\"number\">0</span>&#x27; (</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Requesting administrative privileges...</span><br><span class=\"line\"><span class=\"keyword\">goto</span> UACPrompt</span><br><span class=\"line\">) <span class=\"keyword\">else</span> ( <span class=\"keyword\">goto</span> gotAdmin )</span><br><span class=\"line\"></span><br><span class=\"line\">:UACPrompt</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"built_in\">Set</span> UAC = CreateObject^(&quot;Shell.Application&quot;^) &gt; &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> UAC.ShellExecute &quot;%~s0&quot;, &quot;&quot;, &quot;&quot;, &quot;runas&quot;, <span class=\"number\">1</span> &gt;&gt; &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Running created temporary &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot;</span><br><span class=\"line\">timeout /T <span class=\"number\">2</span></span><br><span class=\"line\">&quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot;</span><br><span class=\"line\"><span class=\"keyword\">exit</span> /B</span><br><span class=\"line\"></span><br><span class=\"line\">:gotAdmin</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">exist</span> &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot; ( <span class=\"built_in\">del</span> &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot; )</span><br><span class=\"line\"><span class=\"built_in\">pushd</span> &quot;<span class=\"variable\">%CD%</span>&quot;</span><br><span class=\"line\"><span class=\"built_in\">CD</span> /D &quot;%~dp0&quot; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Batch was successfully started with admin privileges</span><br><span class=\"line\"><span class=\"built_in\">echo</span> .</span><br><span class=\"line\"><span class=\"built_in\">cls</span></span><br><span class=\"line\"><span class=\"built_in\">Title</span> Sandbox Installer</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">pushd</span> &quot;%~dp0&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dir</span> /b <span class=\"variable\">%SystemRoot%</span>\\servicing\\Packages\\*Containers*.mum &gt;sandbox.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f <span class=\"variable\">%%i</span> <span class=\"keyword\">in</span> (&#x27;<span class=\"built_in\">findstr</span> /i . sandbox.txt <span class=\"number\">2</span>^&gt;<span class=\"built_in\">nul</span>&#x27;) <span class=\"keyword\">do</span> dism /online /norestart /add-package:&quot;<span class=\"variable\">%SystemRoot%</span>\\servicing\\Packages\\<span class=\"variable\">%%i</span>&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">del</span> sandbox.txt</span><br><span class=\"line\"></span><br><span class=\"line\">Dism /online /enable-feature /featurename:Containers-DisposableClientVM /LimitAccess /ALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">pause</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>以管理员权限运行上述<code>.bat</code>​文件</p>\n</li>\n<li>\n<p>运行完成后启动Windows功能，打开Windows沙盒功能，安装沙盒</p>\n</li>\n<li>\n<p>安装完成后可以启用Windows沙盒</p>\n</li>\n<li>\n<p>需要删除Windows沙盒时，在CMD中粘贴下列代码并运行</p>\n <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dism /online /<span class=\"built_in\">Disable-Feature</span> /FeatureName:<span class=\"string\">&quot;Containers-DisposableClientVM&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>专业版可以直接在Windows功能中启用Windows沙盒，无需进行上述步骤</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"windows家庭版启用沙盒\">windows家庭版启用沙盒<a title=\"#windows家庭版启用沙盒\" href=\"#windows家庭版启用沙盒\"></a></h1>\n<p>Windows家庭版没有办法在Windows功能中开启沙盒，需要采取特殊的方法。</p>\n<ol>\n<li>\n<p>首先开启电脑的虚拟化（需要检查BIOS）</p>\n</li>\n<li>\n<p>复制下列内容并创建为<code>.bat</code>​文件</p>\n <figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Checking <span class=\"keyword\">for</span> permissions</span><br><span class=\"line\">&gt;<span class=\"built_in\">nul</span> <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> &quot;<span class=\"variable\">%SYSTEMROOT%</span>\\system32\\<span class=\"built_in\">cacls</span>.exe&quot; &quot;<span class=\"variable\">%SYSTEMROOT%</span>\\system32\\config\\system&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Permission check result: <span class=\"variable\">%errorlevel%</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">REM --&gt; If error flag set, we do not have admin.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> &#x27;<span class=\"variable\">%errorlevel%</span>&#x27; <span class=\"keyword\">NEQ</span> &#x27;<span class=\"number\">0</span>&#x27; (</span><br><span class=\"line\"><span class=\"built_in\">echo</span> Requesting administrative privileges...</span><br><span class=\"line\"><span class=\"keyword\">goto</span> UACPrompt</span><br><span class=\"line\">) <span class=\"keyword\">else</span> ( <span class=\"keyword\">goto</span> gotAdmin )</span><br><span class=\"line\"></span><br><span class=\"line\">:UACPrompt</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"built_in\">Set</span> UAC = CreateObject^(&quot;Shell.Application&quot;^) &gt; &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> UAC.ShellExecute &quot;%~s0&quot;, &quot;&quot;, &quot;&quot;, &quot;runas&quot;, <span class=\"number\">1</span> &gt;&gt; &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Running created temporary &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot;</span><br><span class=\"line\">timeout /T <span class=\"number\">2</span></span><br><span class=\"line\">&quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot;</span><br><span class=\"line\"><span class=\"keyword\">exit</span> /B</span><br><span class=\"line\"></span><br><span class=\"line\">:gotAdmin</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">exist</span> &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot; ( <span class=\"built_in\">del</span> &quot;<span class=\"variable\">%temp%</span>\\getadmin.vbs&quot; )</span><br><span class=\"line\"><span class=\"built_in\">pushd</span> &quot;<span class=\"variable\">%CD%</span>&quot;</span><br><span class=\"line\"><span class=\"built_in\">CD</span> /D &quot;%~dp0&quot; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> Batch was successfully started with admin privileges</span><br><span class=\"line\"><span class=\"built_in\">echo</span> .</span><br><span class=\"line\"><span class=\"built_in\">cls</span></span><br><span class=\"line\"><span class=\"built_in\">Title</span> Sandbox Installer</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">pushd</span> &quot;%~dp0&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dir</span> /b <span class=\"variable\">%SystemRoot%</span>\\servicing\\Packages\\*Containers*.mum &gt;sandbox.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f <span class=\"variable\">%%i</span> <span class=\"keyword\">in</span> (&#x27;<span class=\"built_in\">findstr</span> /i . sandbox.txt <span class=\"number\">2</span>^&gt;<span class=\"built_in\">nul</span>&#x27;) <span class=\"keyword\">do</span> dism /online /norestart /add-package:&quot;<span class=\"variable\">%SystemRoot%</span>\\servicing\\Packages\\<span class=\"variable\">%%i</span>&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">del</span> sandbox.txt</span><br><span class=\"line\"></span><br><span class=\"line\">Dism /online /enable-feature /featurename:Containers-DisposableClientVM /LimitAccess /ALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">pause</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>以管理员权限运行上述<code>.bat</code>​文件</p>\n</li>\n<li>\n<p>运行完成后启动Windows功能，打开Windows沙盒功能，安装沙盒</p>\n</li>\n<li>\n<p>安装完成后可以启用Windows沙盒</p>\n</li>\n<li>\n<p>需要删除Windows沙盒时，在CMD中粘贴下列代码并运行</p>\n <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dism /online /<span class=\"built_in\">Disable-Feature</span> /FeatureName:<span class=\"string\">&quot;Containers-DisposableClientVM&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>专业版可以直接在Windows功能中启用Windows沙盒，无需进行上述步骤</p>\n</li>\n</ol>\n","date_formatted":{"ll":"2023年10月17日","L":"2023/10/17","MM-DD":"10-17"},"plink":"http://lingfengyu-dreaming.github.io/post/windows-family-edition-enable-sand-box-1si53v/","type":"post","reading_time":"362 字约 2 分钟"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}