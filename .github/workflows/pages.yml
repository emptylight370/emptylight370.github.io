name: GitHub Pages

on:
  push:
    branches:
      - main # default branch
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
        # with:
          # token: ${{ secrets.GITHUB_TOKEN }}
          # If your repository depends on submodule, please see: https://github.com/actions/checkout
          # submodules: recursive
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache
          restore-keys: |
            ${{ runner.OS }}-npm-cache
      - name: Install Dependencies
        run: npm install
      # - name: Hexo Clean Cache
      #   run: hexo clean
      - name: Build
        run: npm run build
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public
  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
  sendCOS:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Upload COS
        env:
          SECRET_ID: ${{ secrets.TCLOUD_ID }}
          SECRET_KEY: ${{ secrets.TCLOUD_KEY }}
          BUCKET: ${{ secrets.TCLOUD_BUCKET }}
          REGION: ${{ secrets.TCLOUD_REGION }}
        uses: TencentCloud/cos-action@v1
        with:
          secret_id: $SECRET_ID
          secret_key: $SECRET_KEY
          cos_bucket: $BUCKET
          cos_region: $REGION
          local_path: public
          remote_path: /
          clean: true
      # - name: Install COS deps
        # run: pip install coscmd
      # - name: Set COS deps & Upload COS
        # env:
         # SECRET_ID: ${{ secrets.TCLOUD_ID }}
         # SECRET_KEY: ${{ secrets.TCLOUD_KEY }}
         # BUCKET: ${{ secrets.TCLOUD_BUCKET }}
         # REGION: ${{ secrets.TCLOUD_REGION }}
       # run: |
         # coscmd config -a "$SECRET_ID" -s "$SECRET_KEY" -b "$BUCKET" -r "$REGION"
         # coscmd upload -rs --delete ./public/ /
